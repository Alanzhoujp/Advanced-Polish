//Author: Alan Zhou
//Date of creation: 31/03/2023 - 02/04/2023
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class AdvancedPolish extends MouseAdapter implements ActionListener, PropertyChangeListener {
  public static void main(String[] args)
  throws ClassNotFoundException, InstantiationException, IllegalAccessException,
  UnsupportedLookAndFeelException, UnsupportedAudioFileException, IOException, LineUnavailableException {
    new AdvancedPolish();
  }
  AudioInputStream welcomeMessageAIS;
  AudioInputStream[] EX_PL_AIS, EG_PL_AIS;
  Clip welcomeMessageClip;
  Clip[] EX_PL_Clip, EG_PL_Clip;
  Color colorEN, colorPL;
  Font[] font;
  ImageIcon advancedPolishIcon;
  KeyStroke ctrlC, ctrlF, ctrlS, ctrlV;
  KeyStroke[] alt;
  JCheckBoxMenuItem[] topicMI;
  JDesktopPane programDesktop;
  JDialog aboutDialog;
  JFrame programFrame;
  JInternalFrame EX_InFra, EG_InFra;
  JLabel aboutText, welcomeMessage;
  JLabel[] EX_EN, EG_EN, EX_PL, EG_PL;
  JMenu[] menu;
  JMenuBar menuBar;
  JMenuItem[] settingsMI;
  JPanel mainPage, EG_Panel;
  JPanel[] EX_Panel;
  URL welcomeMessageURL;
  URL[] EX_PL_URL, EG_PL_URL;
  AdvancedPolish() throws ClassNotFoundException, InstantiationException, IllegalAccessException,
    UnsupportedLookAndFeelException, UnsupportedAudioFileException, IOException, LineUnavailableException {
      UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
      colorEN = new Color(0, 33, 100);
      colorPL = new Color(134, 0, 0);
      font = new Font[10];
      font[0] = new Font("Arial", Font.PLAIN, 20);
      font[1] = new Font("Courier New", Font.PLAIN, 30);
      font[2] = new Font("Times New Roman", Font.PLAIN, 20);
      font[3] = new Font("Times New Roman", Font.ITALIC, 22);
      font[4] = new Font("Times New Roman", Font.ITALIC, 18);
      font[5] = new Font("Times New Roman", Font.PLAIN, 18);
      font[6] = new Font("Times New Roman", Font.PLAIN, 16);
      aboutText = new JLabel("<html> This program is intended for studying the words and expressions" +
        " included in the Archive for the 'Advanced Polish' Category on the website: https://www.polishpod101.com" +
        " <br>This program is created by Alan Zhou, and its development is still in progress. Stay tuned. <br><br> March 31, 2023" +
        "<br><br> Update: the version 1.0 of this program has been released as of April 2, 2023. If you have any feedback or questions, feel free to email me at" +
        " alanzhoujp@gmail.com<br><br>April 2, 2023<br><br>Alan Zhou<html>");
      aboutText.setBounds(0, 0, 500, 400);
      aboutText.setFont(font[0]);
      advancedPolishIcon = new ImageIcon(getClass().getClassLoader().getResource("AdvancedPolishIcon.png"));
      aboutDialog = new JDialog();
      aboutDialog.add(aboutText);
      aboutDialog.setAlwaysOnTop(true);
      aboutDialog.setBounds(200, 200, 500, 450);
      aboutDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
      aboutDialog.setIconImage(advancedPolishIcon.getImage());
      aboutDialog.setResizable(false);
      aboutDialog.setTitle("About");
      alt = new KeyStroke[11];
      alt[0] = KeyStroke.getKeyStroke(KeyEvent.VK_0, KeyEvent.ALT_DOWN_MASK);
      alt[1] = KeyStroke.getKeyStroke(KeyEvent.VK_1, KeyEvent.ALT_DOWN_MASK);
      alt[2] = KeyStroke.getKeyStroke(KeyEvent.VK_2, KeyEvent.ALT_DOWN_MASK);
      alt[3] = KeyStroke.getKeyStroke(KeyEvent.VK_3, KeyEvent.ALT_DOWN_MASK);
      alt[4] = KeyStroke.getKeyStroke(KeyEvent.VK_4, KeyEvent.ALT_DOWN_MASK);
      alt[5] = KeyStroke.getKeyStroke(KeyEvent.VK_5, KeyEvent.ALT_DOWN_MASK);
      alt[6] = KeyStroke.getKeyStroke(KeyEvent.VK_6, KeyEvent.ALT_DOWN_MASK);
      alt[7] = KeyStroke.getKeyStroke(KeyEvent.VK_7, KeyEvent.ALT_DOWN_MASK);
      alt[8] = KeyStroke.getKeyStroke(KeyEvent.VK_8, KeyEvent.ALT_DOWN_MASK);
      alt[9] = KeyStroke.getKeyStroke(KeyEvent.VK_9, KeyEvent.ALT_DOWN_MASK);
      alt[10] = KeyStroke.getKeyStroke(KeyEvent.VK_A, KeyEvent.ALT_DOWN_MASK);
      menu = new JMenu[5];
      menu[0] = new JMenu("Main Page");
      menu[1] = new JMenu("Topics");
      menu[2] = new JMenu("Settings");
      menu[3] = new JMenu("About");
      menu[4] = new JMenu("Exit");
      menu[0].setMnemonic(KeyEvent.VK_M);
      menu[1].setMnemonic(KeyEvent.VK_T);
      menu[2].setMnemonic(KeyEvent.VK_S);
      menu[3].setMnemonic(KeyEvent.VK_A);
      menu[4].setMnemonic(KeyEvent.VK_E);
      menuBar = new JMenuBar();
      for (int i = 0; i < 5; i++) {
        menu[i].addMouseListener(this);
        menu[i].setFont(font[0]);
        menuBar.add(menu[i]);
      }
      topicMI = new JCheckBoxMenuItem[10];
      topicMI[0] = new JCheckBoxMenuItem("Must-Know Advanced Polish Phrases - Useful Phrases for Academic Writing");
      topicMI[1] = new JCheckBoxMenuItem("Must-Know Advanced Polish Phrases - Power Phrases for Your Resume");
      topicMI[2] = new JCheckBoxMenuItem("Must-Know Advanced Polish Phrases - Smart Phrases for Business Meetings");
      topicMI[3] = new JCheckBoxMenuItem(
        "Must-Know Advanced Polish Phrases - Advanced Idioms, Sayings, and Proverbs for Everyday Usage");
      topicMI[4] = new JCheckBoxMenuItem("Advanced Polish Words for Experienced Learners - Advanced Academic Words");
      topicMI[5] = new JCheckBoxMenuItem(
        "Advanced Polish Words for Experienced Learners - Advanced College Vocabulary");
      topicMI[6] = new JCheckBoxMenuItem("Advanced Polish Words for Experienced Learners - Advanced Business Words");
      topicMI[7] = new JCheckBoxMenuItem("Advanced Polish Words for Experienced Learners - Advanced Medical Words");
      topicMI[8] = new JCheckBoxMenuItem("Advanced Polish Words for Experienced Learners - Advanced Legal Words");
      topicMI[9] = new JCheckBoxMenuItem(
        "Advanced Polish Words for Experienced Learners - Advanced Political Vocabulary");
      for (int i = 0; i < 10; i++) {
        topicMI[i].addActionListener(this);
        topicMI[i].setAccelerator(alt[i]);
        topicMI[i].setFont(font[0]);
        menu[1].add(topicMI[i]);
      }
      ctrlC = KeyStroke.getKeyStroke(KeyEvent.VK_C, KeyEvent.CTRL_DOWN_MASK);
      ctrlS = KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_DOWN_MASK);
      ctrlF = KeyStroke.getKeyStroke(KeyEvent.VK_F, KeyEvent.CTRL_DOWN_MASK);
      ctrlV = KeyStroke.getKeyStroke(KeyEvent.VK_V, KeyEvent.CTRL_DOWN_MASK);
      settingsMI = new JMenuItem[10];
      settingsMI[0] = new JMenuItem("Clear all examples of current topic");
      settingsMI[1] = new JMenuItem("Show all examples of current topic in English");
      settingsMI[2] = new JMenuItem("Follow me on Instagram");
      settingsMI[3] = new JMenuItem("Visit PolishPod101 website");
      settingsMI[0].setAccelerator(ctrlC);
      settingsMI[1].setAccelerator(ctrlS);
      settingsMI[2].setAccelerator(ctrlF);
      settingsMI[3].setAccelerator(ctrlV);
      settingsMI[0].setEnabled(false);
      settingsMI[1].setEnabled(false);
      for (int i = 0; i < 4; i++) {
        settingsMI[i].addActionListener(this);
        settingsMI[i].setFont(font[0]);
        menu[2].add(settingsMI[i]);
      }
      // EN
      // Must-Know Advanced Polish Phrases
      // 1. Useful Phrases for Academic Writing
      EX_EN = new JLabel[196];
      EX_EN[0] = new JLabel("<html>Firstly… Secondly… Thirdly<html>");
      EX_EN[1] = new JLabel("<html>It’s important to note that…<html>");
      EX_EN[2] = new JLabel("<html>As it turns out…<html>");
      EX_EN[3] = new JLabel("<html>Assuming that…<html>");
      EX_EN[4] = new JLabel("<html>According to the author…<html>");
      EX_EN[5] = new JLabel("<html>One should emphasize…<html>");
      EX_EN[6] = new JLabel("<html>One could say that…<html>");
      EX_EN[7] = new JLabel("<html>Undoubtedly…<html>");
      EX_EN[8] = new JLabel("<html>Contrary to…<html>");
      EX_EN[9] = new JLabel("<html>One could conclude that…<html>");
      EX_EN[10] = new JLabel("<html>Probably…<html>");
      EX_EN[11] = new JLabel("<html>Generally speaking…<html>");
      EX_EN[12] = new JLabel("<html>Research suggests that…<html>");
      EX_EN[13] = new JLabel("<html>As an example, one could mention…<html>");
      EX_EN[14] = new JLabel("<html>The majority of respondents…<html>");
      // 2. Power Phrases for Your Resume
      EX_EN[15] = new JLabel("<html>the ability to work under pressure<html>");
      EX_EN[16] = new JLabel("<html>the ability to work in a fast-paced environment<html>");
      EX_EN[17] = new JLabel("<html>the ability to work in an organized manner<html>");
      EX_EN[18] = new JLabel("<html>being a team player<html>");
      EX_EN[19] = new JLabel("<html>time management skills<html>");
      EX_EN[20] = new JLabel("<html>impeccable manner<html>");
      EX_EN[21] = new JLabel("<html>career-driven and goal-oriented<html>");
      EX_EN[22] = new JLabel("<html>being a conflict-resolver<html>");
      EX_EN[23] = new JLabel("<html>high adaptability<html>");
      EX_EN[24] = new JLabel("<html>fast and effective learner<html>");
      EX_EN[25] = new JLabel("<html>the ability to work independently<html>");
      EX_EN[26] = new JLabel("<html>the ability to prioritize tasks<html>");
      EX_EN[27] = new JLabel("<html>advanced use of Excel<html>");
      EX_EN[28] = new JLabel("<html>project management skills<html>");
      EX_EN[29] = new JLabel("<html>broad knowledge on the topic of [X]<html>");
      // 3. Smart Phrases for Business Meetings
      EX_EN[30] = new JLabel("<html>things to be done ASAP<html>");
      EX_EN[31] = new JLabel("<html>brief<html>");
      EX_EN[32] = new JLabel("<html>deadline<html>");
      EX_EN[33] = new JLabel("<html>dress code<html>");
      EX_EN[34] = new JLabel("<html>a serious problem<html>");
      EX_EN[35] = new JLabel("<html>feedback<html>");
      EX_EN[36] = new JLabel("<html>call<html>");
      EX_EN[37] = new JLabel("<html>open-space<html>");
      EX_EN[38] = new JLabel("<html>research<html>");
      EX_EN[39] = new JLabel("<html>target<html>");
      // 4. Advanced Idioms, Sayings, and Proverbs for Everyday Usage
      EX_EN[40] = new JLabel("<html>Everything is (done) in the same way.\r\n" +
        "Literally: Everything is (done) according to the same hoof.<html>");
      EX_EN[41] = new JLabel("<html>No work is shameful.<html>");
      EX_EN[42] = new JLabel("<html>It’s a cherry on top.<html>");
      EX_EN[43] = new JLabel("<html>Better late than never.<html>");
      EX_EN[44] = new JLabel("<html>Break a leg!<html>");
      EX_EN[45] = new JLabel("<html>Get your act together!<html>");
      EX_EN[46] = new JLabel("<html>Speaking of the devil.<html>");
      EX_EN[47] = new JLabel("<html>Don’t cry over spilt milk.<html>");
      EX_EN[48] = new JLabel("<html>The calm before the storm<html>");
      EX_EN[49] = new JLabel("<html>Let sleeping dogs lie.<html>");
      // Advanced Polish Words for Experienced Learners
      // 1. Advanced Academic Words
      EX_EN[50] = new JLabel("<html>to articulate / to express oneself<html>");
      EX_EN[51] = new JLabel("<html>assumption / objective<html>");
      EX_EN[52] = new JLabel("<html>constant<html>");
      EX_EN[53] = new JLabel("<html>to debate<html>");
      EX_EN[54] = new JLabel("<html>to collect / to gather<html>");
      EX_EN[55] = new JLabel("<html>to lead to<html>");
      EX_EN[56] = new JLabel("<html>suitable / adequate<html>");
      EX_EN[57] = new JLabel("<html>detailed<html>");
      EX_EN[58] = new JLabel("<html>reasonable<html>");
      EX_EN[59] = new JLabel("<html>subtle<html>");
      EX_EN[60] = new JLabel("<html>likely<html>");
      EX_EN[61] = new JLabel("<html>improbable<html>");
      EX_EN[62] = new JLabel("<html>literally<html>");
      EX_EN[63] = new JLabel("<html>even though<html>");
      EX_EN[64] = new JLabel("<html>in this case<html>");
      EX_EN[65] = new JLabel("<html>unless<html>");
      EX_EN[66] = new JLabel("<html>nonetheless<html>");
      EX_EN[67] = new JLabel("<html>what’s more<html>");
      EX_EN[68] = new JLabel("<html>as<html>");
      EX_EN[69] = new JLabel("<html>despite<html>");
      EX_EN[70] = new JLabel("<html>as for<html>");
      EX_EN[71] = new JLabel("<html>while<html>");
      EX_EN[72] = new JLabel("<html>to argue<html>");
      EX_EN[73] = new JLabel("<html>to conclude<html>");
      EX_EN[74] = new JLabel("<html>evidence<html>");
      // 2. Advanced College Vocabulary
      EX_EN[75] = new JLabel("<html>lecture<html>");
      EX_EN[76] = new JLabel("<html>lecturer<html>");
      EX_EN[77] = new JLabel("<html>auditorium<html>");
      EX_EN[78] = new JLabel("<html>BA thesis / MA thesis<html>");
      EX_EN[79] = new JLabel("<html>class<html>");
      EX_EN[80] = new JLabel("<html>attendance list<html>");
      EX_EN[81] = new JLabel("<html>grade<html>");
      EX_EN[82] = new JLabel("<html>GPA<html>");
      EX_EN[83] = new JLabel("<html>scholarship<html>");
      EX_EN[84] = new JLabel("<html>full-time studies<html>");
      EX_EN[85] = new JLabel("<html>part-time studies<html>");
      EX_EN[86] = new JLabel("<html>to graduate<html>");
      EX_EN[87] = new JLabel("<html>graduate<html>");
      EX_EN[88] = new JLabel("<html>internship<html>");
      EX_EN[89] = new JLabel("<html>student exchange / exchange program<html>");
      EX_EN[90] = new JLabel("<html>to study<html>");
      EX_EN[91] = new JLabel("<html>to study for an exam<html>");
      EX_EN[92] = new JLabel("<html>to pass<html>");
      EX_EN[93] = new JLabel("<html>to fail<html>");
      EX_EN[94] = new JLabel("<html>to fail someone on an exam<html>");
      EX_EN[95] = new JLabel("<html>to take an exam<html>");
      EX_EN[96] = new JLabel("<html>retake<html>");
      EX_EN[97] = new JLabel("<html>graduate reunion<html>");
      // 3. Advanced Business Words
      EX_EN[98] = new JLabel("<html>department<html>");
      EX_EN[99] = new JLabel("<html>headquarters<html>");
      EX_EN[100] = new JLabel("<html>dismissal<html>");
      EX_EN[101] = new JLabel("<html>to fire / to dismiss<html>");
      EX_EN[102] = new JLabel("<html>to resign<html>");
      EX_EN[103] = new JLabel("<html>turnover / revenue<html>");
      EX_EN[104] = new JLabel("<html>fee / salary<html>");
      EX_EN[105] = new JLabel("<html>health insurance<html>");
      EX_EN[106] = new JLabel("<html>perks<html>");
      EX_EN[107] = new JLabel("<html>job offer<html>");
      EX_EN[108] = new JLabel("<html>job market<html>");
      EX_EN[109] = new JLabel("<html>to apply (for a job)<html>");
      EX_EN[110] = new JLabel("<html>to hire<html>");
      EX_EN[111] = new JLabel("<html>work contract<html>");
      EX_EN[112] = new JLabel("<html>work contract for contractors<html>");
      EX_EN[113] = new JLabel("<html>full-time job<html>");
      EX_EN[114] = new JLabel("<html>part-time job<html>");
      EX_EN[115] = new JLabel("<html>business trip<html>");
      EX_EN[116] = new JLabel("<html>maternity leave / paternity leave<html>");
      EX_EN[117] = new JLabel("<html>leave<html>");
      EX_EN[118] = new JLabel("<html>sick leave<html>");
      EX_EN[119] = new JLabel("<html>doctor’s note<html>");
      EX_EN[120] = new JLabel("<html>brand<html>");
      EX_EN[121] = new JLabel("<html>trademark<html>");
      // 4. Advanced Medical Words
      EX_EN[122] = new JLabel("<html>anxiety disorder<html>");
      EX_EN[123] = new JLabel("<html>depression<html>");
      EX_EN[124] = new JLabel("<html>bipolar disorder<html>");
      EX_EN[125] = new JLabel("<html>antidepressants<html>");
      EX_EN[126] = new JLabel("<html>psychological help<html>");
      EX_EN[127] = new JLabel("<html>GP<html>");
      EX_EN[128] = new JLabel("<html>dermatologist<html>");
      EX_EN[129] = new JLabel("<html>optometrist<html>");
      EX_EN[130] = new JLabel("<html>cardiologist<html>");
      EX_EN[131] = new JLabel("<html>ENT<html>");
      EX_EN[132] = new JLabel("<html>dietician<html>");
      EX_EN[133] = new JLabel("<html>a doctor’s appointment<html>");
      EX_EN[134] = new JLabel("<html>to examine<html>");
      EX_EN[135] = new JLabel("<html>to give an anesthetic<html>");
      EX_EN[136] = new JLabel("<html>to diagnose<html>");
      EX_EN[137] = new JLabel("<html>to treat<html>");
      EX_EN[138] = new JLabel("<html>to operate<html>");
      EX_EN[139] = new JLabel("<html>chemotherapy<html>");
      EX_EN[140] = new JLabel("<html>operating table<html>");
      EX_EN[141] = new JLabel("<html>scalpel<html>");
      EX_EN[142] = new JLabel("<html>oxygen<html>");
      EX_EN[143] = new JLabel("<html>coma<html>");
      EX_EN[144] = new JLabel("<html>to faint<html>");
      EX_EN[145] = new JLabel("<html>to regain consciousness<html>");
      // 5. Advanced Legal Words
      EX_EN[146] = new JLabel("<html>judge<html>");
      EX_EN[147] = new JLabel("<html>barrister<html>");
      EX_EN[148] = new JLabel("<html>prosecutor<html>");
      EX_EN[149] = new JLabel("<html>police clearance<html>");
      EX_EN[150] = new JLabel("<html>appeal<html>");
      EX_EN[151] = new JLabel("<html>judicial<html>");
      EX_EN[152] = new JLabel("<html>to sue<html>");
      EX_EN[153] = new JLabel("<html>(court) case<html>");
      EX_EN[154] = new JLabel("<html>witness<html>");
      EX_EN[155] = new JLabel("<html>to testify<html>");
      EX_EN[156] = new JLabel("<html>to sentence<html>");
      EX_EN[157] = new JLabel("<html>bail<html>");
      EX_EN[158] = new JLabel("<html>to acquit<html>");
      EX_EN[159] = new JLabel("<html>life sentence<html>");
      EX_EN[160] = new JLabel("<html>death penalty<html>");
      EX_EN[161] = new JLabel("<html>penalty / fine<html>");
      EX_EN[162] = new JLabel("<html>suspended sentence<html>");
      EX_EN[163] = new JLabel("<html>warrant<html>");
      EX_EN[164] = new JLabel("<html>notary<html>");
      EX_EN[165] = new JLabel("<html>inheritance<html>");
      EX_EN[166] = new JLabel("<html>kidnapping<html>");
      EX_EN[167] = new JLabel("<html>murder<html>");
      EX_EN[168] = new JLabel("<html>theft<html>");
      EX_EN[169] = new JLabel("<html>blackmail<html>");
      EX_EN[170] = new JLabel("<html>burglary<html>");
      // 6. Advanced Political Vocabulary
      EX_EN[171] = new JLabel("<html>the Polish Chamber of Deputies<html>");
      EX_EN[172] = new JLabel("<html>Senate<html>");
      EX_EN[173] = new JLabel("<html>MP / deputy<html>");
      EX_EN[174] = new JLabel("<html>senator<html>");
      EX_EN[175] = new JLabel("<html>to vote<html>");
      EX_EN[176] = new JLabel("<html>election<html>");
      EX_EN[177] = new JLabel("<html>president<html>");
      EX_EN[178] = new JLabel("<html>to rule<html>");
      EX_EN[179] = new JLabel("<html>to resign (about a politician)<html>");
      EX_EN[180] = new JLabel("<html>prime minister<html>");
      EX_EN[181] = new JLabel("<html>minister<html>");
      EX_EN[182] = new JLabel("<html>ministry<html>");
      EX_EN[183] = new JLabel("<html>law<html>");
      EX_EN[184] = new JLabel("<html>to veto<html>");
      EX_EN[185] = new JLabel("<html>to pass a law<html>");
      EX_EN[186] = new JLabel("<html>to amend<html>");
      EX_EN[187] = new JLabel("<html>regulations<html>");
      EX_EN[188] = new JLabel("<html>corruption<html>");
      EX_EN[189] = new JLabel("<html>bribe<html>");
      EX_EN[190] = new JLabel("<html>to accept a bribe<html>");
      EX_EN[191] = new JLabel("<html>to protest<html>");
      EX_EN[192] = new JLabel("<html>political party<html>");
      EX_EN[193] = new JLabel("<html>left wing<html>");
      EX_EN[194] = new JLabel("<html>right wing<html>");
      EX_EN[195] = new JLabel("<html>opposition<html>");
      // Must-Know Advanced Polish Phrases
      // 1. Useful Phrases for Academic Writing
      EG_EN = new JLabel[196];
      EG_EN[0] = new JLabel("<html>Firstly, it’s an important topic. Secondly, it’s not discussed enough. Thirdly, it’s still a taboo in our culture.<html><html>");
      EG_EN[1] = new JLabel("<html>It’s important to note that not all Polish people agree with this attitude.<html>");
      EG_EN[2] = new JLabel("<html>As it turns out, it’s not entirely true.<html>");
      EG_EN[3] = new JLabel("<html>Assuming that the author is right, it’s a serious accusation.<html>");
      EG_EN[4] = new JLabel("<html>According to the author, it’s not the best solution.<html>");
      EG_EN[5] = new JLabel("<html>One should emphasize that it’s only a theory.<html>");
      EG_EN[6] = new JLabel("<html>One could say that people react impulsively in such situations.<html>");
      EG_EN[7] = new JLabel("<html>Undoubtedly, it isn’t a perfect solution.<html>");
      EG_EN[8] = new JLabel("<html>Contrary to what many people believe, it isn’t entirely true.<html>");
      EG_EN[9] = new JLabel("<html>One could conclude that it’s the end of this discussion.<html>");
      EG_EN[10] = new JLabel("<html>Probably, we’ll never learn the truth.<html>");
      EG_EN[11] = new JLabel("<html>Generally speaking, destructive tendencies don’t appear out of nowhere.<html>");
      EG_EN[12] = new JLabel("<html>Research suggests that most people don’t have this trait.<html>");
      EG_EN[13] = new JLabel("<html>As an example, one could mention the research conducted by Dr. Nowak.<html>");
      EG_EN[14] = new JLabel("<html>The majority of respondents are reluctant to discuss this subject.<html>");
      // 3. Smart Phrases for Business Meetings
      EG_EN[30] = new JLabel("<html>This project should be completed ASAP.<html>");
      EG_EN[31] = new JLabel("<html>What’s the brief?<html>");
      EG_EN[32] = new JLabel("<html>What’s the deadline?<html>");
      EG_EN[33] = new JLabel("<html>What’s the dress code in your company?<html>");
      EG_EN[34] = new JLabel("<html>There’s a serious problem.<html>");
      EG_EN[35] = new JLabel("<html>Do we have the feedback from the client?<html>");
      EG_EN[36] = new JLabel("<html>I can’t do it; I have a call with the client then.<html>");
      EG_EN[37] = new JLabel("<html>I don’t like working in an open-space office.<html>");
      EG_EN[38] = new JLabel("<html>I need to do some research.<html>");
      EG_EN[39] = new JLabel("<html>He doesn’t meet the targets.<html>");
      // Advanced Polish Words for Experienced Learners
      // 1. Advanced Academic Words
      EG_EN[50] = new JLabel("<html>He has a way with words.<html>");
      EG_EN[51] = new JLabel("<html>The objective of this essay is to discuss this problem.<html>");
      EG_EN[52] = new JLabel("<html>Constant economic growth is a good sign.<html>");
      EG_EN[53] = new JLabel("<html>I don’t feel like debating it.<html>");
      EG_EN[54] = new JLabel("<html>We’re collecting data about the city.<html>");
      EG_EN[55] = new JLabel("<html>It leads to a deficit.<html>");
      EG_EN[56] = new JLabel("<html>We’re looking for a suitable candidate.<html>");
      EG_EN[57] = new JLabel("<html>His report is detailed.<html>");
      EG_EN[58] = new JLabel("<html>She’s very reasonable.<html>");
      EG_EN[59] = new JLabel("<html>One can notice a subtle downward trend.<html>");
      EG_EN[60] = new JLabel("<html>Such a development is likely.<html>");
      EG_EN[61] = new JLabel("<html>These results are completely improbable.<html>");
      EG_EN[62] = new JLabel("<html>You shouldn’t take it literally.<html>");
      EG_EN[63] = new JLabel("<html>Even though I disagree with him, I won’t tell him that.<html>");
      EG_EN[64] = new JLabel("<html>In this case, it’s a good solution.<html>");
      EG_EN[65] = new JLabel("<html>Tell her, unless you’re scared.<html>");
      EG_EN[66] = new JLabel("<html>Nonetheless, it’s an important point.<html>");
      EG_EN[67] = new JLabel("<html>He’s educated. What’s more, he’s experienced.<html>");
      EG_EN[68] = new JLabel("<html>He works as a replacement for the English teacher.<html>");
      EG_EN[69] = new JLabel("<html>He drank his tea despite his sore throat.<html>");
      EG_EN[70] = new JLabel("<html>As for my references, you can contact my boss.<html>");
      EG_EN[71] = new JLabel("<html>While you’re resting, I’m working.<html>");
      EG_EN[72] = new JLabel("<html>I won’t argue with you.<html>");
      EG_EN[73] = new JLabel("<html>I conclude from your answer that you have no time.<html>");
      EG_EN[74] = new JLabel("<html>There’s no evidence that your theory is true.<html>");
      // 2. Advanced College Vocabulary
      EG_EN[75] = new JLabel("<html>I’m going to attend a lecture.<html>");
      EG_EN[76] = new JLabel("<html>My English literature lecturer is really cool.<html>");
      EG_EN[77] = new JLabel("<html>There were no seats left in the auditorium.<html>");
      EG_EN[78] = new JLabel("<html>I’ll finish writing my MA thesis soon.<html>");
      EG_EN[79] = new JLabel("<html>I think I’ll be late for class.<html>");
      EG_EN[80] = new JLabel("<html>The lecturer didn’t check the attendance list.<html>");
      EG_EN[81] = new JLabel("<html>I have good grades.<html>");
      EG_EN[82] = new JLabel("<html>My GPA is low.<html>");
      EG_EN[83] = new JLabel("<html>I need the scholarship to make ends meet.<html>");
      EG_EN[84] = new JLabel("<html>I’ve gotten in as a full-time student!<html>");
      EG_EN[85] = new JLabel("<html>It’s easier to work and study during part-time studies.<html>");
      EG_EN[86] = new JLabel("<html>I will graduate soon.<html>");
      EG_EN[87] = new JLabel("<html>It’s not easy for graduates to find work.<html>");
      EG_EN[88] = new JLabel("<html>You have to find an internship.<html>");
      EG_EN[89] = new JLabel("<html>Erasmus is a great exchange program.<html>");
      EG_EN[90] = new JLabel("<html>He’s a student at the University of Warsaw.<html>");
      EG_EN[91] = new JLabel("<html>He’s preparing for an exam.<html>");
      EG_EN[92] = new JLabel("<html>We’ve passed the exam.<html>");
      EG_EN[93] = new JLabel("<html>Unfortunately, I’ve failed this exam.<html>");
      EG_EN[94] = new JLabel("<html>Please don’t fail me!<html>");
      EG_EN[95] = new JLabel("<html>We’ve taken this exam twice.<html>");
      EG_EN[96] = new JLabel("<html>The retake will take place in September.<html>");
      EG_EN[97] = new JLabel("<html>I have no intention of participating in the graduate reunion.<html>");
      // 3. Advanced Business Words
      EG_EN[98] = new JLabel("<html>I work in the HR department.<html>");
      EG_EN[99] = new JLabel("<html>This company is headquartered in Warsaw.<html>");
      EG_EN[100] = new JLabel("<html>If he doesn’t start working, he can expect a dismissal.<html>");
      EG_EN[101] = new JLabel("<html>They’ll never fire him.<html>");
      EG_EN[102] = new JLabel("<html>I’ll resign if nothing changes.<html>");
      EG_EN[103] = new JLabel("<html>My company has a high revenue.<html>");
      EG_EN[104] = new JLabel("<html>In my opinion, the fee is too high.<html>");
      EG_EN[105] = new JLabel("<html>The salary is good, but the company doesn’t offer health insurance.<html>");
      EG_EN[106] = new JLabel("<html>I’m hoping for some perks in this company.<html>");
      EG_EN[107] = new JLabel("<html>It’s an attractive job offer.<html>");
      EG_EN[108] = new JLabel("<html>The job market is weak.<html>");
      EG_EN[109] = new JLabel("<html>He’s applied for a job with us.<html>");
      EG_EN[110] = new JLabel("<html>We’ll only hire the right candidate.<html>");
      EG_EN[111] = new JLabel("<html>My work contract finishes tomorrow.<html>");
      EG_EN[112] = new JLabel("<html>I’m not a freelancer, but I have a work contract for contractors.<html>");
      EG_EN[113] = new JLabel("<html>We have a full-time job.<html>");
      EG_EN[114] = new JLabel("<html>I have a part-time job, and I study.<html>");
      EG_EN[115] = new JLabel("<html>She’s always traveling for work.<html>");
      EG_EN[116] = new JLabel("<html>In Poland, maternity leave is a year long and paternity leave is two weeks long.<html>");
      EG_EN[117] = new JLabel("<html>I’m going on leave.<html>");
      EG_EN[118] = new JLabel("<html>I’m on sick leave.<html>");
      EG_EN[119] = new JLabel("<html>When you’re absent for two days, you need a doctor’s note.<html>");
      EG_EN[120] = new JLabel("<html>I love this brand!<html>");
      EG_EN[121] = new JLabel("<html>It’s a registered trademark.<html>");
      // 4. Advanced Medical Words
      EG_EN[122] = new JLabel("<html>I have an anxiety disorder.<html>");
      EG_EN[123] = new JLabel("<html>He suffers from depression.<html>");
      EG_EN[124] = new JLabel("<html>Bipolar disorder is a mental illness many people suffer from.<html>");
      EG_EN[125] = new JLabel("<html>He’s on antidepressants.<html>");
      EG_EN[126] = new JLabel("<html>It’s easier and easier to get psychological help in Poland.<html>");
      EG_EN[127] = new JLabel("<html>I’ve contacted my GP.<html>");
      EG_EN[128] = new JLabel("<html>My son wants to be a dermatologist.<html>");
      EG_EN[129] = new JLabel("<html>An optometrist checks your eyesight.<html>");
      EG_EN[130] = new JLabel("<html>A cardiologist treats heart conditions.<html>");
      EG_EN[131] = new JLabel("<html>An ENT can help you with ear, nose, and throat issues.<html>");
      EG_EN[132] = new JLabel("<html>A dietician can plan your diet.<html>");
      EG_EN[133] = new JLabel("<html>I’ve booked you a dentist appointment for tomorrow.<html>");
      EG_EN[134] = new JLabel("<html>A doctor examines patients.<html>");
      EG_EN[135] = new JLabel("<html>I won’t give you an anesthetic!<html>");
      EG_EN[136] = new JLabel("<html>He has been diagnosed with cancer.<html>");
      EG_EN[137] = new JLabel("<html>He knows how to treat children.<html>");
      EG_EN[138] = new JLabel("<html>He never says anything when he’s operating.<html>");
      EG_EN[139] = new JLabel("<html>Chemotherapy is an invasive treatment.<html>");
      EG_EN[140] = new JLabel("<html>The operating table needs to be clean.<html>");
      EG_EN[141] = new JLabel("<html>The scalpel needs to be sterile.<html>");
      EG_EN[142] = new JLabel("<html>Nurse, please give the patient oxygen.<html>");
      EG_EN[143] = new JLabel("<html>Her father has been in a coma for ten years.<html>");
      EG_EN[144] = new JLabel("<html>He didn’t faint.<html>");
      EG_EN[145] = new JLabel("<html>The patient still has not regained consciousness.<html>");
      // 5. Advanced Legal Words
      EG_EN[146] = new JLabel("<html>He’s a judge of the High Court.<html>");
      EG_EN[147] = new JLabel("<html>His barrister is right.<html>");
      EG_EN[148] = new JLabel("<html>The prosecutor has no evidence.<html>");
      EG_EN[149] = new JLabel("<html>I need police clearance.<html>");
      EG_EN[150] = new JLabel("<html>We can lodge an appeal.<html>");
      EG_EN[151] = new JLabel("<html>The judicial procedure may be complicated.<html>");
      EG_EN[152] = new JLabel("<html>He sued them.<html>");
      EG_EN[153] = new JLabel("<html>This lawyer doesn’t want to take my case.<html>");
      EG_EN[154] = new JLabel("<html>He is a witness to a crime.<html>");
      EG_EN[155] = new JLabel("<html>She’d like to testify, but she’s scared.<html>");
      EG_EN[156] = new JLabel("<html>He was sentenced to three years in prison.<html>");
      EG_EN[157] = new JLabel("<html>The bail was not set high.<html>");
      EG_EN[158] = new JLabel("<html>Luckily, he was acquitted.<html>");
      EG_EN[159] = new JLabel("<html>A life sentence is the harshest punishment in Poland.<html>");
      EG_EN[160] = new JLabel("<html>The death penalty is still a thing in some states in the U.S.<html>");
      EG_EN[161] = new JLabel("<html>They only got a fine.<html>");
      EG_EN[162] = new JLabel("<html>The sentence is suspended.<html>");
      EG_EN[163] = new JLabel("<html>We can’t arrest him without a warrant.<html>");
      EG_EN[164] = new JLabel("<html>We need a notary’s signature.<html>");
      EG_EN[165] = new JLabel("<html>Children should get the inheritance.<html>");
      EG_EN[166] = new JLabel("<html>Kidnappings are a big problem in this country.<html>");
      EG_EN[167] = new JLabel("<html>Many murders are committed under the influence of alcohol.<html>");
      EG_EN[168] = new JLabel("<html>He was accused of theft.<html>");
      EG_EN[169] = new JLabel("<html>Blackmail is a crime.<html>");
      EG_EN[170] = new JLabel("<html>The burglary was reported.<html>");
      // 6. Advanced Political Vocabulary
      EG_EN[171] = new JLabel("<html>Tomorrow, there’s the Chamber of Deputies’ election.<html>");
      EG_EN[172] = new JLabel("<html>The Senate is the higher chamber.<html>");
      EG_EN[173] = new JLabel("<html>I’d like to become an MP.<html>");
      EG_EN[174] = new JLabel("<html>How long is a senator’s term?<html>");
      EG_EN[175] = new JLabel("<html>One has to vote.<html>");
      EG_EN[176] = new JLabel("<html>We’re going to vote!<html>");
      EG_EN[177] = new JLabel("<html>Andrzej Duda is the President of Poland.<html>");
      EG_EN[178] = new JLabel("<html>The president rules the country.<html>");
      EG_EN[179] = new JLabel("<html>The president resigned from office.<html>");
      EG_EN[180] = new JLabel("<html>The prime minister will speak tonight.<html>");
      EG_EN[181] = new JLabel("<html>Who’s the Minister of Justice now?<html>");
      EG_EN[182] = new JLabel("<html>This ministry is underfinanced.<html>");
      EG_EN[183] = new JLabel("<html>The new law will come into force tomorrow.<html>");
      EG_EN[184] = new JLabel("<html>The president has vetoed the law.<html>");
      EG_EN[185] = new JLabel("<html>The law has been passed.<html>");
      EG_EN[186] = new JLabel("<html>The government will still make some amendments to the law.<html>");
      EG_EN[187] = new JLabel("<html>We’re awaiting changes to the rules.<html>");
      EG_EN[188] = new JLabel("<html>The corruption in the government is being discussed.<html>");
      EG_EN[189] = new JLabel("<html>This public official has been bribed.<html>");
      EG_EN[190] = new JLabel("<html>Would you accept a bribe?<html>");
      EG_EN[191] = new JLabel("<html>They’re protesting against the government.<html>");
      EG_EN[192] = new JLabel("<html>I’ve never voted for this party.<html>");
      EG_EN[193] = new JLabel("<html>It’s a left-wing party.<html>");
      EG_EN[194] = new JLabel("<html>The right wing constitutes the majority of the government.<html>");
      EG_EN[195] = new JLabel("<html>The opposition disagrees with your opinion.<html>");
      // PL
      EX_PL_URL = new URL[196];
      EX_PL_AIS = new AudioInputStream[196];
      EX_PL_Clip = new Clip[196];
      EX_PL_URL[0] = getClass().getResource("Po pierwsze… Po drugie… Po trzecie.wav");
      EX_PL_URL[1] = getClass().getResource("Należy zwrócić uwagę, że….wav");
      EX_PL_URL[2] = getClass().getResource("Jak się okazuje….wav");
      EX_PL_URL[3] = getClass().getResource("Zakładając, że.wav");
      EX_PL_URL[4] = getClass().getResource("Według autora….wav");
      EX_PL_URL[5] = getClass().getResource("Warto podkreślić….wav");
      EX_PL_URL[6] = getClass().getResource("Można powiedzieć, że….wav");
      EX_PL_URL[7] = getClass().getResource("Nie ulega wątpliwości, że….wav");
      EX_PL_URL[8] = getClass().getResource("Wbrew zdaniu….wav");
      EX_PL_URL[9] = getClass().getResource("Mogłoby się wydawać….wav");
      EX_PL_URL[10] = getClass().getResource("Prawdopodobnie….wav");
      EX_PL_URL[11] = getClass().getResource("Ogólnie rzecz biorąc….wav");
      EX_PL_URL[12] = getClass().getResource("Badania wskazują, że….wav");
      EX_PL_URL[13] = getClass().getResource("Dla przykładu warto przywołać….wav");
      EX_PL_URL[14] = getClass().getResource("Większość pytanych….wav");
      EX_PL_URL[15] = getClass().getResource("umiejętność radzenia sobie w trudnych sytuacjach.wav");
      EX_PL_URL[16] = getClass().getResource("umiejętność pracy pod presją czasu.wav");
      EX_PL_URL[17] = getClass().getResource("dobra organizacja pracy.wav");
      EX_PL_URL[18] = getClass().getResource("umiejętność pracy w zespole.wav");
      EX_PL_URL[19] = getClass().getResource("umiejętność zarządzania czasem.wav");
      EX_PL_URL[20] = getClass().getResource("wysoka kultura osobista.wav");
      EX_PL_URL[21] = getClass().getResource("nastawienie na rozwój i realizację celów.wav");
      EX_PL_URL[22] = getClass().getResource("umiejętność rozwiązywania konfliktów.wav");
      EX_PL_URL[23] = getClass().getResource("umiejętność przystosowywania się do zmian.wav");
      EX_PL_URL[24] = getClass().getResource("zdolność szybkiej i efektywnej nauki.wav");
      EX_PL_URL[25] = getClass().getResource("umiejętność samodzielnej pracy.wav");
      EX_PL_URL[26] = getClass().getResource("umiejętność wyznaczania priorytetów.wav");
      EX_PL_URL[27] = getClass().getResource("biegła znajomość MS Excel.wav");
      EX_PL_URL[28] = getClass().getResource("zdolność zarządzania projektami.wav");
      EX_PL_URL[29] = getClass().getResource("szeroka wiedza z zakresu [X].wav");
      EX_PL_URL[30] = getClass().getResource("ASAP do zrobienia na wczoraj.wav");
      EX_PL_URL[31] = getClass().getResource("brif brief.wav");
      EX_PL_URL[32] = getClass().getResource("dedlajn deadline.wav");
      EX_PL_URL[33] = getClass().getResource("dreskod dress code.wav");
      EX_PL_URL[34] = getClass().getResource("fakap poważny problem.wav");
      EX_PL_URL[35] = getClass().getResource("feedback informacje zwrotne.wav");
      EX_PL_URL[36] = getClass().getResource("kol call.wav");
      EX_PL_URL[37] = getClass().getResource("ołpenspejs openspace.wav");
      EX_PL_URL[38] = getClass().getResource("risercz research.wav");
      EX_PL_URL[39] = getClass().getResource("target.wav");
      EX_PL_URL[40] = getClass().getResource("Wszystko jest na jedno kopyto..wav");
      EX_PL_URL[41] = getClass().getResource("Żadna praca nie hańbi..wav");
      EX_PL_URL[42] = getClass().getResource("To wisienka na torcie..wav");
      EX_PL_URL[43] = getClass().getResource("Lepiej późno niż wcale..wav");
      EX_PL_URL[44] = getClass().getResource("Połamania nóg!.wav");
      EX_PL_URL[45] = getClass().getResource("Ogarnij się! [slang].wav");
      EX_PL_URL[46] = getClass().getResource("O wilku mowa..wav");
      EX_PL_URL[47] = getClass().getResource("Nie ma co płakać nad rozlanym mlekiem..wav");
      EX_PL_URL[48] = getClass().getResource("Cisza przed burzą.wav");
      EX_PL_URL[49] = getClass().getResource("Nie wywołuj wilka z lasu..wav");
      EX_PL_URL[50] = getClass().getResource("wysławiać się.wav");
      EX_PL_URL[51] = getClass().getResource("założenie.wav");
      EX_PL_URL[52] = getClass().getResource("stały.wav");
      EX_PL_URL[53] = getClass().getResource("dyskutować.wav");
      EX_PL_URL[54] = getClass().getResource("zbierać.wav");
      EX_PL_URL[55] = getClass().getResource("prowadzić.wav");
      EX_PL_URL[56] = getClass().getResource("odpowiedni.wav");
      EX_PL_URL[57] = getClass().getResource("szczegółowy.wav");
      EX_PL_URL[58] = getClass().getResource("rozsądny.wav");
      EX_PL_URL[59] = getClass().getResource("subtelny.wav");
      EX_PL_URL[60] = getClass().getResource("prawdopodobny.wav");
      EX_PL_URL[61] = getClass().getResource("nieprawdopodobny.wav");
      EX_PL_URL[62] = getClass().getResource("dosłownie.wav");
      EX_PL_URL[63] = getClass().getResource("mimo że.wav");
      EX_PL_URL[64] = getClass().getResource("w tym przypadku.wav");
      EX_PL_URL[65] = getClass().getResource("chyba że.wav");
      EX_PL_URL[66] = getClass().getResource("niemniej jednak.wav");
      EX_PL_URL[67] = getClass().getResource("co więcej.wav");
      EX_PL_URL[68] = getClass().getResource("jako.wav");
      EX_PL_URL[69] = getClass().getResource("mimo pomimo.wav");
      EX_PL_URL[70] = getClass().getResource("jeśli chodzi o.wav");
      EX_PL_URL[71] = getClass().getResource("podczas gdy.wav");
      EX_PL_URL[72] = getClass().getResource("spierać się.wav");
      EX_PL_URL[73] = getClass().getResource("wnioskować.wav");
      EX_PL_URL[74] = getClass().getResource("dowód.wav");
      EX_PL_URL[75] = getClass().getResource("wykład.wav");
      EX_PL_URL[76] = getClass().getResource("wykładowca wykładowczyni.wav");
      EX_PL_URL[77] = getClass().getResource("sala wykładowa.wav");
      EX_PL_URL[78] = getClass().getResource("praca licencjacka praca magisterska.wav");
      EX_PL_URL[79] = getClass().getResource("zajęcia.wav");
      EX_PL_URL[80] = getClass().getResource("lista obecności.wav");
      EX_PL_URL[81] = getClass().getResource("ocena.wav");
      EX_PL_URL[82] = getClass().getResource("średnia.wav");
      EX_PL_URL[83] = getClass().getResource("stypendium.wav");
      EX_PL_URL[84] = getClass().getResource("studia dzienne.wav");
      EX_PL_URL[85] = getClass().getResource("studia wieczorowe studia zaoczne.wav");
      EX_PL_URL[86] = getClass().getResource("skończyć studia.wav");
      EX_PL_URL[87] = getClass().getResource("absolwent.wav");
      EX_PL_URL[88] = getClass().getResource("staż.wav");
      EX_PL_URL[89] = getClass().getResource("wymiana studencka.wav");
      EX_PL_URL[90] = getClass().getResource("studiować.wav");
      EX_PL_URL[91] = getClass().getResource("przygotowywać się do.wav");
      EX_PL_URL[92] = getClass().getResource("zdać.wav");
      EX_PL_URL[93] = getClass().getResource("oblać.wav");
      EX_PL_URL[94] = getClass().getResource("oblać kogoś.wav");
      EX_PL_URL[95] = getClass().getResource("podejść do egzaminu.wav");
      EX_PL_URL[96] = getClass().getResource("poprawka.wav");
      EX_PL_URL[97] = getClass().getResource("zjazd absolwentów.wav");
      EX_PL_URL[98] = getClass().getResource("dział.wav");
      EX_PL_URL[99] = getClass().getResource("siedziba.wav");
      EX_PL_URL[100] = getClass().getResource("zwolnienie.wav");
      EX_PL_URL[101] = getClass().getResource("zwolnić.wav");
      EX_PL_URL[102] = getClass().getResource("zwolnić się złożyć wypowiedzenie.wav");
      EX_PL_URL[103] = getClass().getResource("dochody.wav");
      EX_PL_URL[104] = getClass().getResource("wynagrodzenie.wav");
      EX_PL_URL[105] = getClass().getResource("ubezpieczenie (zdrowotne).wav");
      EX_PL_URL[106] = getClass().getResource("benefity.wav");
      EX_PL_URL[107] = getClass().getResource("oferta pracy.wav");
      EX_PL_URL[108] = getClass().getResource("rynek.wav");
      EX_PL_URL[109] = getClass().getResource("złożyć podanie (o pracę).wav");
      EX_PL_URL[110] = getClass().getResource("zatrudnić.wav");
      EX_PL_URL[111] = getClass().getResource("umowa o pracę.wav");
      EX_PL_URL[112] = getClass().getResource("umowa o dzieło.wav");
      EX_PL_URL[113] = getClass().getResource("praca na cały etat.wav");
      EX_PL_URL[114] = getClass().getResource("praca na pół etatu.wav");
      EX_PL_URL[115] = getClass().getResource("podróż służbowa.wav");
      EX_PL_URL[116] = getClass().getResource("urlop macierzyński urlop tacierzyński.wav");
      EX_PL_URL[117] = getClass().getResource("urlop (wypoczynkowy).wav");
      EX_PL_URL[118] = getClass().getResource("chorobowe.wav");
      EX_PL_URL[119] = getClass().getResource("zwolnienie lekarskie.wav");
      EX_PL_URL[120] = getClass().getResource("marka.wav");
      EX_PL_URL[121] = getClass().getResource("znak towarowy.wav");
      EX_PL_URL[122] = getClass().getResource("stany lękowe.wav");
      EX_PL_URL[123] = getClass().getResource("depresja.wav");
      EX_PL_URL[124] = getClass().getResource("zaburzenia dwubiegunowe.wav");
      EX_PL_URL[125] = getClass().getResource("antydepresanty.wav");
      EX_PL_URL[126] = getClass().getResource("pomoc psychologiczna.wav");
      EX_PL_URL[127] = getClass().getResource("lekarz pierwszego kontaktu.wav");
      EX_PL_URL[128] = getClass().getResource("dermatolog.wav");
      EX_PL_URL[129] = getClass().getResource("okulista.wav");
      EX_PL_URL[130] = getClass().getResource("kardiolog.wav");
      EX_PL_URL[131] = getClass().getResource("laryngolog.wav");
      EX_PL_URL[132] = getClass().getResource("dietetyk.wav");
      EX_PL_URL[133] = getClass().getResource("wizyta.wav");
      EX_PL_URL[134] = getClass().getResource("zbadać.wav");
      EX_PL_URL[135] = getClass().getResource("znieczulić dać znieczulenie.wav");
      EX_PL_URL[136] = getClass().getResource("zdiagnozować.wav");
      EX_PL_URL[137] = getClass().getResource("leczyć.wav");
      EX_PL_URL[138] = getClass().getResource("operować.wav");
      EX_PL_URL[139] = getClass().getResource("chemioterapia.wav");
      EX_PL_URL[140] = getClass().getResource("stół operacyjny.wav");
      EX_PL_URL[141] = getClass().getResource("skalpel.wav");
      EX_PL_URL[142] = getClass().getResource("tlen.wav");
      EX_PL_URL[143] = getClass().getResource("śpiączka.wav");
      EX_PL_URL[144] = getClass().getResource("zemdleć stracić przytomność.wav");
      EX_PL_URL[145] = getClass().getResource("odzyskać przytomność.wav");
      EX_PL_URL[146] = getClass().getResource("sędzia.wav");
      EX_PL_URL[147] = getClass().getResource("adwokat.wav");
      EX_PL_URL[148] = getClass().getResource("prokurator.wav");
      EX_PL_URL[149] = getClass().getResource("zaświadczenie o niekaralności.wav");
      EX_PL_URL[150] = getClass().getResource("apelacja.wav");
      EX_PL_URL[151] = getClass().getResource("sądowy.wav");
      EX_PL_URL[152] = getClass().getResource("pozwać.wav");
      EX_PL_URL[153] = getClass().getResource("sprawa (sądowa).wav");
      EX_PL_URL[154] = getClass().getResource("świadek.wav");
      EX_PL_URL[155] = getClass().getResource("zeznawać.wav");
      EX_PL_URL[156] = getClass().getResource("skazać.wav");
      EX_PL_URL[157] = getClass().getResource("kaucja.wav");
      EX_PL_URL[158] = getClass().getResource("uniewinnić.wav");
      EX_PL_URL[159] = getClass().getResource("dożywocie.wav");
      EX_PL_URL[160] = getClass().getResource("kara śmierci.wav");
      EX_PL_URL[161] = getClass().getResource("kara grzywny grzywna.wav");
      EX_PL_URL[162] = getClass().getResource("w zawieszeniu.wav");
      EX_PL_URL[163] = getClass().getResource("nakaz.wav");
      EX_PL_URL[164] = getClass().getResource("notariusz.wav");
      EX_PL_URL[165] = getClass().getResource("spadek.wav");
      EX_PL_URL[166] = getClass().getResource("porwanie.wav");
      EX_PL_URL[167] = getClass().getResource("morderstwo.wav");
      EX_PL_URL[168] = getClass().getResource("kradzież.wav");
      EX_PL_URL[169] = getClass().getResource("szantaż.wav");
      EX_PL_URL[170] = getClass().getResource("włamanie.wav");
      EX_PL_URL[171] = getClass().getResource("Sejm.wav");
      EX_PL_URL[172] = getClass().getResource("Senat.wav");
      EX_PL_URL[173] = getClass().getResource("poseł.wav");
      EX_PL_URL[174] = getClass().getResource("senator.wav");
      EX_PL_URL[175] = getClass().getResource("głosować.wav");
      EX_PL_URL[176] = getClass().getResource("wybory.wav");
      EX_PL_URL[177] = getClass().getResource("prezydent.wav");
      EX_PL_URL[178] = getClass().getResource("rządzić.wav");
      EX_PL_URL[179] = getClass().getResource("podać się do dymisji.wav");
      EX_PL_URL[180] = getClass().getResource("premier.wav");
      EX_PL_URL[181] = getClass().getResource("minister.wav");
      EX_PL_URL[182] = getClass().getResource("ministerstwo.wav");
      EX_PL_URL[183] = getClass().getResource("ustawa.wav");
      EX_PL_URL[184] = getClass().getResource("zawetować.wav");
      EX_PL_URL[185] = getClass().getResource("przegłosować.wav");
      EX_PL_URL[186] = getClass().getResource("nanieść poprawki.wav");
      EX_PL_URL[187] = getClass().getResource("przepisy.wav");
      EX_PL_URL[188] = getClass().getResource("korupcja.wav");
      EX_PL_URL[189] = getClass().getResource("łapówka.wav");
      EX_PL_URL[190] = getClass().getResource("przyjąć łapówkę.wav");
      EX_PL_URL[191] = getClass().getResource("protestować.wav");
      EX_PL_URL[192] = getClass().getResource("partia polityczna.wav");
      EX_PL_URL[193] = getClass().getResource("lewica.wav");
      EX_PL_URL[194] = getClass().getResource("prawica.wav");
      EX_PL_URL[195] = getClass().getResource("opozycja.wav");
      for (int i = 0; i < 196; i++) {
        EX_PL_AIS[i] = AudioSystem.getAudioInputStream(EX_PL_URL[i]);
        EX_PL_Clip[i] = AudioSystem.getClip();
        EX_PL_Clip[i].open(EX_PL_AIS[i]);
      }
      // Must-Know Advanced Polish Phrases
      // 1. Useful Phrases for Academic Writing
      EX_PL = new JLabel[196];
      EX_PL[0] = new JLabel("<html>Po pierwsze… Po drugie… Po trzecie<html>");
      EX_PL[1] = new JLabel("<html>Należy zwrócić uwagę, że…<html>");
      EX_PL[2] = new JLabel("<html>Jak się okazuje…<html>");
      EX_PL[3] = new JLabel("<html>Zakładając, że<html>");
      EX_PL[4] = new JLabel("<html>Według autora…<html>");
      EX_PL[5] = new JLabel("<html>Warto podkreślić…<html>");
      EX_PL[6] = new JLabel("<html>Można powiedzieć, że…<html>");
      EX_PL[7] = new JLabel("<html>Nie ulega wątpliwości, że…<html>");
      EX_PL[8] = new JLabel("<html>Wbrew zdaniu…<html>");
      EX_PL[9] = new JLabel("<html>Mogłoby się wydawać…<html>");
      EX_PL[10] = new JLabel("<html>Prawdopodobnie…<html>");
      EX_PL[11] = new JLabel("<html>Ogólnie rzecz biorąc…<html>");
      EX_PL[12] = new JLabel("<html>Badania wskazują, że…<html>");
      EX_PL[13] = new JLabel("<html>Dla przykładu warto przywołać…<html>");
      EX_PL[14] = new JLabel("<html>Większość pytanych…<html>");
      // 2. Power Phrases for Your Resume
      EX_PL[15] = new JLabel("<html>umiejętność radzenia sobie w trudnych sytuacjach<html>");
      EX_PL[16] = new JLabel("<html>umiejętność pracy pod presją czasu<html>");
      EX_PL[17] = new JLabel("<html>dobra organizacja pracy<html>");
      EX_PL[18] = new JLabel("<html>umiejętność pracy w zespole<html>");
      EX_PL[19] = new JLabel("<html>umiejętność zarządzania czasem<html>");
      EX_PL[20] = new JLabel("<html>wysoka kultura osobista<html>");
      EX_PL[21] = new JLabel("<html>nastawienie na rozwój i realizację celów<html>");
      EX_PL[22] = new JLabel("<html>umiejętność rozwiązywania konfliktów<html>");
      EX_PL[23] = new JLabel("<html>umiejętność przystosowywania się do zmian<html>");
      EX_PL[24] = new JLabel("<html>zdolność szybkiej i efektywnej nauki<html>");
      EX_PL[25] = new JLabel("<html>umiejętność samodzielnej pracy<html>");
      EX_PL[26] = new JLabel("<html>umiejętność wyznaczania priorytetów<html>");
      EX_PL[27] = new JLabel("<html>biegła znajomość MS Excel<html>");
      EX_PL[28] = new JLabel("<html>zdolność zarządzania projektami<html>");
      EX_PL[29] = new JLabel("<html>szeroka wiedza z zakresu [X]<html>");
      // 3. Smart Phrases for Business Meetings
      EX_PL[30] = new JLabel("<html>ASAP / do zrobienia na wczoraj<html>");
      EX_PL[31] = new JLabel("<html>brif / brief<html>");
      EX_PL[32] = new JLabel("<html>dedlajn / deadline<html>");
      EX_PL[33] = new JLabel("<html>dreskod / dress code<html>");
      EX_PL[34] = new JLabel("<html>fakap / poważny problem<html>");
      EX_PL[35] = new JLabel("<html>feedback / informacje zwrotne<html>");
      EX_PL[36] = new JLabel("<html>kol / call<html>");
      EX_PL[37] = new JLabel("<html>ołpenspejs / openspace<html>");
      EX_PL[38] = new JLabel("<html>risercz / research<html>");
      EX_PL[39] = new JLabel("<html>target<html>");
      // 4. Advanced Idioms, Sayings, and Proverbs for Everyday Usage
      EX_PL[40] = new JLabel("<html>Wszystko jest na jedno kopyto.<html>");
      EX_PL[41] = new JLabel("<html>Żadna praca nie hańbi.<html>");
      EX_PL[42] = new JLabel("<html>To wisienka na torcie.<html>");
      EX_PL[43] = new JLabel("<html>Lepiej późno niż wcale.<html>");
      EX_PL[44] = new JLabel("<html>Połamania nóg!<html>");
      EX_PL[45] = new JLabel("<html>Ogarnij się! [slang]<html>");
      EX_PL[46] = new JLabel("<html>O wilku mowa.<html>");
      EX_PL[47] = new JLabel("<html>Nie ma co płakać nad rozlanym mlekiem.<html>");
      EX_PL[48] = new JLabel("<html>Cisza przed burzą<html>");
      EX_PL[49] = new JLabel("<html>Nie wywołuj wilka z lasu.<html>");
      // Advanced Polish Words for Experienced Learners
      // 1. Advanced Academic Words
      EX_PL[50] = new JLabel("<html>wysławiać się<html>");
      EX_PL[51] = new JLabel("<html>założenie<html>");
      EX_PL[52] = new JLabel("<html>stały<html>");
      EX_PL[53] = new JLabel("<html>dyskutować<html>");
      EX_PL[54] = new JLabel("<html>zbierać<html>");
      EX_PL[55] = new JLabel("<html>prowadzić<html>");
      EX_PL[56] = new JLabel("<html>odpowiedni<html>");
      EX_PL[57] = new JLabel("<html>szczegółowy<html>");
      EX_PL[58] = new JLabel("<html>rozsądny<html>");
      EX_PL[59] = new JLabel("<html>subtelny<html>");
      EX_PL[60] = new JLabel("<html>prawdopodobny<html>");
      EX_PL[61] = new JLabel("<html>nieprawdopodobny<html>");
      EX_PL[62] = new JLabel("<html>dosłownie<html>");
      EX_PL[63] = new JLabel("<html>mimo że<html>");
      EX_PL[64] = new JLabel("<html>w tym przypadku<html>");
      EX_PL[65] = new JLabel("<html>chyba że<html>");
      EX_PL[66] = new JLabel("<html>niemniej jednak<html>");
      EX_PL[67] = new JLabel("<html>co więcej<html>");
      EX_PL[68] = new JLabel("<html>jako<html>");
      EX_PL[69] = new JLabel("<html>mimo / pomimo<html>");
      EX_PL[70] = new JLabel("<html>jeśli chodzi o<html>");
      EX_PL[71] = new JLabel("<html>podczas gdy<html>");
      EX_PL[72] = new JLabel("<html>spierać się<html>");
      EX_PL[73] = new JLabel("<html>wnioskować<html>");
      EX_PL[74] = new JLabel("<html>dowód<html>");
      // 2. Advanced College Vocabulary
      EX_PL[75] = new JLabel("<html>wykład<html>");
      EX_PL[76] = new JLabel("<html>wykładowca (m.) / wykładowczyni (f.)<html>");
      EX_PL[77] = new JLabel("<html>sala wykładowa<html>");
      EX_PL[78] = new JLabel("<html>praca licencjacka / praca magisterska<html>");
      EX_PL[79] = new JLabel("<html>zajęcia<html>");
      EX_PL[80] = new JLabel("<html>lista obecności<html>");
      EX_PL[81] = new JLabel("<html>ocena<html>");
      EX_PL[82] = new JLabel("<html>średnia<html>");
      EX_PL[83] = new JLabel("<html>stypendium<html>");
      EX_PL[84] = new JLabel("<html>studia dzienne<html>");
      EX_PL[85] = new JLabel("<html>studia wieczorowe / studia zaoczne<html>");
      EX_PL[86] = new JLabel("<html>skończyć studia<html>");
      EX_PL[87] = new JLabel("<html>absolwent<html>");
      EX_PL[88] = new JLabel("<html>staż<html>");
      EX_PL[89] = new JLabel("<html>wymiana studencka<html>");
      EX_PL[90] = new JLabel("<html>studiować<html>");
      EX_PL[91] = new JLabel("<html>przygotowywać się do<html>");
      EX_PL[92] = new JLabel("<html>zdać<html>");
      EX_PL[93] = new JLabel("<html>oblać<html>");
      EX_PL[94] = new JLabel("<html>oblać kogoś<html>");
      EX_PL[95] = new JLabel("<html>podejść do egzaminu<html>");
      EX_PL[96] = new JLabel("<html>poprawka<html>");
      EX_PL[97] = new JLabel("<html>zjazd absolwentów<html>");
      // 3. Advanced Business Words
      EX_PL[98] = new JLabel("<html>dział<html>");
      EX_PL[99] = new JLabel("<html>siedziba<html>");
      EX_PL[100] = new JLabel("<html>zwolnienie<html>");
      EX_PL[101] = new JLabel("<html>zwolnić<html>");
      EX_PL[102] = new JLabel("<html>zwolnić się / złożyć wypowiedzenie<html>");
      EX_PL[103] = new JLabel("<html>dochody<html>");
      EX_PL[104] = new JLabel("<html>wynagrodzenie<html>");
      EX_PL[105] = new JLabel("<html>ubezpieczenie (zdrowotne)<html>");
      EX_PL[106] = new JLabel("<html>benefity<html>");
      EX_PL[107] = new JLabel("<html>oferta pracy<html>");
      EX_PL[108] = new JLabel("<html>rynek<html>");
      EX_PL[109] = new JLabel("<html>złożyć podanie (o pracę)<html>");
      EX_PL[110] = new JLabel("<html>zatrudnić<html>");
      EX_PL[111] = new JLabel("<html>umowa o pracę<html>");
      EX_PL[112] = new JLabel("<html>umowa o dzieło<html>");
      EX_PL[113] = new JLabel("<html>praca na cały etat<html>");
      EX_PL[114] = new JLabel("<html>praca na pół etatu<html>");
      EX_PL[115] = new JLabel("<html>podróż służbowa<html>");
      EX_PL[116] = new JLabel("<html>urlop macierzyński / urlop tacierzyński<html>");
      EX_PL[117] = new JLabel("<html>urlop (wypoczynkowy)<html>");
      EX_PL[118] = new JLabel("<html>chorobowe<html>");
      EX_PL[119] = new JLabel("<html>zwolnienie lekarskie<html>");
      EX_PL[120] = new JLabel("<html>marka<html>");
      EX_PL[121] = new JLabel("<html>znak towarowy<html>");
      // 4. Advanced Medical Words
      EX_PL[122] = new JLabel("<html>stany lękowe<html>");
      EX_PL[123] = new JLabel("<html>depresja<html>");
      EX_PL[124] = new JLabel("<html>zaburzenia dwubiegunowe<html>");
      EX_PL[125] = new JLabel("<html>antydepresanty<html>");
      EX_PL[126] = new JLabel("<html>pomoc psychologiczna<html>");
      EX_PL[127] = new JLabel("<html>lekarz pierwszego kontaktu<html>");
      EX_PL[128] = new JLabel("<html>dermatolog<html>");
      EX_PL[129] = new JLabel("<html>okulista<html>");
      EX_PL[130] = new JLabel("<html>kardiolog<html>");
      EX_PL[131] = new JLabel("<html>laryngolog<html>");
      EX_PL[132] = new JLabel("<html>dietetyk<html>");
      EX_PL[133] = new JLabel("<html>wizyta<html>");
      EX_PL[134] = new JLabel("<html>zbadać<html>");
      EX_PL[135] = new JLabel("<html>znieczulić / dać znieczulenie<html>");
      EX_PL[136] = new JLabel("<html>zdiagnozować<html>");
      EX_PL[137] = new JLabel("<html>leczyć<html>");
      EX_PL[138] = new JLabel("<html>operować<html>");
      EX_PL[139] = new JLabel("<html>chemioterapia<html>");
      EX_PL[140] = new JLabel("<html>stół operacyjny<html>");
      EX_PL[141] = new JLabel("<html>skalpel<html>");
      EX_PL[142] = new JLabel("<html>tlen<html>");
      EX_PL[143] = new JLabel("<html>śpiączka<html>");
      EX_PL[144] = new JLabel("<html>zemdleć / stracić przytomność<html>");
      EX_PL[145] = new JLabel("<html>odzyskać przytomność<html>");
      // 5. Advanced Legal Words
      EX_PL[146] = new JLabel("<html>sędzia<html>");
      EX_PL[147] = new JLabel("<html>adwokat<html>");
      EX_PL[148] = new JLabel("<html>prokurator<html>");
      EX_PL[149] = new JLabel("<html>zaświadczenie o niekaralności<html>");
      EX_PL[150] = new JLabel("<html>apelacja<html>");
      EX_PL[151] = new JLabel("<html>sądowy<html>");
      EX_PL[152] = new JLabel("<html>pozwać<html>");
      EX_PL[153] = new JLabel("<html>sprawa (sądowa)<html>");
      EX_PL[154] = new JLabel("<html>świadek<html>");
      EX_PL[155] = new JLabel("<html>zeznawać<html>");
      EX_PL[156] = new JLabel("<html>skazać<html>");
      EX_PL[157] = new JLabel("<html>kaucja<html>");
      EX_PL[158] = new JLabel("<html>uniewinnić<html>");
      EX_PL[159] = new JLabel("<html>dożywocie<html>");
      EX_PL[160] = new JLabel("<html>kara śmierci<html>");
      EX_PL[161] = new JLabel("<html>kara grzywny / grzywna<html>");
      EX_PL[162] = new JLabel("<html>w zawieszeniu<html>");
      EX_PL[163] = new JLabel("<html>nakaz<html>");
      EX_PL[164] = new JLabel("<html>notariusz<html>");
      EX_PL[165] = new JLabel("<html>spadek<html>");
      EX_PL[166] = new JLabel("<html>porwanie<html>");
      EX_PL[167] = new JLabel("<html>morderstwo<html>");
      EX_PL[168] = new JLabel("<html>kradzież<html>");
      EX_PL[169] = new JLabel("<html>szantaż<html>");
      EX_PL[170] = new JLabel("<html>włamanie<html>");
      // 6. Advanced Political Vocabulary
      EX_PL[171] = new JLabel("<html>Sejm<html>");
      EX_PL[172] = new JLabel("<html>Senat<html>");
      EX_PL[173] = new JLabel("<html>poseł<html>");
      EX_PL[174] = new JLabel("<html>senator<html>");
      EX_PL[175] = new JLabel("<html>głosować<html>");
      EX_PL[176] = new JLabel("<html>wybory<html>");
      EX_PL[177] = new JLabel("<html>prezydent<html>");
      EX_PL[178] = new JLabel("<html>rządzić<html>");
      EX_PL[179] = new JLabel("<html>podać się do dymisji<html>");
      EX_PL[180] = new JLabel("<html>premier<html>");
      EX_PL[181] = new JLabel("<html>minister<html>");
      EX_PL[182] = new JLabel("<html>ministerstwo<html>");
      EX_PL[183] = new JLabel("<html>ustawa<html>");
      EX_PL[184] = new JLabel("<html>zawetować<html>");
      EX_PL[185] = new JLabel("<html>przegłosować<html>");
      EX_PL[186] = new JLabel("<html>nanieść poprawki<html>");
      EX_PL[187] = new JLabel("<html>przepisy<html>");
      EX_PL[188] = new JLabel("<html>korupcja<html>");
      EX_PL[189] = new JLabel("<html>łapówka<html>");
      EX_PL[190] = new JLabel("<html>przyjąć łapówkę<html>");
      EX_PL[191] = new JLabel("<html>protestować<html>");
      EX_PL[192] = new JLabel("<html>partia polityczna<html>");
      EX_PL[193] = new JLabel("<html>lewica<html>");
      EX_PL[194] = new JLabel("<html>prawica<html>");
      EX_PL[195] = new JLabel("<html>opozycja<html>");
      // Must-Know Advanced Polish Phrases
      // 1. Useful Phrases for Academic Writing
      EG_PL_URL = new URL[196];
      EG_PL_AIS = new AudioInputStream[196];
      EG_PL_Clip = new Clip[196];
      EG_PL_URL[0] = getClass().getResource("Po pierwsze to ważny temat. Po drugie mało się o nim mówi. Po trzecie to wciąż tabu w naszej kulturze..wav");
      EG_PL_URL[1] = getClass().getResource("Należy zwrócić uwagę, że nie wszyscy Polacy zgadzają się z tą postawą..wav");
      EG_PL_URL[2] = getClass().getResource("Jak się okazuje to nie do końca prawda..wav");
      EG_PL_URL[3] = getClass().getResource("Zakładając, że autor ma rację jest to poważny zarzut..wav");
      EG_PL_URL[4] = getClass().getResource("Według autora nie jest to najlepsze rozwiązanie..wav");
      EG_PL_URL[5] = getClass().getResource("Warto podkreślić, że to tylko teoria..wav");
      EG_PL_URL[6] = getClass().getResource("Można powiedzieć, że ludzie reagują w takich sytuacjach impulsywnie..wav");
      EG_PL_URL[7] = getClass().getResource("Nie ulega wątpliwości, że to nie jest idealne rozwiązanie..wav");
      EG_PL_URL[8] = getClass().getResource("Wbrew zdaniu wielu osób to nie do końca prawda..wav");
      EG_PL_URL[9] = getClass().getResource("Mogłoby się wydawać, że to definitywnie zakończy dyskusję..wav");
      EG_PL_URL[10] = getClass().getResource("Prawdopodobnie nigdy nie dowiemy się prawdy..wav");
      EG_PL_URL[11] = getClass().getResource("Ogólnie rzecz biorąc, tendencje destrukcyjne nie biorą się znikąd..wav");
      EG_PL_URL[12] = getClass().getResource("Badania wskazują, że u większości osób nie ma tej cechy..wav");
      EG_PL_URL[13] = getClass().getResource("Dla przykładu warto przywołać badania doktora Nowaka..wav");
      EG_PL_URL[14] = getClass().getResource("Większość pytanych niechętnie wypowiada się na ten temat..wav");
      EG_PL_URL[30] = getClass().getResource("Ten projekt musi być wykonany ASAP. Ten projekt jest do zrobienia na wczoraj..wav");
      EG_PL_URL[31] = getClass().getResource("Jaki jest brif brief.wav");
      EG_PL_URL[32] = getClass().getResource("Jaki jest dedlajn deadline.wav");
      EG_PL_URL[33] = getClass().getResource("Jaki jest dreskod dresscode w twojej firmie.wav");
      EG_PL_URL[34] = getClass().getResource("Mamy fakap. Mamy poważny problem..wav");
      EG_PL_URL[35] = getClass().getResource("Mamy feedback informacje zwrotne od klienta.wav");
      EG_PL_URL[36] = getClass().getResource("Nie mogę, mam wtedy kola calla z klientem..wav");
      EG_PL_URL[37] = getClass().getResource("Nie lubię pracować w ołpenspejsie openspace..wav");
      EG_PL_URL[38] = getClass().getResource("Muszę zrobić risercz research..wav");
      EG_PL_URL[39] = getClass().getResource("On nie wyrabia targetów..wav");
      EG_PL_URL[50] = getClass().getResource("On pięknie się wysławia..wav");
      EG_PL_URL[51] = getClass().getResource("Założeniem tego eseju jest omówienie tej problematyki..wav");
      EG_PL_URL[52] = getClass().getResource("Stały wzrost gospodarczy dobrze wróży..wav");
      EG_PL_URL[53] = getClass().getResource("Nie mam ochoty o tym dyskutować..wav");
      EG_PL_URL[54] = getClass().getResource("Zbieramy dane na temat tego miasta..wav");
      EG_PL_URL[55] = getClass().getResource("To prowadzi do deficytu..wav");
      EG_PL_URL[56] = getClass().getResource("Szukamy odpowiedniego kandydata..wav");
      EG_PL_URL[57] = getClass().getResource("Jego raport jest szczegółowy..wav");
      EG_PL_URL[58] = getClass().getResource("Ona jest bardzo rozsądna..wav");
      EG_PL_URL[59] = getClass().getResource("Można zauważyć subtelną tendencje spadkową..wav");
      EG_PL_URL[60] = getClass().getResource("Ten scenariusz jest prawdopodobny..wav");
      EG_PL_URL[61] = getClass().getResource("Te wyniki są zupełnie nieprawdopodobne..wav");
      EG_PL_URL[62] = getClass().getResource("Nie bierz tego dosłownie..wav");
      EG_PL_URL[63] = getClass().getResource("Mimo że się z nim nie zgadzam, nie powiem mu tego..wav");
      EG_PL_URL[64] = getClass().getResource("W tym przypadku to dobre rozwiązanie..wav");
      EG_PL_URL[65] = getClass().getResource("Powiedz jej, chyba że się boisz..wav");
      EG_PL_URL[66] = getClass().getResource("Niemniej jednak, to ważny argument..wav");
      EG_PL_URL[67] = getClass().getResource("On jest wykształcony. Co więcej, ma doświadczenie..wav");
      EG_PL_URL[68] = getClass().getResource("Pracuję jako zastępca nauczyciela angielskiego..wav");
      EG_PL_URL[69] = getClass().getResource("Wypił herbatę mimo bólu gardła..wav");
      EG_PL_URL[70] = getClass().getResource("Jeśli chodzi o moje referencje, to może Pan zadzwonić do mojego szefa..wav");
      EG_PL_URL[71] = getClass().getResource("Podczas gdy ty odpoczywasz, ja pracuję..wav");
      EG_PL_URL[72] = getClass().getResource("Nie będę się z Tobą spierać..wav");
      EG_PL_URL[73] = getClass().getResource("Z twojej odpowiedzi wnioskuję, że nie masz czasu..wav");
      EG_PL_URL[74] = getClass().getResource("Nie ma dowodu na to, że Twoja teoria jest poprawna..wav");
      EG_PL_URL[75] = getClass().getResource("Idę na wykład..wav");
      EG_PL_URL[76] = getClass().getResource("Mój wykładowca Moja wykładowczyni od literatury angielskiej jest super..wav");
      EG_PL_URL[77] = getClass().getResource("W sali wykładowej nie było już miejsc..wav");
      EG_PL_URL[78] = getClass().getResource("Niedługo skończę pisać moją pracę magisterską..wav");
      EG_PL_URL[79] = getClass().getResource("Chyba spóźnię się na zajęcia..wav");
      EG_PL_URL[80] = getClass().getResource("Wykładowca nie sprawdził listy obecności..wav");
      EG_PL_URL[81] = getClass().getResource("Mam dobre oceny..wav");
      EG_PL_URL[82] = getClass().getResource("Moja średnia jest niska..wav");
      EG_PL_URL[83] = getClass().getResource("Potrzebne mi stypendium, aby przeżyć..wav");
      EG_PL_URL[84] = getClass().getResource("Dostałam się na studia dzienne!.wav");
      EG_PL_URL[85] = getClass().getResource("Studia wieczorowe łatwiej pogodzić z pracą..wav");
      EG_PL_URL[86] = getClass().getResource("Niedługo skończę studia..wav");
      EG_PL_URL[87] = getClass().getResource("Absolwentom nie łatwo znaleźć pracę..wav");
      EG_PL_URL[88] = getClass().getResource("Musisz znaleźć staż..wav");
      EG_PL_URL[89] = getClass().getResource("Erasmus to świetna wymiana studencka..wav");
      EG_PL_URL[90] = getClass().getResource("On studiuje na Uniwersytecie Warszawskim..wav");
      EG_PL_URL[91] = getClass().getResource("On przygotowuje się do egzaminu..wav");
      EG_PL_URL[92] = getClass().getResource("Zdaliśmy egzamin!.wav");
      EG_PL_URL[93] = getClass().getResource("Niestety oblałem ten egzamin..wav");
      EG_PL_URL[94] = getClass().getResource("Proszę mnie nie oblewać!.wav");
      EG_PL_URL[95] = getClass().getResource("Podeszliśmy do egzaminu dwa razy..wav");
      EG_PL_URL[96] = getClass().getResource("Poprawka odbędzie się we wrześniu..wav");
      EG_PL_URL[97] = getClass().getResource("Nie mam zamiaru iść na zjazd absolwentów..wav");
      EG_PL_URL[98] = getClass().getResource("Pracuję w dziale personalnym..wav");
      EG_PL_URL[99] = getClass().getResource("Siedziba tej firmy jest w Warszawie..wav");
      EG_PL_URL[100] = getClass().getResource("Jeśli nie zacznie pracować, czeka go zwolnienie..wav");
      EG_PL_URL[101] = getClass().getResource("Oni go nigdy nie zwolnią..wav");
      EG_PL_URL[102] = getClass().getResource("Zwolnię się Złożę wypowiedzenie, jeśli nic się nie zmieni..wav");
      EG_PL_URL[103] = getClass().getResource("Dochody mojej firmy są wysokie..wav");
      EG_PL_URL[104] = getClass().getResource("Moim zdaniem to wygórowane wynagrodzenie..wav");
      EG_PL_URL[105] = getClass().getResource("Wynagrodzenie jest dobre, ale firma nie oferuje ubezpieczenia..wav");
      EG_PL_URL[106] = getClass().getResource("Liczę na jakieś benefity w tej firmie..wav");
      EG_PL_URL[107] = getClass().getResource("To atrakcyjna oferta pracy..wav");
      EG_PL_URL[108] = getClass().getResource("Rynek pracy jest słaby..wav");
      EG_PL_URL[109] = getClass().getResource("Złożył do nas podanie o pracę..wav");
      EG_PL_URL[110] = getClass().getResource("Zatrudnimy tylko odpowiedniego kandydata..wav");
      EG_PL_URL[111] = getClass().getResource("Jutro kończy mi się umowa o pracę..wav");
      EG_PL_URL[112] = getClass().getResource("Nie jestem freelancerem, ale mam umowę o dzieło..wav");
      EG_PL_URL[113] = getClass().getResource("Mamy pracę na cały etat..wav");
      EG_PL_URL[114] = getClass().getResource("Pracuję na pół etatu i studiuję..wav");
      EG_PL_URL[115] = getClass().getResource("Ona jest ciągle w podróży służbowej..wav");
      EG_PL_URL[116] = getClass().getResource("W Polsce urlop macierzyński trwa rok, a tacierzyński dwa tygodnie..wav");
      EG_PL_URL[117] = getClass().getResource("Idę na urlop..wav");
      EG_PL_URL[118] = getClass().getResource("Jestem na chorobowym..wav");
      EG_PL_URL[119] = getClass().getResource("Przy dwóch dniach nieobecności potrzebne ci zwolnienie lekarskie..wav");
      EG_PL_URL[120] = getClass().getResource("Uwielbiam tę markę!.wav");
      EG_PL_URL[121] = getClass().getResource("Znak towarowy jest zastrzeżony..wav");
      EG_PL_URL[122] = getClass().getResource("Cierpię na stany lękowe..wav");
      EG_PL_URL[123] = getClass().getResource("On ma depresje..wav");
      EG_PL_URL[124] = getClass().getResource("Zaburzenia dwubiegunowe to choroba, która dotyka wiele osób..wav");
      EG_PL_URL[125] = getClass().getResource("On bierze antydepresanty..wav");
      EG_PL_URL[126] = getClass().getResource("W Polsce coraz łatwiej o pomoc psychologiczną..wav");
      EG_PL_URL[127] = getClass().getResource("Skontaktowałam się z moim lekarzem pierwszego kontaktu..wav");
      EG_PL_URL[128] = getClass().getResource("Mój syn chce zostać dermatologiem..wav");
      EG_PL_URL[129] = getClass().getResource("Okulista bada wzrok..wav");
      EG_PL_URL[130] = getClass().getResource("Kardiolog leczy choroby serca..wav");
      EG_PL_URL[131] = getClass().getResource("Laryngolog pomoże z problemami z uszami, nosem i gardłem..wav");
      EG_PL_URL[132] = getClass().getResource("Dietetyk może zaplanować twoją dietę..wav");
      EG_PL_URL[133] = getClass().getResource("Umówiłam Cię na wizytę u dentysty na jutro..wav");
      EG_PL_URL[134] = getClass().getResource("Doktor bada pacjentów..wav");
      EG_PL_URL[135] = getClass().getResource("Nie dam Panu znieczulenia!.wav");
      EG_PL_URL[136] = getClass().getResource("Zdiagnozowano u niego raka..wav");
      EG_PL_URL[137] = getClass().getResource("On wie, jak leczyć dzieci..wav");
      EG_PL_URL[138] = getClass().getResource("On nigdy nic nie mówi, gdy operuje..wav");
      EG_PL_URL[139] = getClass().getResource("Chemioterapia to leczenie inwazyjne..wav");
      EG_PL_URL[140] = getClass().getResource("Stół operacyjny musi być czysty..wav");
      EG_PL_URL[141] = getClass().getResource("Skalpel musi być sterylny..wav");
      EG_PL_URL[142] = getClass().getResource("Siostro, proszę podać pacjentowi tlen..wav");
      EG_PL_URL[143] = getClass().getResource("Jej ojciec jest w śpiączce od 10 lat..wav");
      EG_PL_URL[144] = getClass().getResource("Nie stracił przytomności..wav");
      EG_PL_URL[145] = getClass().getResource("Pacjent wciąż nie odzyskał przytomności..wav");
      EG_PL_URL[146] = getClass().getResource("To sędzia Sądu Najwyższego..wav");
      EG_PL_URL[147] = getClass().getResource("Jego adwokat ma rację..wav");
      EG_PL_URL[148] = getClass().getResource("Prokurator nie ma dowodów..wav");
      EG_PL_URL[149] = getClass().getResource("Potrzebne mi zaświadczenie o niekaralności..wav");
      EG_PL_URL[150] = getClass().getResource("Możemy złożyć apelację..wav");
      EG_PL_URL[151] = getClass().getResource("Proces sądowy może być skomplikowany..wav");
      EG_PL_URL[152] = getClass().getResource("Pozwał ich do sądu..wav");
      EG_PL_URL[153] = getClass().getResource("Ten adwokat nie chce wziąć mojej sprawy..wav");
      EG_PL_URL[154] = getClass().getResource("To świadek zbrodni..wav");
      EG_PL_URL[155] = getClass().getResource("Chciałaby zeznawać, ale się boi..wav");
      EG_PL_URL[156] = getClass().getResource("Skazano go na trzy lata w więzieniu..wav");
      EG_PL_URL[157] = getClass().getResource("Kaucja nie jest wysoka..wav");
      EG_PL_URL[158] = getClass().getResource("Na szczęście został uniewinniony..wav");
      EG_PL_URL[159] = getClass().getResource("Dożywocie to najsurowsza kara w Polsce..wav");
      EG_PL_URL[160] = getClass().getResource("Kara śmierci jest wykonywana w niektórych stanach w USA..wav");
      EG_PL_URL[161] = getClass().getResource("Ukarano ich tylko grzywna..wav");
      EG_PL_URL[162] = getClass().getResource("Kara jest w zawieszeniu..wav");
      EG_PL_URL[163] = getClass().getResource("Bez nakazu nie wolno nam go aresztować..wav");
      EG_PL_URL[164] = getClass().getResource("Potrzebny nam podpis notariusza..wav");
      EG_PL_URL[165] = getClass().getResource("Dzieciom należy się spadek..wav");
      EG_PL_URL[166] = getClass().getResource("Porwania to duży problem w tym kraju..wav");
      EG_PL_URL[167] = getClass().getResource("Dużo morderstw popełnianych jest pod wpływem alkoholu..wav");
      EG_PL_URL[168] = getClass().getResource("Oskarżono go o kradzież..wav");
      EG_PL_URL[169] = getClass().getResource("Szantaż to przestępstwo..wav");
      EG_PL_URL[170] = getClass().getResource("Włamanie zostało zgłoszone..wav");
      EG_PL_URL[171] = getClass().getResource("Jutro wybory do Sejmu..wav");
      EG_PL_URL[172] = getClass().getResource("Senat to wyższa izba..wav");
      EG_PL_URL[173] = getClass().getResource("Chciałabym zostać posłem..wav");
      EG_PL_URL[174] = getClass().getResource("Ile trwa kadencja senatora.wav");
      EG_PL_URL[175] = getClass().getResource("Trzeba głosować..wav");
      EG_PL_URL[176] = getClass().getResource("Idziemy na wybory!.wav");
      EG_PL_URL[177] = getClass().getResource("Prezydent Polski to Andrzej Duda..wav");
      EG_PL_URL[178] = getClass().getResource("Prezydent rządzi krajem..wav");
      EG_PL_URL[179] = getClass().getResource("Prezydent podał się do dymisji..wav");
      EG_PL_URL[180] = getClass().getResource("Premier dziś wygłosi przemówienie..wav");
      EG_PL_URL[181] = getClass().getResource("Kto jest teraz ministrem sprawiedliwości.wav");
      EG_PL_URL[182] = getClass().getResource("To ministerstwo jest niedofinansowane..wav");
      EG_PL_URL[183] = getClass().getResource("Nowa ustawa wejdzie w życie jutro..wav");
      EG_PL_URL[184] = getClass().getResource("Prezydent zawetował ustawę..wav");
      EG_PL_URL[185] = getClass().getResource("Przegłosowano tę ustawę..wav");
      EG_PL_URL[186] = getClass().getResource("Do tej ustawy rząd naniesie jeszcze poprawki..wav");
      EG_PL_URL[187] = getClass().getResource("Czekają nas zmiany w przepisach..wav");
      EG_PL_URL[188] = getClass().getResource("Mówi się o korupcji w rządzie..wav");
      EG_PL_URL[189] = getClass().getResource("Ten urzędnik dostał łapówkę..wav");
      EG_PL_URL[190] = getClass().getResource("Czy przyjąłbyś łapówkę.wav");
      EG_PL_URL[191] = getClass().getResource("Oni protestują przeciwko rządowi..wav");
      EG_PL_URL[192] = getClass().getResource("Nie głosowałem nigdy na tę partię..wav");
      EG_PL_URL[193] = getClass().getResource("To jest partia lewicy..wav");
      EG_PL_URL[194] = getClass().getResource("Prawica ma większość w rządzie..wav");
      EG_PL_URL[195] = getClass().getResource("Opozycja nie zgadza się z twoim zdaniem..wav");
      EG_PL = new JLabel[196];
      EG_PL[0] = new JLabel("<html>Po pierwsze to ważny temat. Po drugie mało się o nim mówi. Po trzecie to wciąż tabu w naszej kulturze.<html>");
      EG_PL[1] = new JLabel("<html>Należy zwrócić uwagę, że nie wszyscy Polacy zgadzają się z tą postawą.<html>");
      EG_PL[2] = new JLabel("<html>Jak się okazuje to nie do końca prawda.<html>");
      EG_PL[3] = new JLabel("<html>Zakładając, że autor ma rację jest to poważny zarzut.<html>");
      EG_PL[4] = new JLabel("<html>Według autora nie jest to najlepsze rozwiązanie.<html>");
      EG_PL[5] = new JLabel("<html>Warto podkreślić, że to tylko teoria.<html>");
      EG_PL[6] = new JLabel("<html>Można powiedzieć, że ludzie reagują w takich sytuacjach impulsywnie.<html>");
      EG_PL[7] = new JLabel("<html>Nie ulega wątpliwości, że to nie jest idealne rozwiązanie.<html>");
      EG_PL[8] = new JLabel("<html>Wbrew zdaniu wielu osób to nie do końca prawda.<html>");
      EG_PL[9] = new JLabel("<html>Mogłoby się wydawać, że to definitywnie zakończy dyskusję.<html>");
      EG_PL[10] = new JLabel("<html>Prawdopodobnie nigdy nie dowiemy się prawdy.<html>");
      EG_PL[11] = new JLabel("<html>Ogólnie rzecz biorąc, tendencje destrukcyjne nie biorą się znikąd.<html>");
      EG_PL[12] = new JLabel("<html>Badania wskazują, że u większości osób nie ma tej cechy.<html>");
      EG_PL[13] = new JLabel("<html>Dla przykładu warto przywołać badania doktora Nowaka.<html>");
      EG_PL[14] = new JLabel("<html>Większość pytanych niechętnie wypowiada się na ten temat.<html>");
      // 3. Smart Phrases for Business Meetings
      EG_PL[30] = new JLabel("<html>Ten projekt musi być wykonany ASAP. / Ten projekt jest do zrobienia na wczoraj.<html>");
      EG_PL[31] = new JLabel("<html>Jaki jest brif/brief?<html>");
      EG_PL[32] = new JLabel("<html>Jaki jest dedlajn/deadline?<html>");
      EG_PL[33] = new JLabel("<html>Jaki jest dreskod/dresscode w twojej firmie?<html>");
      EG_PL[34] = new JLabel("<html>Mamy fakap. / Mamy poważny problem.<html>");
      EG_PL[35] = new JLabel("<html>Mamy feedback/informacje zwrotne od klienta?<html>");
      EG_PL[36] = new JLabel("<html>Nie mogę, mam wtedy kola/calla z klientem.<html>");
      EG_PL[37] = new JLabel("<html>Nie lubię pracować w ołpenspejsie/openspace.<html>");
      EG_PL[38] = new JLabel("<html>Muszę zrobić risercz/research.<html>");
      EG_PL[39] = new JLabel("<html>On nie wyrabia targetów.<html>");
      // Advanced Polish Words for Experienced Learners
      // 1. Advanced Academic Words
      EG_PL[50] = new JLabel("<html>On pięknie się wysławia.<html>");
      EG_PL[51] = new JLabel("<html>Założeniem tego eseju jest omówienie tej problematyki.<html>");
      EG_PL[52] = new JLabel("<html>Stały wzrost gospodarczy dobrze wróży.<html>");
      EG_PL[53] = new JLabel("<html>Nie mam ochoty o tym dyskutować.<html>");
      EG_PL[54] = new JLabel("<html>Zbieramy dane na temat tego miasta.<html>");
      EG_PL[55] = new JLabel("<html>To prowadzi do deficytu.<html>");
      EG_PL[56] = new JLabel("<html>Szukamy odpowiedniego kandydata.<html>");
      EG_PL[57] = new JLabel("<html>Jego raport jest szczegółowy.<html>");
      EG_PL[58] = new JLabel("<html>Ona jest bardzo rozsądna.<html>");
      EG_PL[59] = new JLabel("<html>Można zauważyć subtelną tendencje spadkową.<html>");
      EG_PL[60] = new JLabel("<html>Ten scenariusz jest prawdopodobny.<html>");
      EG_PL[61] = new JLabel("<html>Te wyniki są zupełnie nieprawdopodobne.<html>");
      EG_PL[62] = new JLabel("<html>Nie bierz tego dosłownie.<html>");
      EG_PL[63] = new JLabel("<html>Mimo że się z nim nie zgadzam, nie powiem mu tego.<html>");
      EG_PL[64] = new JLabel("<html>W tym przypadku to dobre rozwiązanie.<html>");
      EG_PL[65] = new JLabel("<html>Powiedz jej, chyba że się boisz.<html>");
      EG_PL[66] = new JLabel("<html>Niemniej jednak, to ważny argument.<html>");
      EG_PL[67] = new JLabel("<html>On jest wykształcony. Co więcej, ma doświadczenie.<html>");
      EG_PL[68] = new JLabel("<html>Pracuję jako zastępca nauczyciela angielskiego.<html>");
      EG_PL[69] = new JLabel("<html>Wypił herbatę mimo bólu gardła.<html>");
      EG_PL[70] = new JLabel("<html>Jeśli chodzi o moje referencje, to może Pan zadzwonić do mojego szefa.<html>");
      EG_PL[71] = new JLabel("<html>Podczas gdy ty odpoczywasz, ja pracuję.<html>");
      EG_PL[72] = new JLabel("<html>Nie będę się z Tobą spierać.<html>");
      EG_PL[73] = new JLabel("<html>Z twojej odpowiedzi wnioskuję, że nie masz czasu.<html>");
      EG_PL[74] = new JLabel("<html>Nie ma dowodu na to, że Twoja teoria jest poprawna.<html>");
      // 2. Advanced College Vocabulary
      EG_PL[75] = new JLabel("<html>Idę na wykład.<html>");
      EG_PL[76] = new JLabel("<html>Mój wykładowca / Moja wykładowczyni od literatury angielskiej jest super.<html>");
      EG_PL[77] = new JLabel("<html>W sali wykładowej nie było już miejsc.<html>");
      EG_PL[78] = new JLabel("<html>Niedługo skończę pisać moją pracę magisterską.<html>");
      EG_PL[79] = new JLabel("<html>Chyba spóźnię się na zajęcia.<html>");
      EG_PL[80] = new JLabel("<html>Wykładowca nie sprawdził listy obecności.<html>");
      EG_PL[81] = new JLabel("<html>Mam dobre oceny.<html>");
      EG_PL[82] = new JLabel("<html>Moja średnia jest niska.<html>");
      EG_PL[83] = new JLabel("<html>Potrzebne mi stypendium, aby przeżyć.<html>");
      EG_PL[84] = new JLabel("<html>Dostałam się na studia dzienne!<html>");
      EG_PL[85] = new JLabel("<html>Studia wieczorowe łatwiej pogodzić z pracą.<html>");
      EG_PL[86] = new JLabel("<html>Niedługo skończę studia.<html>");
      EG_PL[87] = new JLabel("<html>Absolwentom nie łatwo znaleźć pracę.<html>");
      EG_PL[88] = new JLabel("<html>Musisz znaleźć staż.<html>");
      EG_PL[89] = new JLabel("<html>Erasmus to świetna wymiana studencka.<html>");
      EG_PL[90] = new JLabel("<html>On studiuje na Uniwersytecie Warszawskim.<html>");
      EG_PL[91] = new JLabel("<html>On przygotowuje się do egzaminu.<html>");
      EG_PL[92] = new JLabel("<html>Zdaliśmy egzamin!<html>");
      EG_PL[93] = new JLabel("<html>Niestety oblałem ten egzamin.<html>");
      EG_PL[94] = new JLabel("<html>Proszę mnie nie oblewać!<html>");
      EG_PL[95] = new JLabel("<html>Podeszliśmy do egzaminu dwa razy.<html>");
      EG_PL[96] = new JLabel("<html>Poprawka odbędzie się we wrześniu.<html>");
      EG_PL[97] = new JLabel("<html>Nie mam zamiaru iść na zjazd absolwentów.<html>");
      // 3. Advanced Business Words
      EG_PL[98] = new JLabel("<html>Pracuję w dziale personalnym.<html>");
      EG_PL[99] = new JLabel("<html>Siedziba tej firmy jest w Warszawie.<html>");
      EG_PL[100] = new JLabel("<html>Jeśli nie zacznie pracować, czeka go zwolnienie.<html>");
      EG_PL[101] = new JLabel("<html>Oni go nigdy nie zwolnią.<html>");
      EG_PL[102] = new JLabel("<html>Zwolnię się / Złożę wypowiedzenie, jeśli nic się nie zmieni.<html>");
      EG_PL[103] = new JLabel("<html>Dochody mojej firmy są wysokie.<html>");
      EG_PL[104] = new JLabel("<html>Moim zdaniem to wygórowane wynagrodzenie.<html>");
      EG_PL[105] = new JLabel("<html>Wynagrodzenie jest dobre, ale firma nie oferuje ubezpieczenia.<html>");
      EG_PL[106] = new JLabel("<html>Liczę na jakieś benefity w tej firmie.<html>");
      EG_PL[107] = new JLabel("<html>To atrakcyjna oferta pracy.<html>");
      EG_PL[108] = new JLabel("<html>Rynek pracy jest słaby.<html>");
      EG_PL[109] = new JLabel("<html>Złożył do nas podanie o pracę.<html>");
      EG_PL[110] = new JLabel("<html>Zatrudnimy tylko odpowiedniego kandydata.<html>");
      EG_PL[111] = new JLabel("<html>Jutro kończy mi się umowa o pracę.<html>");
      EG_PL[112] = new JLabel("<html>Nie jestem freelancerem, ale mam umowę o dzieło.<html>");
      EG_PL[113] = new JLabel("<html>Mamy pracę na cały etat.<html>");
      EG_PL[114] = new JLabel("<html>Pracuję na pół etatu i studiuję.<html>");
      EG_PL[115] = new JLabel("<html>Ona jest ciągle w podróży służbowej.<html>");
      EG_PL[116] = new JLabel("<html>W Polsce urlop macierzyński trwa rok, a tacierzyński dwa tygodnie.<html>");
      EG_PL[117] = new JLabel("<html>Idę na urlop.<html>");
      EG_PL[118] = new JLabel("<html>Jestem na chorobowym.<html>");
      EG_PL[119] = new JLabel("<html>Przy dwóch dniach nieobecności potrzebne ci zwolnienie lekarskie.<html>");
      EG_PL[120] = new JLabel("<html>Uwielbiam tę markę!<html>");
      EG_PL[121] = new JLabel("<html>Znak towarowy jest zastrzeżony.<html>");
      // 4. Advanced Medical Words
      EG_PL[122] = new JLabel("<html>Cierpię na stany lękowe.<html>");
      EG_PL[123] = new JLabel("<html>On ma depresje.<html>");
      EG_PL[124] = new JLabel("<html>Zaburzenia dwubiegunowe to choroba, która dotyka wiele osób.<html>");
      EG_PL[125] = new JLabel("<html>On bierze antydepresanty.<html>");
      EG_PL[126] = new JLabel("<html>W Polsce coraz łatwiej o pomoc psychologiczną.<html>");
      EG_PL[127] = new JLabel("<html>Skontaktowałam się z moim lekarzem pierwszego kontaktu.<html>");
      EG_PL[128] = new JLabel("<html>Mój syn chce zostać dermatologiem.<html>");
      EG_PL[129] = new JLabel("<html>Okulista bada wzrok.<html>");
      EG_PL[130] = new JLabel("<html>Kardiolog leczy choroby serca.<html>");
      EG_PL[131] = new JLabel("<html>Laryngolog pomoże z problemami z uszami, nosem i gardłem.<html>");
      EG_PL[132] = new JLabel("<html>Dietetyk może zaplanować twoją dietę.<html>");
      EG_PL[133] = new JLabel("<html>Umówiłam Cię na wizytę u dentysty na jutro.<html>");
      EG_PL[134] = new JLabel("<html>Doktor bada pacjentów.<html>");
      EG_PL[135] = new JLabel("<html>Nie dam Panu znieczulenia!<html>");
      EG_PL[136] = new JLabel("<html>Zdiagnozowano u niego raka.<html>");
      EG_PL[137] = new JLabel("<html>On wie, jak leczyć dzieci.<html>");
      EG_PL[138] = new JLabel("<html>On nigdy nic nie mówi, gdy operuje.<html>");
      EG_PL[139] = new JLabel("<html>Chemioterapia to leczenie inwazyjne.<html>");
      EG_PL[140] = new JLabel("<html>Stół operacyjny musi być czysty.<html>");
      EG_PL[141] = new JLabel("<html>Skalpel musi być sterylny.<html>");
      EG_PL[142] = new JLabel("<html>Siostro, proszę podać pacjentowi tlen.<html>");
      EG_PL[143] = new JLabel("<html>Jej ojciec jest w śpiączce od 10 lat.<html>");
      EG_PL[144] = new JLabel("<html>Nie stracił przytomności.<html>");
      EG_PL[145] = new JLabel("<html>Pacjent wciąż nie odzyskał przytomności.<html>");
      // 5. Advanced Legal Words
      EG_PL[146] = new JLabel("<html>To sędzia Sądu Najwyższego.<html>");
      EG_PL[147] = new JLabel("<html>Jego adwokat ma rację.<html>");
      EG_PL[148] = new JLabel("<html>Prokurator nie ma dowodów.<html>");
      EG_PL[149] = new JLabel("<html>Potrzebne mi zaświadczenie o niekaralności.<html>");
      EG_PL[150] = new JLabel("<html>Możemy złożyć apelację.<html>");
      EG_PL[151] = new JLabel("<html>Proces sądowy może być skomplikowany.<html>");
      EG_PL[152] = new JLabel("<html>Pozwał ich do sądu.<html>");
      EG_PL[153] = new JLabel("<html>Ten adwokat nie chce wziąć mojej sprawy.<html>");
      EG_PL[154] = new JLabel("<html>To świadek zbrodni.<html>");
      EG_PL[155] = new JLabel("<html>Chciałaby zeznawać, ale się boi.<html>");
      EG_PL[156] = new JLabel("<html>Skazano go na trzy lata w więzieniu.<html>");
      EG_PL[157] = new JLabel("<html>Kaucja nie jest wysoka.<html>");
      EG_PL[158] = new JLabel("<html>Na szczęście został uniewinniony.<html>");
      EG_PL[159] = new JLabel("<html>Dożywocie to najsurowsza kara w Polsce.<html>");
      EG_PL[160] = new JLabel("<html>Kara śmierci jest wykonywana w niektórych stanach w USA.<html>");
      EG_PL[161] = new JLabel("<html>Ukarano ich tylko grzywna.<html>");
      EG_PL[162] = new JLabel("<html>Kara jest w zawieszeniu.<html>");
      EG_PL[163] = new JLabel("<html>Bez nakazu nie wolno nam go aresztować.<html>");
      EG_PL[164] = new JLabel("<html>Potrzebny nam podpis notariusza.<html>");
      EG_PL[165] = new JLabel("<html>Dzieciom należy się spadek.<html>");
      EG_PL[166] = new JLabel("<html>Porwania to duży problem w tym kraju.<html>");
      EG_PL[167] = new JLabel("<html>Dużo morderstw popełnianych jest pod wpływem alkoholu.<html>");
      EG_PL[168] = new JLabel("<html>Oskarżono go o kradzież.<html>");
      EG_PL[169] = new JLabel("<html>Szantaż to przestępstwo.<html>");
      EG_PL[170] = new JLabel("<html>Włamanie zostało zgłoszone.<html>");
      // 6. Advanced Political Vocabulary
      EG_PL[171] = new JLabel("<html>Jutro wybory do Sejmu.<html>");
      EG_PL[172] = new JLabel("<html>Senat to wyższa izba.<html>");
      EG_PL[173] = new JLabel("<html>Chciałabym zostać posłem.<html>");
      EG_PL[174] = new JLabel("<html>Ile trwa kadencja senatora?<html>");
      EG_PL[175] = new JLabel("<html>Trzeba głosować.<html>");
      EG_PL[176] = new JLabel("<html>Idziemy na wybory!<html>");
      EG_PL[177] = new JLabel("<html>Prezydent Polski to Andrzej Duda.<html>");
      EG_PL[178] = new JLabel("<html>Prezydent rządzi krajem.<html>");
      EG_PL[179] = new JLabel("<html>Prezydent podał się do dymisji.<html>");
      EG_PL[180] = new JLabel("<html>Premier dziś wygłosi przemówienie.<html>");
      EG_PL[181] = new JLabel("<html>Kto jest teraz ministrem sprawiedliwości?<html>");
      EG_PL[182] = new JLabel("<html>To ministerstwo jest niedofinansowane.<html>");
      EG_PL[183] = new JLabel("<html>Nowa ustawa wejdzie w życie jutro.<html>");
      EG_PL[184] = new JLabel("<html>Prezydent zawetował ustawę.<html>");
      EG_PL[185] = new JLabel("<html>Przegłosowano tę ustawę.<html>");
      EG_PL[186] = new JLabel("<html>Do tej ustawy rząd naniesie jeszcze poprawki.<html>");
      EG_PL[187] = new JLabel("<html>Czekają nas zmiany w przepisach.<html>");
      EG_PL[188] = new JLabel("<html>Mówi się o korupcji w rządzie.<html>");
      EG_PL[189] = new JLabel("<html>Ten urzędnik dostał łapówkę.<html>");
      EG_PL[190] = new JLabel("<html>Czy przyjąłbyś łapówkę?<html>");
      EG_PL[191] = new JLabel("<html>Oni protestują przeciwko rządowi.<html>");
      EG_PL[192] = new JLabel("<html>Nie głosowałem nigdy na tę partię.<html>");
      EG_PL[193] = new JLabel("<html>To jest partia lewicy.<html>");
      EG_PL[194] = new JLabel("<html>Prawica ma większość w rządzie.<html>");
      EG_PL[195] = new JLabel("<html>Opozycja nie zgadza się z twoim zdaniem.<html>");
      EX_InFra_Norm_Parameters();
      EG_InFra_Norm_Parameters();
      for (int i = 0; i < 196; i++) {
        EX_EN[i].addMouseListener(this);
        EX_PL[i].addMouseListener(this);
        EX_EN[i].setBorder(BorderFactory.createRaisedBevelBorder());
        EX_PL[i].setBorder(BorderFactory.createLoweredBevelBorder());
        EX_EN[i].setFont(font[2]);
        EX_PL[i].setFont(font[2]);
        EX_EN[i].setForeground(colorEN);
        EX_PL[i].setForeground(colorPL);
      }
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_PL_AIS[i] = AudioSystem.getAudioInputStream(EG_PL_URL[i]);
        EG_PL_Clip[i] = AudioSystem.getClip();
        EG_PL_Clip[i].open(EG_PL_AIS[i]);
        EG_EN[i].addMouseListener(this);
        EG_PL[i].addMouseListener(this);
        EG_EN[i].setBorder(BorderFactory.createRaisedBevelBorder());
        EG_PL[i].setBorder(BorderFactory.createLoweredBevelBorder());
        EG_EN[i].setFont(font[3]);
        EG_PL[i].setFont(font[3]);
        EG_EN[i].setForeground(colorEN);
        EG_PL[i].setForeground(colorPL);
        EX_PL[i].setToolTipText("show example sentence in English");
      }
      EG_EN[0].setFont(font[4]);
      EG_PL[0].setFont(font[4]);
      EX_PL[61].setFont(font[5]);
      EX_PL[76].setFont(font[5]);
      EX_PL[78].setFont(font[5]);
      EX_PL[85].setFont(font[5]);
      EX_EN[89].setFont(font[5]);
      EX_EN[102].setFont(font[5]);
      EX_EN[116].setFont(font[5]);
      EX_PL[15].setFont(font[5]);
      EX_EN[171].setFont(font[6]);
      EX_PL[23].setFont(font[6]);
      // Main Page
      welcomeMessageURL = getClass().getResource("Welcome to PolishPod101.wav");
      welcomeMessageAIS = AudioSystem.getAudioInputStream(welcomeMessageURL);
      welcomeMessageClip = AudioSystem.getClip();
      welcomeMessageClip.open(welcomeMessageAIS);
      welcomeMessage = new JLabel("<html>Welcome to PolishPod101: Advanced Polish!" +
        " This program introduces you to words and expressions for advanced learners of the Polish language." +
        " Start by clicking 'Topics' in the menu bar, and select any of the topics to view the content.<html>");
      welcomeMessage.setBounds(0, 0, 400, 500);
      welcomeMessage.setFont(font[1]);
      welcomeMessageClip.start();
      mainPage = new JPanel();
      mainPage.add(welcomeMessage);
      mainPage.setLayout(null);
      // EX_Panel
      EX_Panel = new JPanel[11];
      for (int i = 0; i < 11; i++) {
        EX_Panel[i] = new JPanel();
        EX_Panel[i].setLayout(null);
      }
      for (int i = 0; i < 15; i++) {
        EX_Panel[0].add(EX_EN[i]);
      }
      for (int i = 15; i < 30; i++) {
        EX_Panel[1].add(EX_EN[i]);
      }
      for (int i = 30; i < 40; i++) {
        EX_Panel[2].add(EX_EN[i]);
      }
      for (int i = 40; i < 50; i++) {
        EX_Panel[3].add(EX_EN[i]);
      }
      for (int i = 50; i < 75; i++) {
        EX_Panel[4].add(EX_EN[i]);
      }
      for (int i = 75; i < 98; i++) {
        EX_Panel[5].add(EX_EN[i]);
      }
      for (int i = 98; i < 122; i++) {
        EX_Panel[6].add(EX_EN[i]);
      }
      for (int i = 122; i < 146; i++) {
        EX_Panel[7].add(EX_EN[i]);
      }
      for (int i = 146; i < 171; i++) {
        EX_Panel[8].add(EX_EN[i]);
      }
      for (int i = 171; i < 196; i++) {
        EX_Panel[9].add(EX_EN[i]);
      }
      // EG_Panel
      EG_Panel = new JPanel();
      EG_Panel.setLayout(null);
      // internal frame
      EX_InFra = new JInternalFrame("Words and Expressions", true, false, true, false);
      EX_InFra.addPropertyChangeListener(this);
      EX_InFra.add(mainPage, BorderLayout.CENTER);
      EX_InFra.setBounds(0, 0, 450, 800);
      EX_InFra.setFrameIcon(null);
      EX_InFra.setVisible(true);
      EG_InFra = new JInternalFrame("Example sentences", true, false, true, false);
      EG_InFra.addPropertyChangeListener(this);
      EG_InFra.add(EG_Panel, BorderLayout.CENTER);
      EG_InFra.setBounds(450, 0, 830, 800);
      EG_InFra.setFrameIcon(null);
      EG_InFra.setVisible(true);
      // desktop pane
      programDesktop = new JDesktopPane();
      programDesktop.add(EX_InFra);
      programDesktop.add(EG_InFra);
      programDesktop.setLayout(null);
      // frame
      programFrame = new JFrame();
      programFrame.add(menuBar, BorderLayout.NORTH);
      programFrame.add(programDesktop, BorderLayout.CENTER);
      programFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      programFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
      programFrame.setIconImage(advancedPolishIcon.getImage());
      programFrame.setResizable(false);
      programFrame.setTitle("PolishPod101: Advanced Polish ver.1.0");
      programFrame.setVisible(true);
    }
  @Override
  public void actionPerformed(ActionEvent e) {
    for (int i = 0; i < 10; i++) {
      if (e.getSource() == topicMI[i]) {
        welcomeMessageClip.stop();
      }
    }
    for (int i = 0; i < 10; i++) {
      if (i == 1 || i == 3) {
        continue;
      }
      if (e.getSource() == topicMI[i]) {
        settingsMI[0].setEnabled(true);
        settingsMI[1].setEnabled(true);
      }
    }
    if (e.getSource() == topicMI[1] || e.getSource() == topicMI[3]) {
      settingsMI[0].setEnabled(false);
      settingsMI[1].setEnabled(false);
    }
    if (e.getSource() == topicMI[0]) {
      topicMI[0].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 1; i < 10; i++) {
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[0]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 11; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[1]) {
      topicMI[1].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 1) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[1]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[2]) {
      topicMI[2].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 2) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[2]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 30 || i == 31 || i == 32 ||
          i == 33 || i == 34 || i == 35 || i == 36 || i == 37 || i == 38 || i == 39 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[3]) {
      topicMI[3].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 3) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[3]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[4]) {
      topicMI[4].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 4) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[4]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 75; i < 196; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[5]) {
      topicMI[5].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 5) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[5]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 50; i < 75; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 98; i < 196; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[6]) {
      topicMI[6].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 6) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[6]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 50; i < 98; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 122; i < 196; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[7]) {
      topicMI[7].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 7) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[7]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 50; i < 122; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 146; i < 196; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[8]) {
      topicMI[8].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 10; i++) {
        if (i == 8) {
          continue;
        }
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[8]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 50; i < 146; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 171; i < 196; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == topicMI[9]) {
      topicMI[9].setSelected(true);
      EX_InFra.remove(mainPage);
      for (int i = 0; i < 9; i++) {
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(EX_Panel[9]);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      for (int i = 0; i < 15; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 30; i < 40; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      for (int i = 50; i < 171; i++) {
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == settingsMI[0]) {
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == settingsMI[1]) {
      if (topicMI[0].isSelected()) {
        for (int i = 0; i < 15; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[2].isSelected()) {
        for (int i = 30; i < 40; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[4].isSelected()) {
        for (int i = 50; i < 75; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[5].isSelected()) {
        for (int i = 75; i < 98; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[6].isSelected()) {
        for (int i = 98; i < 122; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[7].isSelected()) {
        for (int i = 122; i < 146; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[8].isSelected()) {
        for (int i = 146; i < 171; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
      if (topicMI[9].isSelected()) {
        for (int i = 171; i < 196; i++) {
          EG_Panel.add(EG_EN[i]);
          EG_Panel.revalidate();
          EG_Panel.repaint();
        }
      }
    }
    if (e.getSource() == settingsMI[2]) {
      URI myInstagramURI = null;
      try {
        myInstagramURI = new URI("https://www.instagram.com/alanzhou.mo/");
      } catch (URISyntaxException e1) {
        e1.printStackTrace();
      }
      try {
        Desktop.getDesktop().browse(myInstagramURI);
      } catch (IOException e2) {
        e2.printStackTrace();
      }
    }
    if (e.getSource() == settingsMI[3]) {
      URI polishPod101URI = null;
      try {
        polishPod101URI = new URI("https://www.polishpod101.com/blog/category/learn-polish/advanced-polish/");
      } catch (URISyntaxException e1) {
        e1.printStackTrace();
      }
      try {
        Desktop.getDesktop().browse(polishPod101URI);
      } catch (IOException e2) {
        e2.printStackTrace();
      }
    }
  }
  public void mouseClicked(MouseEvent e) {
    if (e.getSource() == menu[0]) {
      for (int i = 0; i < 10; i++) {
        topicMI[i].setSelected(false);
        EX_InFra.remove(EX_Panel[i]);
      }
      EX_InFra.add(mainPage);
      EX_InFra.revalidate();
      EX_InFra.repaint();
      welcomeMessageClip.setMicrosecondPosition(0);
      welcomeMessageClip.start();
      settingsMI[0].setEnabled(false);
      settingsMI[1].setEnabled(false);
      for (int i = 0; i < 196; i++) {
        if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
          i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
          i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
          continue;
        }
        EG_Panel.remove(EG_EN[i]);
        EG_Panel.remove(EG_PL[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    if (e.getSource() == menu[3]) {
      aboutDialog.setVisible(true);
    }
    if (e.getSource() == menu[4]) {
      System.exit(0);
    }
  }
  public void mouseEntered(MouseEvent e) {
    for (int i = 0; i < 15; i++) {
      if (e.getSource() == EX_EN[i]) {
        EX_Panel[0].setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      }
    }
    for (int i = 15; i < 30; i++) {
      if (e.getSource() == EX_EN[i]) {
        EX_Panel[1].setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      }
    }
    for (int i = 0; i < 196; i++) {
      if (e.getSource() == EX_PL[i]) {
        EX_PL_Clip[i].setMicrosecondPosition(0);
        EX_PL_Clip[i].start();
      }
    }
    for (int i = 0; i < 196; i++) {
      if (i == 15 || i == 16 || i == 17 || i == 18 || i == 19 || i == 20 || i == 21 || i == 22 || i == 23 ||
        i == 24 || i == 25 || i == 26 || i == 27 || i == 28 || i == 29 || i == 40 || i == 41 || i == 42 ||
        i == 43 || i == 44 || i == 45 || i == 46 || i == 47 || i == 48 || i == 49) {
        continue;
      }
      if (e.getSource() == EG_PL[i]) {
        EG_PL_Clip[i].setMicrosecondPosition(0);
        EG_PL_Clip[i].start();
      }
    }
    if (e.getSource() == EX_EN[0]) {
      EX_Panel[0].remove(EX_EN[0]);
      EX_Panel[0].add(EX_PL[0]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[1]) {
      EX_Panel[0].remove(EX_EN[1]);
      EX_Panel[0].add(EX_PL[1]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[2]) {
      EX_Panel[0].remove(EX_EN[2]);
      EX_Panel[0].add(EX_PL[2]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[3]) {
      EX_Panel[0].remove(EX_EN[3]);
      EX_Panel[0].add(EX_PL[3]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[4]) {
      EX_Panel[0].remove(EX_EN[4]);
      EX_Panel[0].add(EX_PL[4]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[5]) {
      EX_Panel[0].remove(EX_EN[5]);
      EX_Panel[0].add(EX_PL[5]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[6]) {
      EX_Panel[0].remove(EX_EN[6]);
      EX_Panel[0].add(EX_PL[6]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[7]) {
      EX_Panel[0].remove(EX_EN[7]);
      EX_Panel[0].add(EX_PL[7]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[8]) {
      EX_Panel[0].remove(EX_EN[8]);
      EX_Panel[0].add(EX_PL[8]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[9]) {
      EX_Panel[0].remove(EX_EN[9]);
      EX_Panel[0].add(EX_PL[9]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[10]) {
      EX_Panel[0].remove(EX_EN[10]);
      EX_Panel[0].add(EX_PL[10]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[11]) {
      EX_Panel[0].remove(EX_EN[11]);
      EX_Panel[0].add(EX_PL[11]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[12]) {
      EX_Panel[0].remove(EX_EN[12]);
      EX_Panel[0].add(EX_PL[12]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[13]) {
      EX_Panel[0].remove(EX_EN[13]);
      EX_Panel[0].add(EX_PL[13]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[14]) {
      EX_Panel[0].remove(EX_EN[14]);
      EX_Panel[0].add(EX_PL[14]);
      EX_Panel[0].revalidate();
      EX_Panel[0].repaint();
    }
    if (e.getSource() == EX_EN[15]) {
      EX_Panel[1].remove(EX_EN[15]);
      EX_Panel[1].add(EX_PL[15]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[16]) {
      EX_Panel[1].remove(EX_EN[16]);
      EX_Panel[1].add(EX_PL[16]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[17]) {
      EX_Panel[1].remove(EX_EN[17]);
      EX_Panel[1].add(EX_PL[17]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[18]) {
      EX_Panel[1].remove(EX_EN[18]);
      EX_Panel[1].add(EX_PL[18]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[19]) {
      EX_Panel[1].remove(EX_EN[19]);
      EX_Panel[1].add(EX_PL[19]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[20]) {
      EX_Panel[1].remove(EX_EN[20]);
      EX_Panel[1].add(EX_PL[20]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[21]) {
      EX_Panel[1].remove(EX_EN[21]);
      EX_Panel[1].add(EX_PL[21]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[22]) {
      EX_Panel[1].remove(EX_EN[22]);
      EX_Panel[1].add(EX_PL[22]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[23]) {
      EX_Panel[1].remove(EX_EN[23]);
      EX_Panel[1].add(EX_PL[23]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[24]) {
      EX_Panel[1].remove(EX_EN[24]);
      EX_Panel[1].add(EX_PL[24]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[25]) {
      EX_Panel[1].remove(EX_EN[25]);
      EX_Panel[1].add(EX_PL[25]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[26]) {
      EX_Panel[1].remove(EX_EN[26]);
      EX_Panel[1].add(EX_PL[26]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[27]) {
      EX_Panel[1].remove(EX_EN[27]);
      EX_Panel[1].add(EX_PL[27]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[28]) {
      EX_Panel[1].remove(EX_EN[28]);
      EX_Panel[1].add(EX_PL[28]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[29]) {
      EX_Panel[1].remove(EX_EN[29]);
      EX_Panel[1].add(EX_PL[29]);
      EX_Panel[1].revalidate();
      EX_Panel[1].repaint();
    }
    if (e.getSource() == EX_EN[30]) {
      EX_Panel[2].remove(EX_EN[30]);
      EX_Panel[2].add(EX_PL[30]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[31]) {
      EX_Panel[2].remove(EX_EN[31]);
      EX_Panel[2].add(EX_PL[31]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[32]) {
      EX_Panel[2].remove(EX_EN[32]);
      EX_Panel[2].add(EX_PL[32]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[33]) {
      EX_Panel[2].remove(EX_EN[33]);
      EX_Panel[2].add(EX_PL[33]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[34]) {
      EX_Panel[2].remove(EX_EN[34]);
      EX_Panel[2].add(EX_PL[34]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[35]) {
      EX_Panel[2].remove(EX_EN[35]);
      EX_Panel[2].add(EX_PL[35]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[36]) {
      EX_Panel[2].remove(EX_EN[36]);
      EX_Panel[2].add(EX_PL[36]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[37]) {
      EX_Panel[2].remove(EX_EN[37]);
      EX_Panel[2].add(EX_PL[37]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[38]) {
      EX_Panel[2].remove(EX_EN[38]);
      EX_Panel[2].add(EX_PL[38]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[39]) {
      EX_Panel[2].remove(EX_EN[39]);
      EX_Panel[2].add(EX_PL[39]);
      EX_Panel[2].revalidate();
      EX_Panel[2].repaint();
    }
    if (e.getSource() == EX_EN[40]) {
      EX_Panel[3].remove(EX_EN[40]);
      EX_Panel[3].add(EX_PL[40]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[41]) {
      EX_Panel[3].remove(EX_EN[41]);
      EX_Panel[3].add(EX_PL[41]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[42]) {
      EX_Panel[3].remove(EX_EN[42]);
      EX_Panel[3].add(EX_PL[42]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[43]) {
      EX_Panel[3].remove(EX_EN[43]);
      EX_Panel[3].add(EX_PL[43]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[44]) {
      EX_Panel[3].remove(EX_EN[44]);
      EX_Panel[3].add(EX_PL[44]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[45]) {
      EX_Panel[3].remove(EX_EN[45]);
      EX_Panel[3].add(EX_PL[45]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[46]) {
      EX_Panel[3].remove(EX_EN[46]);
      EX_Panel[3].add(EX_PL[46]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[47]) {
      EX_Panel[3].remove(EX_EN[47]);
      EX_Panel[3].add(EX_PL[47]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[48]) {
      EX_Panel[3].remove(EX_EN[48]);
      EX_Panel[3].add(EX_PL[48]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[49]) {
      EX_Panel[3].remove(EX_EN[49]);
      EX_Panel[3].add(EX_PL[49]);
      EX_Panel[3].revalidate();
      EX_Panel[3].repaint();
    }
    if (e.getSource() == EX_EN[50]) {
      EX_Panel[4].remove(EX_EN[50]);
      EX_Panel[4].add(EX_PL[50]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[51]) {
      EX_Panel[4].remove(EX_EN[51]);
      EX_Panel[4].add(EX_PL[51]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[52]) {
      EX_Panel[4].remove(EX_EN[52]);
      EX_Panel[4].add(EX_PL[52]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[53]) {
      EX_Panel[4].remove(EX_EN[53]);
      EX_Panel[4].add(EX_PL[53]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[54]) {
      EX_Panel[4].remove(EX_EN[54]);
      EX_Panel[4].add(EX_PL[54]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[55]) {
      EX_Panel[4].remove(EX_EN[55]);
      EX_Panel[4].add(EX_PL[55]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[56]) {
      EX_Panel[4].remove(EX_EN[56]);
      EX_Panel[4].add(EX_PL[56]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[57]) {
      EX_Panel[4].remove(EX_EN[57]);
      EX_Panel[4].add(EX_PL[57]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[58]) {
      EX_Panel[4].remove(EX_EN[58]);
      EX_Panel[4].add(EX_PL[58]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[59]) {
      EX_Panel[4].remove(EX_EN[59]);
      EX_Panel[4].add(EX_PL[59]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[60]) {
      EX_Panel[4].remove(EX_EN[60]);
      EX_Panel[4].add(EX_PL[60]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[61]) {
      EX_Panel[4].remove(EX_EN[61]);
      EX_Panel[4].add(EX_PL[61]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[62]) {
      EX_Panel[4].remove(EX_EN[62]);
      EX_Panel[4].add(EX_PL[62]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[63]) {
      EX_Panel[4].remove(EX_EN[63]);
      EX_Panel[4].add(EX_PL[63]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[64]) {
      EX_Panel[4].remove(EX_EN[64]);
      EX_Panel[4].add(EX_PL[64]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[65]) {
      EX_Panel[4].remove(EX_EN[65]);
      EX_Panel[4].add(EX_PL[65]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[66]) {
      EX_Panel[4].remove(EX_EN[66]);
      EX_Panel[4].add(EX_PL[66]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[67]) {
      EX_Panel[4].remove(EX_EN[67]);
      EX_Panel[4].add(EX_PL[67]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[68]) {
      EX_Panel[4].remove(EX_EN[68]);
      EX_Panel[4].add(EX_PL[68]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[69]) {
      EX_Panel[4].remove(EX_EN[69]);
      EX_Panel[4].add(EX_PL[69]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[70]) {
      EX_Panel[4].remove(EX_EN[70]);
      EX_Panel[4].add(EX_PL[70]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[71]) {
      EX_Panel[4].remove(EX_EN[71]);
      EX_Panel[4].add(EX_PL[71]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[72]) {
      EX_Panel[4].remove(EX_EN[72]);
      EX_Panel[4].add(EX_PL[72]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[73]) {
      EX_Panel[4].remove(EX_EN[73]);
      EX_Panel[4].add(EX_PL[73]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[74]) {
      EX_Panel[4].remove(EX_EN[74]);
      EX_Panel[4].add(EX_PL[74]);
      EX_Panel[4].revalidate();
      EX_Panel[4].repaint();
    }
    if (e.getSource() == EX_EN[75]) {
      EX_Panel[5].remove(EX_EN[75]);
      EX_Panel[5].add(EX_PL[75]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[76]) {
      EX_Panel[5].remove(EX_EN[76]);
      EX_Panel[5].add(EX_PL[76]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[77]) {
      EX_Panel[5].remove(EX_EN[77]);
      EX_Panel[5].add(EX_PL[77]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[78]) {
      EX_Panel[5].remove(EX_EN[78]);
      EX_Panel[5].add(EX_PL[78]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[79]) {
      EX_Panel[5].remove(EX_EN[79]);
      EX_Panel[5].add(EX_PL[79]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[80]) {
      EX_Panel[5].remove(EX_EN[80]);
      EX_Panel[5].add(EX_PL[80]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[81]) {
      EX_Panel[5].remove(EX_EN[81]);
      EX_Panel[5].add(EX_PL[81]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[82]) {
      EX_Panel[5].remove(EX_EN[82]);
      EX_Panel[5].add(EX_PL[82]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[83]) {
      EX_Panel[5].remove(EX_EN[83]);
      EX_Panel[5].add(EX_PL[83]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[84]) {
      EX_Panel[5].remove(EX_EN[84]);
      EX_Panel[5].add(EX_PL[84]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[85]) {
      EX_Panel[5].remove(EX_EN[85]);
      EX_Panel[5].add(EX_PL[85]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[86]) {
      EX_Panel[5].remove(EX_EN[86]);
      EX_Panel[5].add(EX_PL[86]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[87]) {
      EX_Panel[5].remove(EX_EN[87]);
      EX_Panel[5].add(EX_PL[87]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[88]) {
      EX_Panel[5].remove(EX_EN[88]);
      EX_Panel[5].add(EX_PL[88]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[89]) {
      EX_Panel[5].remove(EX_EN[89]);
      EX_Panel[5].add(EX_PL[89]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[90]) {
      EX_Panel[5].remove(EX_EN[90]);
      EX_Panel[5].add(EX_PL[90]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[91]) {
      EX_Panel[5].remove(EX_EN[91]);
      EX_Panel[5].add(EX_PL[91]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[92]) {
      EX_Panel[5].remove(EX_EN[92]);
      EX_Panel[5].add(EX_PL[92]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[93]) {
      EX_Panel[5].remove(EX_EN[93]);
      EX_Panel[5].add(EX_PL[93]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[94]) {
      EX_Panel[5].remove(EX_EN[94]);
      EX_Panel[5].add(EX_PL[94]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[95]) {
      EX_Panel[5].remove(EX_EN[95]);
      EX_Panel[5].add(EX_PL[95]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[96]) {
      EX_Panel[5].remove(EX_EN[96]);
      EX_Panel[5].add(EX_PL[96]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[97]) {
      EX_Panel[5].remove(EX_EN[97]);
      EX_Panel[5].add(EX_PL[97]);
      EX_Panel[5].revalidate();
      EX_Panel[5].repaint();
    }
    if (e.getSource() == EX_EN[98]) {
      EX_Panel[6].remove(EX_EN[98]);
      EX_Panel[6].add(EX_PL[98]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[99]) {
      EX_Panel[6].remove(EX_EN[99]);
      EX_Panel[6].add(EX_PL[99]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[100]) {
      EX_Panel[6].remove(EX_EN[100]);
      EX_Panel[6].add(EX_PL[100]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[101]) {
      EX_Panel[6].remove(EX_EN[101]);
      EX_Panel[6].add(EX_PL[101]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[102]) {
      EX_Panel[6].remove(EX_EN[102]);
      EX_Panel[6].add(EX_PL[102]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[103]) {
      EX_Panel[6].remove(EX_EN[103]);
      EX_Panel[6].add(EX_PL[103]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[104]) {
      EX_Panel[6].remove(EX_EN[104]);
      EX_Panel[6].add(EX_PL[104]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[105]) {
      EX_Panel[6].remove(EX_EN[105]);
      EX_Panel[6].add(EX_PL[105]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[106]) {
      EX_Panel[6].remove(EX_EN[106]);
      EX_Panel[6].add(EX_PL[106]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[107]) {
      EX_Panel[6].remove(EX_EN[107]);
      EX_Panel[6].add(EX_PL[107]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[108]) {
      EX_Panel[6].remove(EX_EN[108]);
      EX_Panel[6].add(EX_PL[108]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[109]) {
      EX_Panel[6].remove(EX_EN[109]);
      EX_Panel[6].add(EX_PL[109]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[110]) {
      EX_Panel[6].remove(EX_EN[110]);
      EX_Panel[6].add(EX_PL[110]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[111]) {
      EX_Panel[6].remove(EX_EN[111]);
      EX_Panel[6].add(EX_PL[111]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[112]) {
      EX_Panel[6].remove(EX_EN[112]);
      EX_Panel[6].add(EX_PL[112]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[113]) {
      EX_Panel[6].remove(EX_EN[113]);
      EX_Panel[6].add(EX_PL[113]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[114]) {
      EX_Panel[6].remove(EX_EN[114]);
      EX_Panel[6].add(EX_PL[114]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[115]) {
      EX_Panel[6].remove(EX_EN[115]);
      EX_Panel[6].add(EX_PL[115]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[116]) {
      EX_Panel[6].remove(EX_EN[116]);
      EX_Panel[6].add(EX_PL[116]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[117]) {
      EX_Panel[6].remove(EX_EN[117]);
      EX_Panel[6].add(EX_PL[117]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[118]) {
      EX_Panel[6].remove(EX_EN[118]);
      EX_Panel[6].add(EX_PL[118]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[119]) {
      EX_Panel[6].remove(EX_EN[119]);
      EX_Panel[6].add(EX_PL[119]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[120]) {
      EX_Panel[6].remove(EX_EN[120]);
      EX_Panel[6].add(EX_PL[120]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[121]) {
      EX_Panel[6].remove(EX_EN[121]);
      EX_Panel[6].add(EX_PL[121]);
      EX_Panel[6].revalidate();
      EX_Panel[6].repaint();
    }
    if (e.getSource() == EX_EN[122]) {
      EX_Panel[7].remove(EX_EN[122]);
      EX_Panel[7].add(EX_PL[122]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[123]) {
      EX_Panel[7].remove(EX_EN[123]);
      EX_Panel[7].add(EX_PL[123]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[124]) {
      EX_Panel[7].remove(EX_EN[124]);
      EX_Panel[7].add(EX_PL[124]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[125]) {
      EX_Panel[7].remove(EX_EN[125]);
      EX_Panel[7].add(EX_PL[125]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[126]) {
      EX_Panel[7].remove(EX_EN[126]);
      EX_Panel[7].add(EX_PL[126]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[127]) {
      EX_Panel[7].remove(EX_EN[127]);
      EX_Panel[7].add(EX_PL[127]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[128]) {
      EX_Panel[7].remove(EX_EN[128]);
      EX_Panel[7].add(EX_PL[128]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[129]) {
      EX_Panel[7].remove(EX_EN[129]);
      EX_Panel[7].add(EX_PL[129]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[130]) {
      EX_Panel[7].remove(EX_EN[130]);
      EX_Panel[7].add(EX_PL[130]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[131]) {
      EX_Panel[7].remove(EX_EN[131]);
      EX_Panel[7].add(EX_PL[131]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[132]) {
      EX_Panel[7].remove(EX_EN[132]);
      EX_Panel[7].add(EX_PL[132]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[133]) {
      EX_Panel[7].remove(EX_EN[133]);
      EX_Panel[7].add(EX_PL[133]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[134]) {
      EX_Panel[7].remove(EX_EN[134]);
      EX_Panel[7].add(EX_PL[134]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[135]) {
      EX_Panel[7].remove(EX_EN[135]);
      EX_Panel[7].add(EX_PL[135]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[136]) {
      EX_Panel[7].remove(EX_EN[136]);
      EX_Panel[7].add(EX_PL[136]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[137]) {
      EX_Panel[7].remove(EX_EN[137]);
      EX_Panel[7].add(EX_PL[137]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[138]) {
      EX_Panel[7].remove(EX_EN[138]);
      EX_Panel[7].add(EX_PL[138]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[139]) {
      EX_Panel[7].remove(EX_EN[139]);
      EX_Panel[7].add(EX_PL[139]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[140]) {
      EX_Panel[7].remove(EX_EN[140]);
      EX_Panel[7].add(EX_PL[140]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[141]) {
      EX_Panel[7].remove(EX_EN[141]);
      EX_Panel[7].add(EX_PL[141]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[142]) {
      EX_Panel[7].remove(EX_EN[142]);
      EX_Panel[7].add(EX_PL[142]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[143]) {
      EX_Panel[7].remove(EX_EN[143]);
      EX_Panel[7].add(EX_PL[143]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[144]) {
      EX_Panel[7].remove(EX_EN[144]);
      EX_Panel[7].add(EX_PL[144]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[145]) {
      EX_Panel[7].remove(EX_EN[145]);
      EX_Panel[7].add(EX_PL[145]);
      EX_Panel[7].revalidate();
      EX_Panel[7].repaint();
    }
    if (e.getSource() == EX_EN[146]) {
      EX_Panel[8].remove(EX_EN[146]);
      EX_Panel[8].add(EX_PL[146]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[147]) {
      EX_Panel[8].remove(EX_EN[147]);
      EX_Panel[8].add(EX_PL[147]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[148]) {
      EX_Panel[8].remove(EX_EN[148]);
      EX_Panel[8].add(EX_PL[148]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[149]) {
      EX_Panel[8].remove(EX_EN[149]);
      EX_Panel[8].add(EX_PL[149]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[150]) {
      EX_Panel[8].remove(EX_EN[150]);
      EX_Panel[8].add(EX_PL[150]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[151]) {
      EX_Panel[8].remove(EX_EN[151]);
      EX_Panel[8].add(EX_PL[151]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[152]) {
      EX_Panel[8].remove(EX_EN[152]);
      EX_Panel[8].add(EX_PL[152]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[153]) {
      EX_Panel[8].remove(EX_EN[153]);
      EX_Panel[8].add(EX_PL[153]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[154]) {
      EX_Panel[8].remove(EX_EN[154]);
      EX_Panel[8].add(EX_PL[154]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[155]) {
      EX_Panel[8].remove(EX_EN[155]);
      EX_Panel[8].add(EX_PL[155]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[156]) {
      EX_Panel[8].remove(EX_EN[156]);
      EX_Panel[8].add(EX_PL[156]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[157]) {
      EX_Panel[8].remove(EX_EN[157]);
      EX_Panel[8].add(EX_PL[157]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[158]) {
      EX_Panel[8].remove(EX_EN[158]);
      EX_Panel[8].add(EX_PL[158]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[159]) {
      EX_Panel[8].remove(EX_EN[159]);
      EX_Panel[8].add(EX_PL[159]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[160]) {
      EX_Panel[8].remove(EX_EN[160]);
      EX_Panel[8].add(EX_PL[160]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[161]) {
      EX_Panel[8].remove(EX_EN[161]);
      EX_Panel[8].add(EX_PL[161]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[162]) {
      EX_Panel[8].remove(EX_EN[162]);
      EX_Panel[8].add(EX_PL[162]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[163]) {
      EX_Panel[8].remove(EX_EN[163]);
      EX_Panel[8].add(EX_PL[163]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[164]) {
      EX_Panel[8].remove(EX_EN[164]);
      EX_Panel[8].add(EX_PL[164]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[165]) {
      EX_Panel[8].remove(EX_EN[165]);
      EX_Panel[8].add(EX_PL[165]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[166]) {
      EX_Panel[8].remove(EX_EN[166]);
      EX_Panel[8].add(EX_PL[166]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[167]) {
      EX_Panel[8].remove(EX_EN[167]);
      EX_Panel[8].add(EX_PL[167]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[168]) {
      EX_Panel[8].remove(EX_EN[168]);
      EX_Panel[8].add(EX_PL[168]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[169]) {
      EX_Panel[8].remove(EX_EN[169]);
      EX_Panel[8].add(EX_PL[169]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[170]) {
      EX_Panel[8].remove(EX_EN[170]);
      EX_Panel[8].add(EX_PL[170]);
      EX_Panel[8].revalidate();
      EX_Panel[8].repaint();
    }
    if (e.getSource() == EX_EN[171]) {
      EX_Panel[9].remove(EX_EN[171]);
      EX_Panel[9].add(EX_PL[171]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[172]) {
      EX_Panel[9].remove(EX_EN[172]);
      EX_Panel[9].add(EX_PL[172]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[173]) {
      EX_Panel[9].remove(EX_EN[173]);
      EX_Panel[9].add(EX_PL[173]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[174]) {
      EX_Panel[9].remove(EX_EN[174]);
      EX_Panel[9].add(EX_PL[174]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[175]) {
      EX_Panel[9].remove(EX_EN[175]);
      EX_Panel[9].add(EX_PL[175]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[176]) {
      EX_Panel[9].remove(EX_EN[176]);
      EX_Panel[9].add(EX_PL[176]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[177]) {
      EX_Panel[9].remove(EX_EN[177]);
      EX_Panel[9].add(EX_PL[177]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[178]) {
      EX_Panel[9].remove(EX_EN[178]);
      EX_Panel[9].add(EX_PL[178]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[179]) {
      EX_Panel[9].remove(EX_EN[179]);
      EX_Panel[9].add(EX_PL[179]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[180]) {
      EX_Panel[9].remove(EX_EN[180]);
      EX_Panel[9].add(EX_PL[180]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[181]) {
      EX_Panel[9].remove(EX_EN[181]);
      EX_Panel[9].add(EX_PL[181]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[182]) {
      EX_Panel[9].remove(EX_EN[182]);
      EX_Panel[9].add(EX_PL[182]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[183]) {
      EX_Panel[9].remove(EX_EN[183]);
      EX_Panel[9].add(EX_PL[183]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[184]) {
      EX_Panel[9].remove(EX_EN[184]);
      EX_Panel[9].add(EX_PL[184]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[185]) {
      EX_Panel[9].remove(EX_EN[185]);
      EX_Panel[9].add(EX_PL[185]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[186]) {
      EX_Panel[9].remove(EX_EN[186]);
      EX_Panel[9].add(EX_PL[186]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[187]) {
      EX_Panel[9].remove(EX_EN[187]);
      EX_Panel[9].add(EX_PL[187]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[188]) {
      EX_Panel[9].remove(EX_EN[188]);
      EX_Panel[9].add(EX_PL[188]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[189]) {
      EX_Panel[9].remove(EX_EN[189]);
      EX_Panel[9].add(EX_PL[189]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[190]) {
      EX_Panel[9].remove(EX_EN[190]);
      EX_Panel[9].add(EX_PL[190]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[191]) {
      EX_Panel[9].remove(EX_EN[191]);
      EX_Panel[9].add(EX_PL[191]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[192]) {
      EX_Panel[9].remove(EX_EN[192]);
      EX_Panel[9].add(EX_PL[192]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[193]) {
      EX_Panel[9].remove(EX_EN[193]);
      EX_Panel[9].add(EX_PL[193]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[194]) {
      EX_Panel[9].remove(EX_EN[194]);
      EX_Panel[9].add(EX_PL[194]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    if (e.getSource() == EX_EN[195]) {
      EX_Panel[9].remove(EX_EN[195]);
      EX_Panel[9].add(EX_PL[195]);
      EX_Panel[9].revalidate();
      EX_Panel[9].repaint();
    }
    //EG
    if (e.getSource() == EG_EN[0]) {
      EG_Panel.remove(EG_EN[0]);
      EG_Panel.add(EG_PL[0]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[1]) {
      EG_Panel.remove(EG_EN[1]);
      EG_Panel.add(EG_PL[1]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[2]) {
      EG_Panel.remove(EG_EN[2]);
      EG_Panel.add(EG_PL[2]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[3]) {
      EG_Panel.remove(EG_EN[3]);
      EG_Panel.add(EG_PL[3]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[4]) {
      EG_Panel.remove(EG_EN[4]);
      EG_Panel.add(EG_PL[4]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[5]) {
      EG_Panel.remove(EG_EN[5]);
      EG_Panel.add(EG_PL[5]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[6]) {
      EG_Panel.remove(EG_EN[6]);
      EG_Panel.add(EG_PL[6]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[7]) {
      EG_Panel.remove(EG_EN[7]);
      EG_Panel.add(EG_PL[7]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[8]) {
      EG_Panel.remove(EG_EN[8]);
      EG_Panel.add(EG_PL[8]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[9]) {
      EG_Panel.remove(EG_EN[9]);
      EG_Panel.add(EG_PL[9]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[10]) {
      EG_Panel.remove(EG_EN[10]);
      EG_Panel.add(EG_PL[10]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[11]) {
      EG_Panel.remove(EG_EN[11]);
      EG_Panel.add(EG_PL[11]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[12]) {
      EG_Panel.remove(EG_EN[12]);
      EG_Panel.add(EG_PL[12]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[13]) {
      EG_Panel.remove(EG_EN[13]);
      EG_Panel.add(EG_PL[13]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[14]) {
      EG_Panel.remove(EG_EN[14]);
      EG_Panel.add(EG_PL[14]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[30]) {
      EG_Panel.remove(EG_EN[30]);
      EG_Panel.add(EG_PL[30]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[31]) {
      EG_Panel.remove(EG_EN[31]);
      EG_Panel.add(EG_PL[31]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[32]) {
      EG_Panel.remove(EG_EN[32]);
      EG_Panel.add(EG_PL[32]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[33]) {
      EG_Panel.remove(EG_EN[33]);
      EG_Panel.add(EG_PL[33]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[34]) {
      EG_Panel.remove(EG_EN[34]);
      EG_Panel.add(EG_PL[34]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[35]) {
      EG_Panel.remove(EG_EN[35]);
      EG_Panel.add(EG_PL[35]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[36]) {
      EG_Panel.remove(EG_EN[36]);
      EG_Panel.add(EG_PL[36]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[37]) {
      EG_Panel.remove(EG_EN[37]);
      EG_Panel.add(EG_PL[37]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[38]) {
      EG_Panel.remove(EG_EN[38]);
      EG_Panel.add(EG_PL[38]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[39]) {
      EG_Panel.remove(EG_EN[39]);
      EG_Panel.add(EG_PL[39]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[50]) {
      EG_Panel.remove(EG_EN[50]);
      EG_Panel.add(EG_PL[50]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[51]) {
      EG_Panel.remove(EG_EN[51]);
      EG_Panel.add(EG_PL[51]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[52]) {
      EG_Panel.remove(EG_EN[52]);
      EG_Panel.add(EG_PL[52]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[53]) {
      EG_Panel.remove(EG_EN[53]);
      EG_Panel.add(EG_PL[53]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[54]) {
      EG_Panel.remove(EG_EN[54]);
      EG_Panel.add(EG_PL[54]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[55]) {
      EG_Panel.remove(EG_EN[55]);
      EG_Panel.add(EG_PL[55]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[56]) {
      EG_Panel.remove(EG_EN[56]);
      EG_Panel.add(EG_PL[56]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[57]) {
      EG_Panel.remove(EG_EN[57]);
      EG_Panel.add(EG_PL[57]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[58]) {
      EG_Panel.remove(EG_EN[58]);
      EG_Panel.add(EG_PL[58]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[59]) {
      EG_Panel.remove(EG_EN[59]);
      EG_Panel.add(EG_PL[59]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[60]) {
      EG_Panel.remove(EG_EN[60]);
      EG_Panel.add(EG_PL[60]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[61]) {
      EG_Panel.remove(EG_EN[61]);
      EG_Panel.add(EG_PL[61]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[62]) {
      EG_Panel.remove(EG_EN[62]);
      EG_Panel.add(EG_PL[62]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[63]) {
      EG_Panel.remove(EG_EN[63]);
      EG_Panel.add(EG_PL[63]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[64]) {
      EG_Panel.remove(EG_EN[64]);
      EG_Panel.add(EG_PL[64]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[65]) {
      EG_Panel.remove(EG_EN[65]);
      EG_Panel.add(EG_PL[65]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[66]) {
      EG_Panel.remove(EG_EN[66]);
      EG_Panel.add(EG_PL[66]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[67]) {
      EG_Panel.remove(EG_EN[67]);
      EG_Panel.add(EG_PL[67]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[68]) {
      EG_Panel.remove(EG_EN[68]);
      EG_Panel.add(EG_PL[68]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[69]) {
      EG_Panel.remove(EG_EN[69]);
      EG_Panel.add(EG_PL[69]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[70]) {
      EG_Panel.remove(EG_EN[70]);
      EG_Panel.add(EG_PL[70]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[71]) {
      EG_Panel.remove(EG_EN[71]);
      EG_Panel.add(EG_PL[71]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[72]) {
      EG_Panel.remove(EG_EN[72]);
      EG_Panel.add(EG_PL[72]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[73]) {
      EG_Panel.remove(EG_EN[73]);
      EG_Panel.add(EG_PL[73]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[74]) {
      EG_Panel.remove(EG_EN[74]);
      EG_Panel.add(EG_PL[74]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[75]) {
      EG_Panel.remove(EG_EN[75]);
      EG_Panel.add(EG_PL[75]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[76]) {
      EG_Panel.remove(EG_EN[76]);
      EG_Panel.add(EG_PL[76]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[77]) {
      EG_Panel.remove(EG_EN[77]);
      EG_Panel.add(EG_PL[77]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[78]) {
      EG_Panel.remove(EG_EN[78]);
      EG_Panel.add(EG_PL[78]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[79]) {
      EG_Panel.remove(EG_EN[79]);
      EG_Panel.add(EG_PL[79]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[80]) {
      EG_Panel.remove(EG_EN[80]);
      EG_Panel.add(EG_PL[80]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[81]) {
      EG_Panel.remove(EG_EN[81]);
      EG_Panel.add(EG_PL[81]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[82]) {
      EG_Panel.remove(EG_EN[82]);
      EG_Panel.add(EG_PL[82]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[83]) {
      EG_Panel.remove(EG_EN[83]);
      EG_Panel.add(EG_PL[83]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[84]) {
      EG_Panel.remove(EG_EN[84]);
      EG_Panel.add(EG_PL[84]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[85]) {
      EG_Panel.remove(EG_EN[85]);
      EG_Panel.add(EG_PL[85]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[86]) {
      EG_Panel.remove(EG_EN[86]);
      EG_Panel.add(EG_PL[86]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[87]) {
      EG_Panel.remove(EG_EN[87]);
      EG_Panel.add(EG_PL[87]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[88]) {
      EG_Panel.remove(EG_EN[88]);
      EG_Panel.add(EG_PL[88]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[89]) {
      EG_Panel.remove(EG_EN[89]);
      EG_Panel.add(EG_PL[89]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[90]) {
      EG_Panel.remove(EG_EN[90]);
      EG_Panel.add(EG_PL[90]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[91]) {
      EG_Panel.remove(EG_EN[91]);
      EG_Panel.add(EG_PL[91]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[92]) {
      EG_Panel.remove(EG_EN[92]);
      EG_Panel.add(EG_PL[92]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[93]) {
      EG_Panel.remove(EG_EN[93]);
      EG_Panel.add(EG_PL[93]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[94]) {
      EG_Panel.remove(EG_EN[94]);
      EG_Panel.add(EG_PL[94]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[95]) {
      EG_Panel.remove(EG_EN[95]);
      EG_Panel.add(EG_PL[95]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[96]) {
      EG_Panel.remove(EG_EN[96]);
      EG_Panel.add(EG_PL[96]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[97]) {
      EG_Panel.remove(EG_EN[97]);
      EG_Panel.add(EG_PL[97]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[98]) {
      EG_Panel.remove(EG_EN[98]);
      EG_Panel.add(EG_PL[98]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[99]) {
      EG_Panel.remove(EG_EN[99]);
      EG_Panel.add(EG_PL[99]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[100]) {
      EG_Panel.remove(EG_EN[100]);
      EG_Panel.add(EG_PL[100]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[101]) {
      EG_Panel.remove(EG_EN[101]);
      EG_Panel.add(EG_PL[101]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[102]) {
      EG_Panel.remove(EG_EN[102]);
      EG_Panel.add(EG_PL[102]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[103]) {
      EG_Panel.remove(EG_EN[103]);
      EG_Panel.add(EG_PL[103]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[104]) {
      EG_Panel.remove(EG_EN[104]);
      EG_Panel.add(EG_PL[104]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[105]) {
      EG_Panel.remove(EG_EN[105]);
      EG_Panel.add(EG_PL[105]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[106]) {
      EG_Panel.remove(EG_EN[106]);
      EG_Panel.add(EG_PL[106]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[107]) {
      EG_Panel.remove(EG_EN[107]);
      EG_Panel.add(EG_PL[107]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[108]) {
      EG_Panel.remove(EG_EN[108]);
      EG_Panel.add(EG_PL[108]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[109]) {
      EG_Panel.remove(EG_EN[109]);
      EG_Panel.add(EG_PL[109]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[110]) {
      EG_Panel.remove(EG_EN[110]);
      EG_Panel.add(EG_PL[110]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[111]) {
      EG_Panel.remove(EG_EN[111]);
      EG_Panel.add(EG_PL[111]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[112]) {
      EG_Panel.remove(EG_EN[112]);
      EG_Panel.add(EG_PL[112]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[113]) {
      EG_Panel.remove(EG_EN[113]);
      EG_Panel.add(EG_PL[113]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[114]) {
      EG_Panel.remove(EG_EN[114]);
      EG_Panel.add(EG_PL[114]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[115]) {
      EG_Panel.remove(EG_EN[115]);
      EG_Panel.add(EG_PL[115]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[116]) {
      EG_Panel.remove(EG_EN[116]);
      EG_Panel.add(EG_PL[116]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[117]) {
      EG_Panel.remove(EG_EN[117]);
      EG_Panel.add(EG_PL[117]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[118]) {
      EG_Panel.remove(EG_EN[118]);
      EG_Panel.add(EG_PL[118]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[119]) {
      EG_Panel.remove(EG_EN[119]);
      EG_Panel.add(EG_PL[119]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[120]) {
      EG_Panel.remove(EG_EN[120]);
      EG_Panel.add(EG_PL[120]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[121]) {
      EG_Panel.remove(EG_EN[121]);
      EG_Panel.add(EG_PL[121]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[122]) {
      EG_Panel.remove(EG_EN[122]);
      EG_Panel.add(EG_PL[122]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[123]) {
      EG_Panel.remove(EG_EN[123]);
      EG_Panel.add(EG_PL[123]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[124]) {
      EG_Panel.remove(EG_EN[124]);
      EG_Panel.add(EG_PL[124]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[125]) {
      EG_Panel.remove(EG_EN[125]);
      EG_Panel.add(EG_PL[125]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[126]) {
      EG_Panel.remove(EG_EN[126]);
      EG_Panel.add(EG_PL[126]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[127]) {
      EG_Panel.remove(EG_EN[127]);
      EG_Panel.add(EG_PL[127]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[128]) {
      EG_Panel.remove(EG_EN[128]);
      EG_Panel.add(EG_PL[128]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[129]) {
      EG_Panel.remove(EG_EN[129]);
      EG_Panel.add(EG_PL[129]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[130]) {
      EG_Panel.remove(EG_EN[130]);
      EG_Panel.add(EG_PL[130]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[131]) {
      EG_Panel.remove(EG_EN[131]);
      EG_Panel.add(EG_PL[131]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[132]) {
      EG_Panel.remove(EG_EN[132]);
      EG_Panel.add(EG_PL[132]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[133]) {
      EG_Panel.remove(EG_EN[133]);
      EG_Panel.add(EG_PL[133]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[134]) {
      EG_Panel.remove(EG_EN[134]);
      EG_Panel.add(EG_PL[134]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[135]) {
      EG_Panel.remove(EG_EN[135]);
      EG_Panel.add(EG_PL[135]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[136]) {
      EG_Panel.remove(EG_EN[136]);
      EG_Panel.add(EG_PL[136]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[137]) {
      EG_Panel.remove(EG_EN[137]);
      EG_Panel.add(EG_PL[137]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[138]) {
      EG_Panel.remove(EG_EN[138]);
      EG_Panel.add(EG_PL[138]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[139]) {
      EG_Panel.remove(EG_EN[139]);
      EG_Panel.add(EG_PL[139]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[140]) {
      EG_Panel.remove(EG_EN[140]);
      EG_Panel.add(EG_PL[140]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[141]) {
      EG_Panel.remove(EG_EN[141]);
      EG_Panel.add(EG_PL[141]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[142]) {
      EG_Panel.remove(EG_EN[142]);
      EG_Panel.add(EG_PL[142]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[143]) {
      EG_Panel.remove(EG_EN[143]);
      EG_Panel.add(EG_PL[143]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[144]) {
      EG_Panel.remove(EG_EN[144]);
      EG_Panel.add(EG_PL[144]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[145]) {
      EG_Panel.remove(EG_EN[145]);
      EG_Panel.add(EG_PL[145]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[146]) {
      EG_Panel.remove(EG_EN[146]);
      EG_Panel.add(EG_PL[146]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[147]) {
      EG_Panel.remove(EG_EN[147]);
      EG_Panel.add(EG_PL[147]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[148]) {
      EG_Panel.remove(EG_EN[148]);
      EG_Panel.add(EG_PL[148]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[149]) {
      EG_Panel.remove(EG_EN[149]);
      EG_Panel.add(EG_PL[149]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[150]) {
      EG_Panel.remove(EG_EN[150]);
      EG_Panel.add(EG_PL[150]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[151]) {
      EG_Panel.remove(EG_EN[151]);
      EG_Panel.add(EG_PL[151]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[152]) {
      EG_Panel.remove(EG_EN[152]);
      EG_Panel.add(EG_PL[152]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[153]) {
      EG_Panel.remove(EG_EN[153]);
      EG_Panel.add(EG_PL[153]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[154]) {
      EG_Panel.remove(EG_EN[154]);
      EG_Panel.add(EG_PL[154]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[155]) {
      EG_Panel.remove(EG_EN[155]);
      EG_Panel.add(EG_PL[155]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[156]) {
      EG_Panel.remove(EG_EN[156]);
      EG_Panel.add(EG_PL[156]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[157]) {
      EG_Panel.remove(EG_EN[157]);
      EG_Panel.add(EG_PL[157]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[158]) {
      EG_Panel.remove(EG_EN[158]);
      EG_Panel.add(EG_PL[158]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[159]) {
      EG_Panel.remove(EG_EN[159]);
      EG_Panel.add(EG_PL[159]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[160]) {
      EG_Panel.remove(EG_EN[160]);
      EG_Panel.add(EG_PL[160]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[161]) {
      EG_Panel.remove(EG_EN[161]);
      EG_Panel.add(EG_PL[161]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[162]) {
      EG_Panel.remove(EG_EN[162]);
      EG_Panel.add(EG_PL[162]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[163]) {
      EG_Panel.remove(EG_EN[163]);
      EG_Panel.add(EG_PL[163]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[164]) {
      EG_Panel.remove(EG_EN[164]);
      EG_Panel.add(EG_PL[164]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[165]) {
      EG_Panel.remove(EG_EN[165]);
      EG_Panel.add(EG_PL[165]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[166]) {
      EG_Panel.remove(EG_EN[166]);
      EG_Panel.add(EG_PL[166]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[167]) {
      EG_Panel.remove(EG_EN[167]);
      EG_Panel.add(EG_PL[167]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[168]) {
      EG_Panel.remove(EG_EN[168]);
      EG_Panel.add(EG_PL[168]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[169]) {
      EG_Panel.remove(EG_EN[169]);
      EG_Panel.add(EG_PL[169]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[170]) {
      EG_Panel.remove(EG_EN[170]);
      EG_Panel.add(EG_PL[170]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[171]) {
      EG_Panel.remove(EG_EN[171]);
      EG_Panel.add(EG_PL[171]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[172]) {
      EG_Panel.remove(EG_EN[172]);
      EG_Panel.add(EG_PL[172]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[173]) {
      EG_Panel.remove(EG_EN[173]);
      EG_Panel.add(EG_PL[173]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[174]) {
      EG_Panel.remove(EG_EN[174]);
      EG_Panel.add(EG_PL[174]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[175]) {
      EG_Panel.remove(EG_EN[175]);
      EG_Panel.add(EG_PL[175]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[176]) {
      EG_Panel.remove(EG_EN[176]);
      EG_Panel.add(EG_PL[176]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[177]) {
      EG_Panel.remove(EG_EN[177]);
      EG_Panel.add(EG_PL[177]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[178]) {
      EG_Panel.remove(EG_EN[178]);
      EG_Panel.add(EG_PL[178]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[179]) {
      EG_Panel.remove(EG_EN[179]);
      EG_Panel.add(EG_PL[179]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[180]) {
      EG_Panel.remove(EG_EN[180]);
      EG_Panel.add(EG_PL[180]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[181]) {
      EG_Panel.remove(EG_EN[181]);
      EG_Panel.add(EG_PL[181]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[182]) {
      EG_Panel.remove(EG_EN[182]);
      EG_Panel.add(EG_PL[182]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[183]) {
      EG_Panel.remove(EG_EN[183]);
      EG_Panel.add(EG_PL[183]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[184]) {
      EG_Panel.remove(EG_EN[184]);
      EG_Panel.add(EG_PL[184]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[185]) {
      EG_Panel.remove(EG_EN[185]);
      EG_Panel.add(EG_PL[185]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[186]) {
      EG_Panel.remove(EG_EN[186]);
      EG_Panel.add(EG_PL[186]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[187]) {
      EG_Panel.remove(EG_EN[187]);
      EG_Panel.add(EG_PL[187]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[188]) {
      EG_Panel.remove(EG_EN[188]);
      EG_Panel.add(EG_PL[188]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[189]) {
      EG_Panel.remove(EG_EN[189]);
      EG_Panel.add(EG_PL[189]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[190]) {
      EG_Panel.remove(EG_EN[190]);
      EG_Panel.add(EG_PL[190]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[191]) {
      EG_Panel.remove(EG_EN[191]);
      EG_Panel.add(EG_PL[191]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[192]) {
      EG_Panel.remove(EG_EN[192]);
      EG_Panel.add(EG_PL[192]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[193]) {
      EG_Panel.remove(EG_EN[193]);
      EG_Panel.add(EG_PL[193]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[194]) {
      EG_Panel.remove(EG_EN[194]);
      EG_Panel.add(EG_PL[194]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
    if (e.getSource() == EG_EN[195]) {
      EG_Panel.remove(EG_EN[195]);
      EG_Panel.add(EG_PL[195]);
      EG_Panel.revalidate();
      EG_Panel.repaint();
    }
  }
  public void mouseExited(MouseEvent e) {
    for (int i = 0; i < 15; i++) {
      if (e.getSource() == EX_PL[i]) {
        EX_Panel[0].setCursor(Cursor.getDefaultCursor());
      }
    }
    for (int i = 15; i < 30; i++) {
      if (e.getSource() == EX_PL[i]) {
        EX_Panel[1].setCursor(Cursor.getDefaultCursor());
      }
      if (e.getSource() == EX_PL[0]) {
        EX_Panel[0].remove(EX_PL[0]);
        EX_Panel[0].add(EX_EN[0]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[1]) {
        EX_Panel[0].remove(EX_PL[1]);
        EX_Panel[0].add(EX_EN[1]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[2]) {
        EX_Panel[0].remove(EX_PL[2]);
        EX_Panel[0].add(EX_EN[2]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[3]) {
        EX_Panel[0].remove(EX_PL[3]);
        EX_Panel[0].add(EX_EN[3]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[4]) {
        EX_Panel[0].remove(EX_PL[4]);
        EX_Panel[0].add(EX_EN[4]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[5]) {
        EX_Panel[0].remove(EX_PL[5]);
        EX_Panel[0].add(EX_EN[5]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[6]) {
        EX_Panel[0].remove(EX_PL[6]);
        EX_Panel[0].add(EX_EN[6]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[7]) {
        EX_Panel[0].remove(EX_PL[7]);
        EX_Panel[0].add(EX_EN[7]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[8]) {
        EX_Panel[0].remove(EX_PL[8]);
        EX_Panel[0].add(EX_EN[8]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[9]) {
        EX_Panel[0].remove(EX_PL[9]);
        EX_Panel[0].add(EX_EN[9]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[10]) {
        EX_Panel[0].remove(EX_PL[10]);
        EX_Panel[0].add(EX_EN[10]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[11]) {
        EX_Panel[0].remove(EX_PL[11]);
        EX_Panel[0].add(EX_EN[11]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[12]) {
        EX_Panel[0].remove(EX_PL[12]);
        EX_Panel[0].add(EX_EN[12]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[13]) {
        EX_Panel[0].remove(EX_PL[13]);
        EX_Panel[0].add(EX_EN[13]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[14]) {
        EX_Panel[0].remove(EX_PL[14]);
        EX_Panel[0].add(EX_EN[14]);
        EX_Panel[0].revalidate();
        EX_Panel[0].repaint();
      }
      if (e.getSource() == EX_PL[15]) {
        EX_Panel[1].remove(EX_PL[15]);
        EX_Panel[1].add(EX_EN[15]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[16]) {
        EX_Panel[1].remove(EX_PL[16]);
        EX_Panel[1].add(EX_EN[16]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[17]) {
        EX_Panel[1].remove(EX_PL[17]);
        EX_Panel[1].add(EX_EN[17]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[18]) {
        EX_Panel[1].remove(EX_PL[18]);
        EX_Panel[1].add(EX_EN[18]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[19]) {
        EX_Panel[1].remove(EX_PL[19]);
        EX_Panel[1].add(EX_EN[19]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[20]) {
        EX_Panel[1].remove(EX_PL[20]);
        EX_Panel[1].add(EX_EN[20]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[21]) {
        EX_Panel[1].remove(EX_PL[21]);
        EX_Panel[1].add(EX_EN[21]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[22]) {
        EX_Panel[1].remove(EX_PL[22]);
        EX_Panel[1].add(EX_EN[22]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[23]) {
        EX_Panel[1].remove(EX_PL[23]);
        EX_Panel[1].add(EX_EN[23]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[24]) {
        EX_Panel[1].remove(EX_PL[24]);
        EX_Panel[1].add(EX_EN[24]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[25]) {
        EX_Panel[1].remove(EX_PL[25]);
        EX_Panel[1].add(EX_EN[25]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[26]) {
        EX_Panel[1].remove(EX_PL[26]);
        EX_Panel[1].add(EX_EN[26]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[27]) {
        EX_Panel[1].remove(EX_PL[27]);
        EX_Panel[1].add(EX_EN[27]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[28]) {
        EX_Panel[1].remove(EX_PL[28]);
        EX_Panel[1].add(EX_EN[28]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[29]) {
        EX_Panel[1].remove(EX_PL[29]);
        EX_Panel[1].add(EX_EN[29]);
        EX_Panel[1].revalidate();
        EX_Panel[1].repaint();
      }
      if (e.getSource() == EX_PL[30]) {
        EX_Panel[2].remove(EX_PL[30]);
        EX_Panel[2].add(EX_EN[30]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[31]) {
        EX_Panel[2].remove(EX_PL[31]);
        EX_Panel[2].add(EX_EN[31]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[32]) {
        EX_Panel[2].remove(EX_PL[32]);
        EX_Panel[2].add(EX_EN[32]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[33]) {
        EX_Panel[2].remove(EX_PL[33]);
        EX_Panel[2].add(EX_EN[33]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[34]) {
        EX_Panel[2].remove(EX_PL[34]);
        EX_Panel[2].add(EX_EN[34]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[35]) {
        EX_Panel[2].remove(EX_PL[35]);
        EX_Panel[2].add(EX_EN[35]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[36]) {
        EX_Panel[2].remove(EX_PL[36]);
        EX_Panel[2].add(EX_EN[36]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[37]) {
        EX_Panel[2].remove(EX_PL[37]);
        EX_Panel[2].add(EX_EN[37]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[38]) {
        EX_Panel[2].remove(EX_PL[38]);
        EX_Panel[2].add(EX_EN[38]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[39]) {
        EX_Panel[2].remove(EX_PL[39]);
        EX_Panel[2].add(EX_EN[39]);
        EX_Panel[2].revalidate();
        EX_Panel[2].repaint();
      }
      if (e.getSource() == EX_PL[40]) {
        EX_Panel[3].remove(EX_PL[40]);
        EX_Panel[3].add(EX_EN[40]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[41]) {
        EX_Panel[3].remove(EX_PL[41]);
        EX_Panel[3].add(EX_EN[41]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[42]) {
        EX_Panel[3].remove(EX_PL[42]);
        EX_Panel[3].add(EX_EN[42]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[43]) {
        EX_Panel[3].remove(EX_PL[43]);
        EX_Panel[3].add(EX_EN[43]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[44]) {
        EX_Panel[3].remove(EX_PL[44]);
        EX_Panel[3].add(EX_EN[44]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[45]) {
        EX_Panel[3].remove(EX_PL[45]);
        EX_Panel[3].add(EX_EN[45]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[46]) {
        EX_Panel[3].remove(EX_PL[46]);
        EX_Panel[3].add(EX_EN[46]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[47]) {
        EX_Panel[3].remove(EX_PL[47]);
        EX_Panel[3].add(EX_EN[47]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[48]) {
        EX_Panel[3].remove(EX_PL[48]);
        EX_Panel[3].add(EX_EN[48]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[49]) {
        EX_Panel[3].remove(EX_PL[49]);
        EX_Panel[3].add(EX_EN[49]);
        EX_Panel[3].revalidate();
        EX_Panel[3].repaint();
      }
      if (e.getSource() == EX_PL[50]) {
        EX_Panel[4].remove(EX_PL[50]);
        EX_Panel[4].add(EX_EN[50]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[51]) {
        EX_Panel[4].remove(EX_PL[51]);
        EX_Panel[4].add(EX_EN[51]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[52]) {
        EX_Panel[4].remove(EX_PL[52]);
        EX_Panel[4].add(EX_EN[52]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[53]) {
        EX_Panel[4].remove(EX_PL[53]);
        EX_Panel[4].add(EX_EN[53]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[54]) {
        EX_Panel[4].remove(EX_PL[54]);
        EX_Panel[4].add(EX_EN[54]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[55]) {
        EX_Panel[4].remove(EX_PL[55]);
        EX_Panel[4].add(EX_EN[55]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[56]) {
        EX_Panel[4].remove(EX_PL[56]);
        EX_Panel[4].add(EX_EN[56]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[57]) {
        EX_Panel[4].remove(EX_PL[57]);
        EX_Panel[4].add(EX_EN[57]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[58]) {
        EX_Panel[4].remove(EX_PL[58]);
        EX_Panel[4].add(EX_EN[58]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[59]) {
        EX_Panel[4].remove(EX_PL[59]);
        EX_Panel[4].add(EX_EN[59]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[60]) {
        EX_Panel[4].remove(EX_PL[60]);
        EX_Panel[4].add(EX_EN[60]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[61]) {
        EX_Panel[4].remove(EX_PL[61]);
        EX_Panel[4].add(EX_EN[61]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[62]) {
        EX_Panel[4].remove(EX_PL[62]);
        EX_Panel[4].add(EX_EN[62]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[63]) {
        EX_Panel[4].remove(EX_PL[63]);
        EX_Panel[4].add(EX_EN[63]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[64]) {
        EX_Panel[4].remove(EX_PL[64]);
        EX_Panel[4].add(EX_EN[64]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[65]) {
        EX_Panel[4].remove(EX_PL[65]);
        EX_Panel[4].add(EX_EN[65]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[66]) {
        EX_Panel[4].remove(EX_PL[66]);
        EX_Panel[4].add(EX_EN[66]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[67]) {
        EX_Panel[4].remove(EX_PL[67]);
        EX_Panel[4].add(EX_EN[67]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[68]) {
        EX_Panel[4].remove(EX_PL[68]);
        EX_Panel[4].add(EX_EN[68]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[69]) {
        EX_Panel[4].remove(EX_PL[69]);
        EX_Panel[4].add(EX_EN[69]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[70]) {
        EX_Panel[4].remove(EX_PL[70]);
        EX_Panel[4].add(EX_EN[70]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[71]) {
        EX_Panel[4].remove(EX_PL[71]);
        EX_Panel[4].add(EX_EN[71]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[72]) {
        EX_Panel[4].remove(EX_PL[72]);
        EX_Panel[4].add(EX_EN[72]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[73]) {
        EX_Panel[4].remove(EX_PL[73]);
        EX_Panel[4].add(EX_EN[73]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[74]) {
        EX_Panel[4].remove(EX_PL[74]);
        EX_Panel[4].add(EX_EN[74]);
        EX_Panel[4].revalidate();
        EX_Panel[4].repaint();
      }
      if (e.getSource() == EX_PL[75]) {
        EX_Panel[5].remove(EX_PL[75]);
        EX_Panel[5].add(EX_EN[75]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[76]) {
        EX_Panel[5].remove(EX_PL[76]);
        EX_Panel[5].add(EX_EN[76]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[77]) {
        EX_Panel[5].remove(EX_PL[77]);
        EX_Panel[5].add(EX_EN[77]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[78]) {
        EX_Panel[5].remove(EX_PL[78]);
        EX_Panel[5].add(EX_EN[78]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[79]) {
        EX_Panel[5].remove(EX_PL[79]);
        EX_Panel[5].add(EX_EN[79]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[80]) {
        EX_Panel[5].remove(EX_PL[80]);
        EX_Panel[5].add(EX_EN[80]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[81]) {
        EX_Panel[5].remove(EX_PL[81]);
        EX_Panel[5].add(EX_EN[81]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[82]) {
        EX_Panel[5].remove(EX_PL[82]);
        EX_Panel[5].add(EX_EN[82]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[83]) {
        EX_Panel[5].remove(EX_PL[83]);
        EX_Panel[5].add(EX_EN[83]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[84]) {
        EX_Panel[5].remove(EX_PL[84]);
        EX_Panel[5].add(EX_EN[84]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[85]) {
        EX_Panel[5].remove(EX_PL[85]);
        EX_Panel[5].add(EX_EN[85]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[86]) {
        EX_Panel[5].remove(EX_PL[86]);
        EX_Panel[5].add(EX_EN[86]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[87]) {
        EX_Panel[5].remove(EX_PL[87]);
        EX_Panel[5].add(EX_EN[87]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[88]) {
        EX_Panel[5].remove(EX_PL[88]);
        EX_Panel[5].add(EX_EN[88]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[89]) {
        EX_Panel[5].remove(EX_PL[89]);
        EX_Panel[5].add(EX_EN[89]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[90]) {
        EX_Panel[5].remove(EX_PL[90]);
        EX_Panel[5].add(EX_EN[90]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[91]) {
        EX_Panel[5].remove(EX_PL[91]);
        EX_Panel[5].add(EX_EN[91]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[92]) {
        EX_Panel[5].remove(EX_PL[92]);
        EX_Panel[5].add(EX_EN[92]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[93]) {
        EX_Panel[5].remove(EX_PL[93]);
        EX_Panel[5].add(EX_EN[93]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[94]) {
        EX_Panel[5].remove(EX_PL[94]);
        EX_Panel[5].add(EX_EN[94]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[95]) {
        EX_Panel[5].remove(EX_PL[95]);
        EX_Panel[5].add(EX_EN[95]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[96]) {
        EX_Panel[5].remove(EX_PL[96]);
        EX_Panel[5].add(EX_EN[96]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[97]) {
        EX_Panel[5].remove(EX_PL[97]);
        EX_Panel[5].add(EX_EN[97]);
        EX_Panel[5].revalidate();
        EX_Panel[5].repaint();
      }
      if (e.getSource() == EX_PL[98]) {
        EX_Panel[6].remove(EX_PL[98]);
        EX_Panel[6].add(EX_EN[98]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[99]) {
        EX_Panel[6].remove(EX_PL[99]);
        EX_Panel[6].add(EX_EN[99]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[100]) {
        EX_Panel[6].remove(EX_PL[100]);
        EX_Panel[6].add(EX_EN[100]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[101]) {
        EX_Panel[6].remove(EX_PL[101]);
        EX_Panel[6].add(EX_EN[101]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[102]) {
        EX_Panel[6].remove(EX_PL[102]);
        EX_Panel[6].add(EX_EN[102]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[103]) {
        EX_Panel[6].remove(EX_PL[103]);
        EX_Panel[6].add(EX_EN[103]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[104]) {
        EX_Panel[6].remove(EX_PL[104]);
        EX_Panel[6].add(EX_EN[104]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[105]) {
        EX_Panel[6].remove(EX_PL[105]);
        EX_Panel[6].add(EX_EN[105]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[106]) {
        EX_Panel[6].remove(EX_PL[106]);
        EX_Panel[6].add(EX_EN[106]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[107]) {
        EX_Panel[6].remove(EX_PL[107]);
        EX_Panel[6].add(EX_EN[107]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[108]) {
        EX_Panel[6].remove(EX_PL[108]);
        EX_Panel[6].add(EX_EN[108]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[109]) {
        EX_Panel[6].remove(EX_PL[109]);
        EX_Panel[6].add(EX_EN[109]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[110]) {
        EX_Panel[6].remove(EX_PL[110]);
        EX_Panel[6].add(EX_EN[110]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[111]) {
        EX_Panel[6].remove(EX_PL[111]);
        EX_Panel[6].add(EX_EN[111]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[112]) {
        EX_Panel[6].remove(EX_PL[112]);
        EX_Panel[6].add(EX_EN[112]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[113]) {
        EX_Panel[6].remove(EX_PL[113]);
        EX_Panel[6].add(EX_EN[113]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[114]) {
        EX_Panel[6].remove(EX_PL[114]);
        EX_Panel[6].add(EX_EN[114]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[115]) {
        EX_Panel[6].remove(EX_PL[115]);
        EX_Panel[6].add(EX_EN[115]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[116]) {
        EX_Panel[6].remove(EX_PL[116]);
        EX_Panel[6].add(EX_EN[116]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[117]) {
        EX_Panel[6].remove(EX_PL[117]);
        EX_Panel[6].add(EX_EN[117]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[118]) {
        EX_Panel[6].remove(EX_PL[118]);
        EX_Panel[6].add(EX_EN[118]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[119]) {
        EX_Panel[6].remove(EX_PL[119]);
        EX_Panel[6].add(EX_EN[119]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[120]) {
        EX_Panel[6].remove(EX_PL[120]);
        EX_Panel[6].add(EX_EN[120]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[121]) {
        EX_Panel[6].remove(EX_PL[121]);
        EX_Panel[6].add(EX_EN[121]);
        EX_Panel[6].revalidate();
        EX_Panel[6].repaint();
      }
      if (e.getSource() == EX_PL[122]) {
        EX_Panel[7].remove(EX_PL[122]);
        EX_Panel[7].add(EX_EN[122]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[123]) {
        EX_Panel[7].remove(EX_PL[123]);
        EX_Panel[7].add(EX_EN[123]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[124]) {
        EX_Panel[7].remove(EX_PL[124]);
        EX_Panel[7].add(EX_EN[124]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[125]) {
        EX_Panel[7].remove(EX_PL[125]);
        EX_Panel[7].add(EX_EN[125]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[126]) {
        EX_Panel[7].remove(EX_PL[126]);
        EX_Panel[7].add(EX_EN[126]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[127]) {
        EX_Panel[7].remove(EX_PL[127]);
        EX_Panel[7].add(EX_EN[127]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[128]) {
        EX_Panel[7].remove(EX_PL[128]);
        EX_Panel[7].add(EX_EN[128]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[129]) {
        EX_Panel[7].remove(EX_PL[129]);
        EX_Panel[7].add(EX_EN[129]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[130]) {
        EX_Panel[7].remove(EX_PL[130]);
        EX_Panel[7].add(EX_EN[130]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[131]) {
        EX_Panel[7].remove(EX_PL[131]);
        EX_Panel[7].add(EX_EN[131]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[132]) {
        EX_Panel[7].remove(EX_PL[132]);
        EX_Panel[7].add(EX_EN[132]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[133]) {
        EX_Panel[7].remove(EX_PL[133]);
        EX_Panel[7].add(EX_EN[133]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[134]) {
        EX_Panel[7].remove(EX_PL[134]);
        EX_Panel[7].add(EX_EN[134]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[135]) {
        EX_Panel[7].remove(EX_PL[135]);
        EX_Panel[7].add(EX_EN[135]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[136]) {
        EX_Panel[7].remove(EX_PL[136]);
        EX_Panel[7].add(EX_EN[136]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[137]) {
        EX_Panel[7].remove(EX_PL[137]);
        EX_Panel[7].add(EX_EN[137]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[138]) {
        EX_Panel[7].remove(EX_PL[138]);
        EX_Panel[7].add(EX_EN[138]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[139]) {
        EX_Panel[7].remove(EX_PL[139]);
        EX_Panel[7].add(EX_EN[139]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[140]) {
        EX_Panel[7].remove(EX_PL[140]);
        EX_Panel[7].add(EX_EN[140]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[141]) {
        EX_Panel[7].remove(EX_PL[141]);
        EX_Panel[7].add(EX_EN[141]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[142]) {
        EX_Panel[7].remove(EX_PL[142]);
        EX_Panel[7].add(EX_EN[142]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[143]) {
        EX_Panel[7].remove(EX_PL[143]);
        EX_Panel[7].add(EX_EN[143]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[144]) {
        EX_Panel[7].remove(EX_PL[144]);
        EX_Panel[7].add(EX_EN[144]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[145]) {
        EX_Panel[7].remove(EX_PL[145]);
        EX_Panel[7].add(EX_EN[145]);
        EX_Panel[7].revalidate();
        EX_Panel[7].repaint();
      }
      if (e.getSource() == EX_PL[146]) {
        EX_Panel[8].remove(EX_PL[146]);
        EX_Panel[8].add(EX_EN[146]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[147]) {
        EX_Panel[8].remove(EX_PL[147]);
        EX_Panel[8].add(EX_EN[147]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[148]) {
        EX_Panel[8].remove(EX_PL[148]);
        EX_Panel[8].add(EX_EN[148]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[149]) {
        EX_Panel[8].remove(EX_PL[149]);
        EX_Panel[8].add(EX_EN[149]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[150]) {
        EX_Panel[8].remove(EX_PL[150]);
        EX_Panel[8].add(EX_EN[150]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[151]) {
        EX_Panel[8].remove(EX_PL[151]);
        EX_Panel[8].add(EX_EN[151]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[152]) {
        EX_Panel[8].remove(EX_PL[152]);
        EX_Panel[8].add(EX_EN[152]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[153]) {
        EX_Panel[8].remove(EX_PL[153]);
        EX_Panel[8].add(EX_EN[153]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[154]) {
        EX_Panel[8].remove(EX_PL[154]);
        EX_Panel[8].add(EX_EN[154]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[155]) {
        EX_Panel[8].remove(EX_PL[155]);
        EX_Panel[8].add(EX_EN[155]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[156]) {
        EX_Panel[8].remove(EX_PL[156]);
        EX_Panel[8].add(EX_EN[156]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[157]) {
        EX_Panel[8].remove(EX_PL[157]);
        EX_Panel[8].add(EX_EN[157]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[158]) {
        EX_Panel[8].remove(EX_PL[158]);
        EX_Panel[8].add(EX_EN[158]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[159]) {
        EX_Panel[8].remove(EX_PL[159]);
        EX_Panel[8].add(EX_EN[159]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[160]) {
        EX_Panel[8].remove(EX_PL[160]);
        EX_Panel[8].add(EX_EN[160]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[161]) {
        EX_Panel[8].remove(EX_PL[161]);
        EX_Panel[8].add(EX_EN[161]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[162]) {
        EX_Panel[8].remove(EX_PL[162]);
        EX_Panel[8].add(EX_EN[162]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[163]) {
        EX_Panel[8].remove(EX_PL[163]);
        EX_Panel[8].add(EX_EN[163]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[164]) {
        EX_Panel[8].remove(EX_PL[164]);
        EX_Panel[8].add(EX_EN[164]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[165]) {
        EX_Panel[8].remove(EX_PL[165]);
        EX_Panel[8].add(EX_EN[165]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[166]) {
        EX_Panel[8].remove(EX_PL[166]);
        EX_Panel[8].add(EX_EN[166]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[167]) {
        EX_Panel[8].remove(EX_PL[167]);
        EX_Panel[8].add(EX_EN[167]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[168]) {
        EX_Panel[8].remove(EX_PL[168]);
        EX_Panel[8].add(EX_EN[168]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[169]) {
        EX_Panel[8].remove(EX_PL[169]);
        EX_Panel[8].add(EX_EN[169]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[170]) {
        EX_Panel[8].remove(EX_PL[170]);
        EX_Panel[8].add(EX_EN[170]);
        EX_Panel[8].revalidate();
        EX_Panel[8].repaint();
      }
      if (e.getSource() == EX_PL[171]) {
        EX_Panel[9].remove(EX_PL[171]);
        EX_Panel[9].add(EX_EN[171]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[172]) {
        EX_Panel[9].remove(EX_PL[172]);
        EX_Panel[9].add(EX_EN[172]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[173]) {
        EX_Panel[9].remove(EX_PL[173]);
        EX_Panel[9].add(EX_EN[173]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[174]) {
        EX_Panel[9].remove(EX_PL[174]);
        EX_Panel[9].add(EX_EN[174]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[175]) {
        EX_Panel[9].remove(EX_PL[175]);
        EX_Panel[9].add(EX_EN[175]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[176]) {
        EX_Panel[9].remove(EX_PL[176]);
        EX_Panel[9].add(EX_EN[176]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[177]) {
        EX_Panel[9].remove(EX_PL[177]);
        EX_Panel[9].add(EX_EN[177]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[178]) {
        EX_Panel[9].remove(EX_PL[178]);
        EX_Panel[9].add(EX_EN[178]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[179]) {
        EX_Panel[9].remove(EX_PL[179]);
        EX_Panel[9].add(EX_EN[179]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[180]) {
        EX_Panel[9].remove(EX_PL[180]);
        EX_Panel[9].add(EX_EN[180]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[181]) {
        EX_Panel[9].remove(EX_PL[181]);
        EX_Panel[9].add(EX_EN[181]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[182]) {
        EX_Panel[9].remove(EX_PL[182]);
        EX_Panel[9].add(EX_EN[182]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[183]) {
        EX_Panel[9].remove(EX_PL[183]);
        EX_Panel[9].add(EX_EN[183]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[184]) {
        EX_Panel[9].remove(EX_PL[184]);
        EX_Panel[9].add(EX_EN[184]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[185]) {
        EX_Panel[9].remove(EX_PL[185]);
        EX_Panel[9].add(EX_EN[185]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[186]) {
        EX_Panel[9].remove(EX_PL[186]);
        EX_Panel[9].add(EX_EN[186]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[187]) {
        EX_Panel[9].remove(EX_PL[187]);
        EX_Panel[9].add(EX_EN[187]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[188]) {
        EX_Panel[9].remove(EX_PL[188]);
        EX_Panel[9].add(EX_EN[188]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[189]) {
        EX_Panel[9].remove(EX_PL[189]);
        EX_Panel[9].add(EX_EN[189]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[190]) {
        EX_Panel[9].remove(EX_PL[190]);
        EX_Panel[9].add(EX_EN[190]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[191]) {
        EX_Panel[9].remove(EX_PL[191]);
        EX_Panel[9].add(EX_EN[191]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[192]) {
        EX_Panel[9].remove(EX_PL[192]);
        EX_Panel[9].add(EX_EN[192]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[193]) {
        EX_Panel[9].remove(EX_PL[193]);
        EX_Panel[9].add(EX_EN[193]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[194]) {
        EX_Panel[9].remove(EX_PL[194]);
        EX_Panel[9].add(EX_EN[194]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      if (e.getSource() == EX_PL[195]) {
        EX_Panel[9].remove(EX_PL[195]);
        EX_Panel[9].add(EX_EN[195]);
        EX_Panel[9].revalidate();
        EX_Panel[9].repaint();
      }
      //EG_Panel
      if (e.getSource() == EG_PL[0]) {
        EG_Panel.remove(EG_PL[0]);
        EG_Panel.add(EG_EN[0]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[1]) {
        EG_Panel.remove(EG_PL[1]);
        EG_Panel.add(EG_EN[1]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[2]) {
        EG_Panel.remove(EG_PL[2]);
        EG_Panel.add(EG_EN[2]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[3]) {
        EG_Panel.remove(EG_PL[3]);
        EG_Panel.add(EG_EN[3]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[4]) {
        EG_Panel.remove(EG_PL[4]);
        EG_Panel.add(EG_EN[4]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[5]) {
        EG_Panel.remove(EG_PL[5]);
        EG_Panel.add(EG_EN[5]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[6]) {
        EG_Panel.remove(EG_PL[6]);
        EG_Panel.add(EG_EN[6]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[7]) {
        EG_Panel.remove(EG_PL[7]);
        EG_Panel.add(EG_EN[7]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[8]) {
        EG_Panel.remove(EG_PL[8]);
        EG_Panel.add(EG_EN[8]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[9]) {
        EG_Panel.remove(EG_PL[9]);
        EG_Panel.add(EG_EN[9]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[10]) {
        EG_Panel.remove(EG_PL[10]);
        EG_Panel.add(EG_EN[10]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[11]) {
        EG_Panel.remove(EG_PL[11]);
        EG_Panel.add(EG_EN[11]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[12]) {
        EG_Panel.remove(EG_PL[12]);
        EG_Panel.add(EG_EN[12]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[13]) {
        EG_Panel.remove(EG_PL[13]);
        EG_Panel.add(EG_EN[13]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[14]) {
        EG_Panel.remove(EG_PL[14]);
        EG_Panel.add(EG_EN[14]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[30]) {
        EG_Panel.remove(EG_PL[30]);
        EG_Panel.add(EG_EN[30]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[31]) {
        EG_Panel.remove(EG_PL[31]);
        EG_Panel.add(EG_EN[31]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[32]) {
        EG_Panel.remove(EG_PL[32]);
        EG_Panel.add(EG_EN[32]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[33]) {
        EG_Panel.remove(EG_PL[33]);
        EG_Panel.add(EG_EN[33]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[34]) {
        EG_Panel.remove(EG_PL[34]);
        EG_Panel.add(EG_EN[34]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[35]) {
        EG_Panel.remove(EG_PL[35]);
        EG_Panel.add(EG_EN[35]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[36]) {
        EG_Panel.remove(EG_PL[36]);
        EG_Panel.add(EG_EN[36]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[37]) {
        EG_Panel.remove(EG_PL[37]);
        EG_Panel.add(EG_EN[37]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[38]) {
        EG_Panel.remove(EG_PL[38]);
        EG_Panel.add(EG_EN[38]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[39]) {
        EG_Panel.remove(EG_PL[39]);
        EG_Panel.add(EG_EN[39]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[50]) {
        EG_Panel.remove(EG_PL[50]);
        EG_Panel.add(EG_EN[50]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[51]) {
        EG_Panel.remove(EG_PL[51]);
        EG_Panel.add(EG_EN[51]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[52]) {
        EG_Panel.remove(EG_PL[52]);
        EG_Panel.add(EG_EN[52]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[53]) {
        EG_Panel.remove(EG_PL[53]);
        EG_Panel.add(EG_EN[53]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[54]) {
        EG_Panel.remove(EG_PL[54]);
        EG_Panel.add(EG_EN[54]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[55]) {
        EG_Panel.remove(EG_PL[55]);
        EG_Panel.add(EG_EN[55]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[56]) {
        EG_Panel.remove(EG_PL[56]);
        EG_Panel.add(EG_EN[56]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[57]) {
        EG_Panel.remove(EG_PL[57]);
        EG_Panel.add(EG_EN[57]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[58]) {
        EG_Panel.remove(EG_PL[58]);
        EG_Panel.add(EG_EN[58]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[59]) {
        EG_Panel.remove(EG_PL[59]);
        EG_Panel.add(EG_EN[59]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[60]) {
        EG_Panel.remove(EG_PL[60]);
        EG_Panel.add(EG_EN[60]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[61]) {
        EG_Panel.remove(EG_PL[61]);
        EG_Panel.add(EG_EN[61]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[62]) {
        EG_Panel.remove(EG_PL[62]);
        EG_Panel.add(EG_EN[62]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[63]) {
        EG_Panel.remove(EG_PL[63]);
        EG_Panel.add(EG_EN[63]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[64]) {
        EG_Panel.remove(EG_PL[64]);
        EG_Panel.add(EG_EN[64]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[65]) {
        EG_Panel.remove(EG_PL[65]);
        EG_Panel.add(EG_EN[65]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[66]) {
        EG_Panel.remove(EG_PL[66]);
        EG_Panel.add(EG_EN[66]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[67]) {
        EG_Panel.remove(EG_PL[67]);
        EG_Panel.add(EG_EN[67]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[68]) {
        EG_Panel.remove(EG_PL[68]);
        EG_Panel.add(EG_EN[68]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[69]) {
        EG_Panel.remove(EG_PL[69]);
        EG_Panel.add(EG_EN[69]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[70]) {
        EG_Panel.remove(EG_PL[70]);
        EG_Panel.add(EG_EN[70]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[71]) {
        EG_Panel.remove(EG_PL[71]);
        EG_Panel.add(EG_EN[71]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[72]) {
        EG_Panel.remove(EG_PL[72]);
        EG_Panel.add(EG_EN[72]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[73]) {
        EG_Panel.remove(EG_PL[73]);
        EG_Panel.add(EG_EN[73]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[74]) {
        EG_Panel.remove(EG_PL[74]);
        EG_Panel.add(EG_EN[74]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[75]) {
        EG_Panel.remove(EG_PL[75]);
        EG_Panel.add(EG_EN[75]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[76]) {
        EG_Panel.remove(EG_PL[76]);
        EG_Panel.add(EG_EN[76]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[77]) {
        EG_Panel.remove(EG_PL[77]);
        EG_Panel.add(EG_EN[77]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[78]) {
        EG_Panel.remove(EG_PL[78]);
        EG_Panel.add(EG_EN[78]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[79]) {
        EG_Panel.remove(EG_PL[79]);
        EG_Panel.add(EG_EN[79]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[80]) {
        EG_Panel.remove(EG_PL[80]);
        EG_Panel.add(EG_EN[80]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[81]) {
        EG_Panel.remove(EG_PL[81]);
        EG_Panel.add(EG_EN[81]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[82]) {
        EG_Panel.remove(EG_PL[82]);
        EG_Panel.add(EG_EN[82]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[83]) {
        EG_Panel.remove(EG_PL[83]);
        EG_Panel.add(EG_EN[83]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[84]) {
        EG_Panel.remove(EG_PL[84]);
        EG_Panel.add(EG_EN[84]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[85]) {
        EG_Panel.remove(EG_PL[85]);
        EG_Panel.add(EG_EN[85]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[86]) {
        EG_Panel.remove(EG_PL[86]);
        EG_Panel.add(EG_EN[86]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[87]) {
        EG_Panel.remove(EG_PL[87]);
        EG_Panel.add(EG_EN[87]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[88]) {
        EG_Panel.remove(EG_PL[88]);
        EG_Panel.add(EG_EN[88]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[89]) {
        EG_Panel.remove(EG_PL[89]);
        EG_Panel.add(EG_EN[89]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[90]) {
        EG_Panel.remove(EG_PL[90]);
        EG_Panel.add(EG_EN[90]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[91]) {
        EG_Panel.remove(EG_PL[91]);
        EG_Panel.add(EG_EN[91]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[92]) {
        EG_Panel.remove(EG_PL[92]);
        EG_Panel.add(EG_EN[92]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[93]) {
        EG_Panel.remove(EG_PL[93]);
        EG_Panel.add(EG_EN[93]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[94]) {
        EG_Panel.remove(EG_PL[94]);
        EG_Panel.add(EG_EN[94]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[95]) {
        EG_Panel.remove(EG_PL[95]);
        EG_Panel.add(EG_EN[95]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[96]) {
        EG_Panel.remove(EG_PL[96]);
        EG_Panel.add(EG_EN[96]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[97]) {
        EG_Panel.remove(EG_PL[97]);
        EG_Panel.add(EG_EN[97]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[98]) {
        EG_Panel.remove(EG_PL[98]);
        EG_Panel.add(EG_EN[98]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[99]) {
        EG_Panel.remove(EG_PL[99]);
        EG_Panel.add(EG_EN[99]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[100]) {
        EG_Panel.remove(EG_PL[100]);
        EG_Panel.add(EG_EN[100]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[101]) {
        EG_Panel.remove(EG_PL[101]);
        EG_Panel.add(EG_EN[101]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[102]) {
        EG_Panel.remove(EG_PL[102]);
        EG_Panel.add(EG_EN[102]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[103]) {
        EG_Panel.remove(EG_PL[103]);
        EG_Panel.add(EG_EN[103]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[104]) {
        EG_Panel.remove(EG_PL[104]);
        EG_Panel.add(EG_EN[104]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[105]) {
        EG_Panel.remove(EG_PL[105]);
        EG_Panel.add(EG_EN[105]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[106]) {
        EG_Panel.remove(EG_PL[106]);
        EG_Panel.add(EG_EN[106]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[107]) {
        EG_Panel.remove(EG_PL[107]);
        EG_Panel.add(EG_EN[107]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[108]) {
        EG_Panel.remove(EG_PL[108]);
        EG_Panel.add(EG_EN[108]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[109]) {
        EG_Panel.remove(EG_PL[109]);
        EG_Panel.add(EG_EN[109]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[110]) {
        EG_Panel.remove(EG_PL[110]);
        EG_Panel.add(EG_EN[110]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[111]) {
        EG_Panel.remove(EG_PL[111]);
        EG_Panel.add(EG_EN[111]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[112]) {
        EG_Panel.remove(EG_PL[112]);
        EG_Panel.add(EG_EN[112]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[113]) {
        EG_Panel.remove(EG_PL[113]);
        EG_Panel.add(EG_EN[113]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[114]) {
        EG_Panel.remove(EG_PL[114]);
        EG_Panel.add(EG_EN[114]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[115]) {
        EG_Panel.remove(EG_PL[115]);
        EG_Panel.add(EG_EN[115]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[116]) {
        EG_Panel.remove(EG_PL[116]);
        EG_Panel.add(EG_EN[116]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[117]) {
        EG_Panel.remove(EG_PL[117]);
        EG_Panel.add(EG_EN[117]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[118]) {
        EG_Panel.remove(EG_PL[118]);
        EG_Panel.add(EG_EN[118]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[119]) {
        EG_Panel.remove(EG_PL[119]);
        EG_Panel.add(EG_EN[119]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[120]) {
        EG_Panel.remove(EG_PL[120]);
        EG_Panel.add(EG_EN[120]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[121]) {
        EG_Panel.remove(EG_PL[121]);
        EG_Panel.add(EG_EN[121]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[122]) {
        EG_Panel.remove(EG_PL[122]);
        EG_Panel.add(EG_EN[122]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[123]) {
        EG_Panel.remove(EG_PL[123]);
        EG_Panel.add(EG_EN[123]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[124]) {
        EG_Panel.remove(EG_PL[124]);
        EG_Panel.add(EG_EN[124]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[125]) {
        EG_Panel.remove(EG_PL[125]);
        EG_Panel.add(EG_EN[125]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[126]) {
        EG_Panel.remove(EG_PL[126]);
        EG_Panel.add(EG_EN[126]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[127]) {
        EG_Panel.remove(EG_PL[127]);
        EG_Panel.add(EG_EN[127]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[128]) {
        EG_Panel.remove(EG_PL[128]);
        EG_Panel.add(EG_EN[128]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[129]) {
        EG_Panel.remove(EG_PL[129]);
        EG_Panel.add(EG_EN[129]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[130]) {
        EG_Panel.remove(EG_PL[130]);
        EG_Panel.add(EG_EN[130]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[131]) {
        EG_Panel.remove(EG_PL[131]);
        EG_Panel.add(EG_EN[131]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[132]) {
        EG_Panel.remove(EG_PL[132]);
        EG_Panel.add(EG_EN[132]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[133]) {
        EG_Panel.remove(EG_PL[133]);
        EG_Panel.add(EG_EN[133]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[134]) {
        EG_Panel.remove(EG_PL[134]);
        EG_Panel.add(EG_EN[134]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[135]) {
        EG_Panel.remove(EG_PL[135]);
        EG_Panel.add(EG_EN[135]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[136]) {
        EG_Panel.remove(EG_PL[136]);
        EG_Panel.add(EG_EN[136]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[137]) {
        EG_Panel.remove(EG_PL[137]);
        EG_Panel.add(EG_EN[137]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[138]) {
        EG_Panel.remove(EG_PL[138]);
        EG_Panel.add(EG_EN[138]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[139]) {
        EG_Panel.remove(EG_PL[139]);
        EG_Panel.add(EG_EN[139]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[140]) {
        EG_Panel.remove(EG_PL[140]);
        EG_Panel.add(EG_EN[140]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[141]) {
        EG_Panel.remove(EG_PL[141]);
        EG_Panel.add(EG_EN[141]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[142]) {
        EG_Panel.remove(EG_PL[142]);
        EG_Panel.add(EG_EN[142]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[143]) {
        EG_Panel.remove(EG_PL[143]);
        EG_Panel.add(EG_EN[143]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[144]) {
        EG_Panel.remove(EG_PL[144]);
        EG_Panel.add(EG_EN[144]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[145]) {
        EG_Panel.remove(EG_PL[145]);
        EG_Panel.add(EG_EN[145]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[146]) {
        EG_Panel.remove(EG_PL[146]);
        EG_Panel.add(EG_EN[146]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[147]) {
        EG_Panel.remove(EG_PL[147]);
        EG_Panel.add(EG_EN[147]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[148]) {
        EG_Panel.remove(EG_PL[148]);
        EG_Panel.add(EG_EN[148]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[149]) {
        EG_Panel.remove(EG_PL[149]);
        EG_Panel.add(EG_EN[149]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[150]) {
        EG_Panel.remove(EG_PL[150]);
        EG_Panel.add(EG_EN[150]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[151]) {
        EG_Panel.remove(EG_PL[151]);
        EG_Panel.add(EG_EN[151]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[152]) {
        EG_Panel.remove(EG_PL[152]);
        EG_Panel.add(EG_EN[152]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[153]) {
        EG_Panel.remove(EG_PL[153]);
        EG_Panel.add(EG_EN[153]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[154]) {
        EG_Panel.remove(EG_PL[154]);
        EG_Panel.add(EG_EN[154]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[155]) {
        EG_Panel.remove(EG_PL[155]);
        EG_Panel.add(EG_EN[155]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[156]) {
        EG_Panel.remove(EG_PL[156]);
        EG_Panel.add(EG_EN[156]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[157]) {
        EG_Panel.remove(EG_PL[157]);
        EG_Panel.add(EG_EN[157]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[158]) {
        EG_Panel.remove(EG_PL[158]);
        EG_Panel.add(EG_EN[158]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[159]) {
        EG_Panel.remove(EG_PL[159]);
        EG_Panel.add(EG_EN[159]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[160]) {
        EG_Panel.remove(EG_PL[160]);
        EG_Panel.add(EG_EN[160]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[161]) {
        EG_Panel.remove(EG_PL[161]);
        EG_Panel.add(EG_EN[161]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[162]) {
        EG_Panel.remove(EG_PL[162]);
        EG_Panel.add(EG_EN[162]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[163]) {
        EG_Panel.remove(EG_PL[163]);
        EG_Panel.add(EG_EN[163]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[164]) {
        EG_Panel.remove(EG_PL[164]);
        EG_Panel.add(EG_EN[164]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[165]) {
        EG_Panel.remove(EG_PL[165]);
        EG_Panel.add(EG_EN[165]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[166]) {
        EG_Panel.remove(EG_PL[166]);
        EG_Panel.add(EG_EN[166]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[167]) {
        EG_Panel.remove(EG_PL[167]);
        EG_Panel.add(EG_EN[167]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[168]) {
        EG_Panel.remove(EG_PL[168]);
        EG_Panel.add(EG_EN[168]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[169]) {
        EG_Panel.remove(EG_PL[169]);
        EG_Panel.add(EG_EN[169]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[170]) {
        EG_Panel.remove(EG_PL[170]);
        EG_Panel.add(EG_EN[170]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[171]) {
        EG_Panel.remove(EG_PL[171]);
        EG_Panel.add(EG_EN[171]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[172]) {
        EG_Panel.remove(EG_PL[172]);
        EG_Panel.add(EG_EN[172]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[173]) {
        EG_Panel.remove(EG_PL[173]);
        EG_Panel.add(EG_EN[173]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[174]) {
        EG_Panel.remove(EG_PL[174]);
        EG_Panel.add(EG_EN[174]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[175]) {
        EG_Panel.remove(EG_PL[175]);
        EG_Panel.add(EG_EN[175]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[176]) {
        EG_Panel.remove(EG_PL[176]);
        EG_Panel.add(EG_EN[176]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[177]) {
        EG_Panel.remove(EG_PL[177]);
        EG_Panel.add(EG_EN[177]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[178]) {
        EG_Panel.remove(EG_PL[178]);
        EG_Panel.add(EG_EN[178]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[179]) {
        EG_Panel.remove(EG_PL[179]);
        EG_Panel.add(EG_EN[179]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[180]) {
        EG_Panel.remove(EG_PL[180]);
        EG_Panel.add(EG_EN[180]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[181]) {
        EG_Panel.remove(EG_PL[181]);
        EG_Panel.add(EG_EN[181]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[182]) {
        EG_Panel.remove(EG_PL[182]);
        EG_Panel.add(EG_EN[182]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[183]) {
        EG_Panel.remove(EG_PL[183]);
        EG_Panel.add(EG_EN[183]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[184]) {
        EG_Panel.remove(EG_PL[184]);
        EG_Panel.add(EG_EN[184]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[185]) {
        EG_Panel.remove(EG_PL[185]);
        EG_Panel.add(EG_EN[185]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[186]) {
        EG_Panel.remove(EG_PL[186]);
        EG_Panel.add(EG_EN[186]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[187]) {
        EG_Panel.remove(EG_PL[187]);
        EG_Panel.add(EG_EN[187]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[188]) {
        EG_Panel.remove(EG_PL[188]);
        EG_Panel.add(EG_EN[188]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[189]) {
        EG_Panel.remove(EG_PL[189]);
        EG_Panel.add(EG_EN[189]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[190]) {
        EG_Panel.remove(EG_PL[190]);
        EG_Panel.add(EG_EN[190]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[191]) {
        EG_Panel.remove(EG_PL[191]);
        EG_Panel.add(EG_EN[191]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[192]) {
        EG_Panel.remove(EG_PL[192]);
        EG_Panel.add(EG_EN[192]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[193]) {
        EG_Panel.remove(EG_PL[193]);
        EG_Panel.add(EG_EN[193]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[194]) {
        EG_Panel.remove(EG_PL[194]);
        EG_Panel.add(EG_EN[194]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
      if (e.getSource() == EG_PL[195]) {
        EG_Panel.remove(EG_PL[195]);
        EG_Panel.add(EG_EN[195]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
  }
  public void mousePressed(MouseEvent e) {
    for (int i = 0; i < 15; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[0].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 30; i < 40; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[2].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 50; i < 75; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[4].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 75; i < 98; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[5].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 98; i < 122; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[6].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 122; i < 146; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[7].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 146; i < 171; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[8].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
    for (int i = 171; i < 196; i++) {
      if (e.getSource() == EX_PL[i] && topicMI[9].isSelected()) {
        EG_Panel.add(EG_EN[i]);
        EG_Panel.revalidate();
        EG_Panel.repaint();
      }
    }
  }
  public void EX_InFra_Norm_Parameters() {
    EX_EN[0].setBounds(0, 50, 220, 50);
    EX_EN[1].setBounds(0, 100, 220, 50);
    EX_EN[2].setBounds(0, 150, 220, 50);
    EX_EN[3].setBounds(0, 200, 220, 50);
    EX_EN[4].setBounds(0, 250, 220, 50);
    EX_EN[5].setBounds(0, 300, 220, 50);
    EX_EN[6].setBounds(0, 350, 220, 50);
    EX_EN[7].setBounds(0, 400, 220, 50);
    EX_EN[8].setBounds(0, 450, 220, 50);
    EX_EN[9].setBounds(0, 500, 220, 50);
    EX_EN[10].setBounds(220, 50, 220, 50);
    EX_EN[11].setBounds(220, 100, 220, 50);
    EX_EN[12].setBounds(220, 150, 220, 50);
    EX_EN[13].setBounds(220, 200, 220, 50);
    EX_EN[14].setBounds(220, 250, 220, 50);
    EX_EN[15].setBounds(0, 50, 220, 50);
    EX_EN[16].setBounds(0, 100, 220, 50);
    EX_EN[17].setBounds(0, 150, 220, 50);
    EX_EN[18].setBounds(0, 200, 220, 50);
    EX_EN[19].setBounds(0, 250, 220, 50);
    EX_EN[20].setBounds(0, 300, 220, 50);
    EX_EN[21].setBounds(0, 350, 220, 50);
    EX_EN[22].setBounds(0, 400, 220, 50);
    EX_EN[23].setBounds(0, 450, 220, 50);
    EX_EN[24].setBounds(0, 500, 220, 50);
    EX_EN[25].setBounds(220, 50, 220, 50);
    EX_EN[26].setBounds(220, 100, 220, 50);
    EX_EN[27].setBounds(220, 150, 220, 50);
    EX_EN[28].setBounds(220, 200, 220, 50);
    EX_EN[29].setBounds(220, 250, 220, 50);
    EX_EN[30].setBounds(0, 50, 300, 50);
    EX_EN[31].setBounds(0, 100, 300, 50);
    EX_EN[32].setBounds(0, 150, 300, 50);
    EX_EN[33].setBounds(0, 200, 300, 50);
    EX_EN[34].setBounds(0, 250, 300, 50);
    EX_EN[35].setBounds(0, 300, 300, 50);
    EX_EN[36].setBounds(0, 350, 300, 50);
    EX_EN[37].setBounds(0, 400, 300, 50);
    EX_EN[38].setBounds(0, 450, 300, 50);
    EX_EN[39].setBounds(0, 500, 300, 50);
    EX_EN[40].setBounds(0, 50, 400, 50);
    EX_EN[41].setBounds(0, 100, 400, 50);
    EX_EN[42].setBounds(0, 150, 400, 50);
    EX_EN[43].setBounds(0, 200, 400, 50);
    EX_EN[44].setBounds(0, 250, 400, 50);
    EX_EN[45].setBounds(0, 300, 400, 50);
    EX_EN[46].setBounds(0, 350, 400, 50);
    EX_EN[47].setBounds(0, 400, 400, 50);
    EX_EN[48].setBounds(0, 450, 400, 50);
    EX_EN[49].setBounds(0, 500, 400, 50);
    EX_EN[50].setBounds(0, 50, 150, 50);
    EX_EN[51].setBounds(0, 100, 150, 50);
    EX_EN[52].setBounds(0, 150, 150, 50);
    EX_EN[53].setBounds(0, 200, 150, 50);
    EX_EN[54].setBounds(0, 250, 150, 50);
    EX_EN[55].setBounds(0, 300, 150, 50);
    EX_EN[56].setBounds(0, 350, 150, 50);
    EX_EN[57].setBounds(0, 400, 150, 50);
    EX_EN[58].setBounds(0, 450, 150, 50);
    EX_EN[59].setBounds(0, 500, 150, 50);
    EX_EN[60].setBounds(150, 50, 150, 50);
    EX_EN[61].setBounds(150, 100, 150, 50);
    EX_EN[62].setBounds(150, 150, 150, 50);
    EX_EN[63].setBounds(150, 200, 150, 50);
    EX_EN[64].setBounds(150, 250, 150, 50);
    EX_EN[65].setBounds(150, 300, 150, 50);
    EX_EN[66].setBounds(150, 350, 150, 50);
    EX_EN[67].setBounds(150, 400, 150, 50);
    EX_EN[68].setBounds(150, 450, 150, 50);
    EX_EN[69].setBounds(150, 500, 150, 50);
    EX_EN[70].setBounds(300, 50, 150, 50);
    EX_EN[71].setBounds(300, 100, 150, 50);
    EX_EN[72].setBounds(300, 150, 150, 50);
    EX_EN[73].setBounds(300, 200, 150, 50);
    EX_EN[74].setBounds(300, 250, 150, 50);
    EX_EN[75].setBounds(0, 50, 150, 50);
    EX_EN[76].setBounds(0, 100, 150, 50);
    EX_EN[77].setBounds(0, 150, 150, 50);
    EX_EN[78].setBounds(0, 200, 150, 50);
    EX_EN[79].setBounds(0, 250, 150, 50);
    EX_EN[80].setBounds(0, 300, 150, 50);
    EX_EN[81].setBounds(0, 350, 150, 50);
    EX_EN[82].setBounds(0, 400, 150, 50);
    EX_EN[83].setBounds(0, 450, 150, 50);
    EX_EN[84].setBounds(0, 500, 150, 50);
    EX_EN[85].setBounds(150, 50, 150, 50);
    EX_EN[86].setBounds(150, 100, 150, 50);
    EX_EN[87].setBounds(150, 150, 150, 50);
    EX_EN[88].setBounds(150, 200, 150, 50);
    EX_EN[89].setBounds(150, 250, 150, 50);
    EX_EN[90].setBounds(150, 300, 150, 50);
    EX_EN[91].setBounds(150, 350, 150, 50);
    EX_EN[92].setBounds(150, 400, 150, 50);
    EX_EN[93].setBounds(150, 450, 150, 50);
    EX_EN[94].setBounds(150, 500, 150, 50);
    EX_EN[95].setBounds(300, 50, 150, 50);
    EX_EN[96].setBounds(300, 100, 150, 50);
    EX_EN[97].setBounds(300, 150, 150, 50);
    EX_EN[98].setBounds(0, 50, 150, 50);
    EX_EN[99].setBounds(0, 100, 150, 50);
    EX_EN[100].setBounds(0, 150, 150, 50);
    EX_EN[101].setBounds(0, 200, 150, 50);
    EX_EN[102].setBounds(0, 250, 150, 50);
    EX_EN[103].setBounds(0, 300, 150, 50);
    EX_EN[104].setBounds(0, 350, 150, 50);
    EX_EN[105].setBounds(0, 400, 150, 50);
    EX_EN[106].setBounds(0, 450, 150, 50);
    EX_EN[107].setBounds(0, 500, 150, 50);
    EX_EN[108].setBounds(150, 50, 150, 50);
    EX_EN[109].setBounds(150, 100, 150, 50);
    EX_EN[110].setBounds(150, 150, 150, 50);
    EX_EN[111].setBounds(150, 200, 150, 50);
    EX_EN[112].setBounds(150, 250, 150, 50);
    EX_EN[113].setBounds(150, 300, 150, 50);
    EX_EN[114].setBounds(150, 350, 150, 50);
    EX_EN[115].setBounds(150, 400, 150, 50);
    EX_EN[116].setBounds(150, 450, 150, 50);
    EX_EN[117].setBounds(150, 500, 150, 50);
    EX_EN[118].setBounds(300, 50, 150, 50);
    EX_EN[119].setBounds(300, 100, 150, 50);
    EX_EN[120].setBounds(300, 150, 150, 50);
    EX_EN[121].setBounds(300, 200, 150, 50);
    EX_EN[122].setBounds(0, 50, 150, 50);
    EX_EN[123].setBounds(0, 100, 150, 50);
    EX_EN[124].setBounds(0, 150, 150, 50);
    EX_EN[125].setBounds(0, 200, 150, 50);
    EX_EN[126].setBounds(0, 250, 150, 50);
    EX_EN[127].setBounds(0, 300, 150, 50);
    EX_EN[128].setBounds(0, 350, 150, 50);
    EX_EN[129].setBounds(0, 400, 150, 50);
    EX_EN[130].setBounds(0, 450, 150, 50);
    EX_EN[131].setBounds(0, 500, 150, 50);
    EX_EN[132].setBounds(150, 50, 150, 50);
    EX_EN[133].setBounds(150, 100, 150, 50);
    EX_EN[134].setBounds(150, 150, 150, 50);
    EX_EN[135].setBounds(150, 200, 150, 50);
    EX_EN[136].setBounds(150, 250, 150, 50);
    EX_EN[137].setBounds(150, 300, 150, 50);
    EX_EN[138].setBounds(150, 350, 150, 50);
    EX_EN[139].setBounds(150, 400, 150, 50);
    EX_EN[140].setBounds(150, 450, 150, 50);
    EX_EN[141].setBounds(150, 500, 150, 50);
    EX_EN[142].setBounds(300, 50, 150, 50);
    EX_EN[143].setBounds(300, 100, 150, 50);
    EX_EN[144].setBounds(300, 150, 150, 50);
    EX_EN[145].setBounds(300, 200, 150, 50);
    EX_EN[146].setBounds(0, 50, 150, 50);
    EX_EN[147].setBounds(0, 100, 150, 50);
    EX_EN[148].setBounds(0, 150, 150, 50);
    EX_EN[149].setBounds(0, 200, 150, 50);
    EX_EN[150].setBounds(0, 250, 150, 50);
    EX_EN[151].setBounds(0, 300, 150, 50);
    EX_EN[152].setBounds(0, 350, 150, 50);
    EX_EN[153].setBounds(0, 400, 150, 50);
    EX_EN[154].setBounds(0, 450, 150, 50);
    EX_EN[155].setBounds(0, 500, 150, 50);
    EX_EN[156].setBounds(150, 50, 150, 50);
    EX_EN[157].setBounds(150, 100, 150, 50);
    EX_EN[158].setBounds(150, 150, 150, 50);
    EX_EN[159].setBounds(150, 200, 150, 50);
    EX_EN[160].setBounds(150, 250, 150, 50);
    EX_EN[161].setBounds(150, 300, 150, 50);
    EX_EN[162].setBounds(150, 350, 150, 50);
    EX_EN[163].setBounds(150, 400, 150, 50);
    EX_EN[164].setBounds(150, 450, 150, 50);
    EX_EN[165].setBounds(150, 500, 150, 50);
    EX_EN[166].setBounds(300, 50, 150, 50);
    EX_EN[167].setBounds(300, 100, 150, 50);
    EX_EN[168].setBounds(300, 150, 150, 50);
    EX_EN[169].setBounds(300, 200, 150, 50);
    EX_EN[170].setBounds(300, 250, 150, 50);
    EX_EN[171].setBounds(0, 50, 150, 50);
    EX_EN[172].setBounds(0, 100, 150, 50);
    EX_EN[173].setBounds(0, 150, 150, 50);
    EX_EN[174].setBounds(0, 200, 150, 50);
    EX_EN[175].setBounds(0, 250, 150, 50);
    EX_EN[176].setBounds(0, 300, 150, 50);
    EX_EN[177].setBounds(0, 350, 150, 50);
    EX_EN[178].setBounds(0, 400, 150, 50);
    EX_EN[179].setBounds(0, 450, 150, 50);
    EX_EN[180].setBounds(0, 500, 150, 50);
    EX_EN[181].setBounds(150, 50, 150, 50);
    EX_EN[182].setBounds(150, 100, 150, 50);
    EX_EN[183].setBounds(150, 150, 150, 50);
    EX_EN[184].setBounds(150, 200, 150, 50);
    EX_EN[185].setBounds(150, 250, 150, 50);
    EX_EN[186].setBounds(150, 300, 150, 50);
    EX_EN[187].setBounds(150, 350, 150, 50);
    EX_EN[188].setBounds(150, 400, 150, 50);
    EX_EN[189].setBounds(150, 450, 150, 50);
    EX_EN[190].setBounds(150, 500, 150, 50);
    EX_EN[191].setBounds(300, 50, 150, 50);
    EX_EN[192].setBounds(300, 100, 150, 50);
    EX_EN[193].setBounds(300, 150, 150, 50);
    EX_EN[194].setBounds(300, 200, 150, 50);
    EX_EN[195].setBounds(300, 250, 150, 50);
    EX_PL[0].setBounds(0, 50, 220, 50);
    EX_PL[1].setBounds(0, 100, 220, 50);
    EX_PL[2].setBounds(0, 150, 220, 50);
    EX_PL[3].setBounds(0, 200, 220, 50);
    EX_PL[4].setBounds(0, 250, 220, 50);
    EX_PL[5].setBounds(0, 300, 220, 50);
    EX_PL[6].setBounds(0, 350, 220, 50);
    EX_PL[7].setBounds(0, 400, 220, 50);
    EX_PL[8].setBounds(0, 450, 220, 50);
    EX_PL[9].setBounds(0, 500, 220, 50);
    EX_PL[10].setBounds(220, 50, 220, 50);
    EX_PL[11].setBounds(220, 100, 220, 50);
    EX_PL[12].setBounds(220, 150, 220, 50);
    EX_PL[13].setBounds(220, 200, 220, 50);
    EX_PL[14].setBounds(220, 250, 220, 50);
    EX_PL[15].setBounds(0, 50, 220, 50);
    EX_PL[16].setBounds(0, 100, 220, 50);
    EX_PL[17].setBounds(0, 150, 220, 50);
    EX_PL[18].setBounds(0, 200, 220, 50);
    EX_PL[19].setBounds(0, 250, 220, 50);
    EX_PL[20].setBounds(0, 300, 220, 50);
    EX_PL[21].setBounds(0, 350, 220, 50);
    EX_PL[22].setBounds(0, 400, 220, 50);
    EX_PL[23].setBounds(0, 450, 220, 50);
    EX_PL[24].setBounds(0, 500, 220, 50);
    EX_PL[25].setBounds(220, 50, 220, 50);
    EX_PL[26].setBounds(220, 100, 220, 50);
    EX_PL[27].setBounds(220, 150, 220, 50);
    EX_PL[28].setBounds(220, 200, 220, 50);
    EX_PL[29].setBounds(220, 250, 220, 50);
    EX_PL[30].setBounds(0, 50, 300, 50);
    EX_PL[31].setBounds(0, 100, 300, 50);
    EX_PL[32].setBounds(0, 150, 300, 50);
    EX_PL[33].setBounds(0, 200, 300, 50);
    EX_PL[34].setBounds(0, 250, 300, 50);
    EX_PL[35].setBounds(0, 300, 300, 50);
    EX_PL[36].setBounds(0, 350, 300, 50);
    EX_PL[37].setBounds(0, 400, 300, 50);
    EX_PL[38].setBounds(0, 450, 300, 50);
    EX_PL[39].setBounds(0, 500, 300, 50);
    EX_PL[40].setBounds(0, 50, 400, 50);
    EX_PL[41].setBounds(0, 100, 400, 50);
    EX_PL[42].setBounds(0, 150, 400, 50);
    EX_PL[43].setBounds(0, 200, 400, 50);
    EX_PL[44].setBounds(0, 250, 400, 50);
    EX_PL[45].setBounds(0, 300, 400, 50);
    EX_PL[46].setBounds(0, 350, 400, 50);
    EX_PL[47].setBounds(0, 400, 400, 50);
    EX_PL[48].setBounds(0, 450, 400, 50);
    EX_PL[49].setBounds(0, 500, 400, 50);
    EX_PL[50].setBounds(0, 50, 150, 50);
    EX_PL[51].setBounds(0, 100, 150, 50);
    EX_PL[52].setBounds(0, 150, 150, 50);
    EX_PL[53].setBounds(0, 200, 150, 50);
    EX_PL[54].setBounds(0, 250, 150, 50);
    EX_PL[55].setBounds(0, 300, 150, 50);
    EX_PL[56].setBounds(0, 350, 150, 50);
    EX_PL[57].setBounds(0, 400, 150, 50);
    EX_PL[58].setBounds(0, 450, 150, 50);
    EX_PL[59].setBounds(0, 500, 150, 50);
    EX_PL[60].setBounds(150, 50, 150, 50);
    EX_PL[61].setBounds(150, 100, 150, 50);
    EX_PL[62].setBounds(150, 150, 150, 50);
    EX_PL[63].setBounds(150, 200, 150, 50);
    EX_PL[64].setBounds(150, 250, 150, 50);
    EX_PL[65].setBounds(150, 300, 150, 50);
    EX_PL[66].setBounds(150, 350, 150, 50);
    EX_PL[67].setBounds(150, 400, 150, 50);
    EX_PL[68].setBounds(150, 450, 150, 50);
    EX_PL[69].setBounds(150, 500, 150, 50);
    EX_PL[70].setBounds(300, 50, 150, 50);
    EX_PL[71].setBounds(300, 100, 150, 50);
    EX_PL[72].setBounds(300, 150, 150, 50);
    EX_PL[73].setBounds(300, 200, 150, 50);
    EX_PL[74].setBounds(300, 250, 150, 50);
    EX_PL[75].setBounds(0, 50, 150, 50);
    EX_PL[76].setBounds(0, 100, 150, 50);
    EX_PL[77].setBounds(0, 150, 150, 50);
    EX_PL[78].setBounds(0, 200, 150, 50);
    EX_PL[79].setBounds(0, 250, 150, 50);
    EX_PL[80].setBounds(0, 300, 150, 50);
    EX_PL[81].setBounds(0, 350, 150, 50);
    EX_PL[82].setBounds(0, 400, 150, 50);
    EX_PL[83].setBounds(0, 450, 150, 50);
    EX_PL[84].setBounds(0, 500, 150, 50);
    EX_PL[85].setBounds(150, 50, 150, 50);
    EX_PL[86].setBounds(150, 100, 150, 50);
    EX_PL[87].setBounds(150, 150, 150, 50);
    EX_PL[88].setBounds(150, 200, 150, 50);
    EX_PL[89].setBounds(150, 250, 150, 50);
    EX_PL[90].setBounds(150, 300, 150, 50);
    EX_PL[91].setBounds(150, 350, 150, 50);
    EX_PL[92].setBounds(150, 400, 150, 50);
    EX_PL[93].setBounds(150, 450, 150, 50);
    EX_PL[94].setBounds(150, 500, 150, 50);
    EX_PL[95].setBounds(300, 50, 150, 50);
    EX_PL[96].setBounds(300, 100, 150, 50);
    EX_PL[97].setBounds(300, 150, 150, 50);
    EX_PL[98].setBounds(0, 50, 150, 50);
    EX_PL[99].setBounds(0, 100, 150, 50);
    EX_PL[100].setBounds(0, 150, 150, 50);
    EX_PL[101].setBounds(0, 200, 150, 50);
    EX_PL[102].setBounds(0, 250, 150, 50);
    EX_PL[103].setBounds(0, 300, 150, 50);
    EX_PL[104].setBounds(0, 350, 150, 50);
    EX_PL[105].setBounds(0, 400, 150, 50);
    EX_PL[106].setBounds(0, 450, 150, 50);
    EX_PL[107].setBounds(0, 500, 150, 50);
    EX_PL[108].setBounds(150, 50, 150, 50);
    EX_PL[109].setBounds(150, 100, 150, 50);
    EX_PL[110].setBounds(150, 150, 150, 50);
    EX_PL[111].setBounds(150, 200, 150, 50);
    EX_PL[112].setBounds(150, 250, 150, 50);
    EX_PL[113].setBounds(150, 300, 150, 50);
    EX_PL[114].setBounds(150, 350, 150, 50);
    EX_PL[115].setBounds(150, 400, 150, 50);
    EX_PL[116].setBounds(150, 450, 150, 50);
    EX_PL[117].setBounds(150, 500, 150, 50);
    EX_PL[118].setBounds(300, 50, 150, 50);
    EX_PL[119].setBounds(300, 100, 150, 50);
    EX_PL[120].setBounds(300, 150, 150, 50);
    EX_PL[121].setBounds(300, 200, 150, 50);
    EX_PL[122].setBounds(0, 50, 150, 50);
    EX_PL[123].setBounds(0, 100, 150, 50);
    EX_PL[124].setBounds(0, 150, 150, 50);
    EX_PL[125].setBounds(0, 200, 150, 50);
    EX_PL[126].setBounds(0, 250, 150, 50);
    EX_PL[127].setBounds(0, 300, 150, 50);
    EX_PL[128].setBounds(0, 350, 150, 50);
    EX_PL[129].setBounds(0, 400, 150, 50);
    EX_PL[130].setBounds(0, 450, 150, 50);
    EX_PL[131].setBounds(0, 500, 150, 50);
    EX_PL[132].setBounds(150, 50, 150, 50);
    EX_PL[133].setBounds(150, 100, 150, 50);
    EX_PL[134].setBounds(150, 150, 150, 50);
    EX_PL[135].setBounds(150, 200, 150, 50);
    EX_PL[136].setBounds(150, 250, 150, 50);
    EX_PL[137].setBounds(150, 300, 150, 50);
    EX_PL[138].setBounds(150, 350, 150, 50);
    EX_PL[139].setBounds(150, 400, 150, 50);
    EX_PL[140].setBounds(150, 450, 150, 50);
    EX_PL[141].setBounds(150, 500, 150, 50);
    EX_PL[142].setBounds(300, 50, 150, 50);
    EX_PL[143].setBounds(300, 100, 150, 50);
    EX_PL[144].setBounds(300, 150, 150, 50);
    EX_PL[145].setBounds(300, 200, 150, 50);
    EX_PL[146].setBounds(0, 50, 150, 50);
    EX_PL[147].setBounds(0, 100, 150, 50);
    EX_PL[148].setBounds(0, 150, 150, 50);
    EX_PL[149].setBounds(0, 200, 150, 50);
    EX_PL[150].setBounds(0, 250, 150, 50);
    EX_PL[151].setBounds(0, 300, 150, 50);
    EX_PL[152].setBounds(0, 350, 150, 50);
    EX_PL[153].setBounds(0, 400, 150, 50);
    EX_PL[154].setBounds(0, 450, 150, 50);
    EX_PL[155].setBounds(0, 500, 150, 50);
    EX_PL[156].setBounds(150, 50, 150, 50);
    EX_PL[157].setBounds(150, 100, 150, 50);
    EX_PL[158].setBounds(150, 150, 150, 50);
    EX_PL[159].setBounds(150, 200, 150, 50);
    EX_PL[160].setBounds(150, 250, 150, 50);
    EX_PL[161].setBounds(150, 300, 150, 50);
    EX_PL[162].setBounds(150, 350, 150, 50);
    EX_PL[163].setBounds(150, 400, 150, 50);
    EX_PL[164].setBounds(150, 450, 150, 50);
    EX_PL[165].setBounds(150, 500, 150, 50);
    EX_PL[166].setBounds(300, 50, 150, 50);
    EX_PL[167].setBounds(300, 100, 150, 50);
    EX_PL[168].setBounds(300, 150, 150, 50);
    EX_PL[169].setBounds(300, 200, 150, 50);
    EX_PL[170].setBounds(300, 250, 150, 50);
    EX_PL[171].setBounds(0, 50, 150, 50);
    EX_PL[172].setBounds(0, 100, 150, 50);
    EX_PL[173].setBounds(0, 150, 150, 50);
    EX_PL[174].setBounds(0, 200, 150, 50);
    EX_PL[175].setBounds(0, 250, 150, 50);
    EX_PL[176].setBounds(0, 300, 150, 50);
    EX_PL[177].setBounds(0, 350, 150, 50);
    EX_PL[178].setBounds(0, 400, 150, 50);
    EX_PL[179].setBounds(0, 450, 150, 50);
    EX_PL[180].setBounds(0, 500, 150, 50);
    EX_PL[181].setBounds(150, 50, 150, 50);
    EX_PL[182].setBounds(150, 100, 150, 50);
    EX_PL[183].setBounds(150, 150, 150, 50);
    EX_PL[184].setBounds(150, 200, 150, 50);
    EX_PL[185].setBounds(150, 250, 150, 50);
    EX_PL[186].setBounds(150, 300, 150, 50);
    EX_PL[187].setBounds(150, 350, 150, 50);
    EX_PL[188].setBounds(150, 400, 150, 50);
    EX_PL[189].setBounds(150, 450, 150, 50);
    EX_PL[190].setBounds(150, 500, 150, 50);
    EX_PL[191].setBounds(300, 50, 150, 50);
    EX_PL[192].setBounds(300, 100, 150, 50);
    EX_PL[193].setBounds(300, 150, 150, 50);
    EX_PL[194].setBounds(300, 200, 150, 50);
    EX_PL[195].setBounds(300, 250, 150, 50);
  }
  public void EX_InFra_Max_Parameters() {

  }
  public void EG_InFra_Norm_Parameters() {
    EG_EN[0].setBounds(0, 0, 820, 40);
    EG_EN[1].setBounds(0, 40, 820, 40);
    EG_EN[2].setBounds(0, 80, 820, 40);
    EG_EN[3].setBounds(0, 120, 820, 40);
    EG_EN[4].setBounds(0, 160, 820, 40);
    EG_EN[5].setBounds(0, 200, 820, 40);
    EG_EN[6].setBounds(0, 240, 820, 40);
    EG_EN[7].setBounds(0, 280, 820, 40);
    EG_EN[8].setBounds(0, 320, 820, 40);
    EG_EN[9].setBounds(0, 360, 820, 40);
    EG_EN[10].setBounds(0, 400, 820, 40);
    EG_EN[11].setBounds(0, 440, 820, 40);
    EG_EN[12].setBounds(0, 480, 820, 40);
    EG_EN[13].setBounds(0, 520, 820, 40);
    EG_EN[14].setBounds(0, 560, 820, 40);
    EG_EN[30].setBounds(0, 0, 820, 60);
    EG_EN[31].setBounds(0, 60, 820, 60);
    EG_EN[32].setBounds(0, 120, 820, 60);
    EG_EN[33].setBounds(0, 180, 820, 60);
    EG_EN[34].setBounds(0, 240, 820, 60);
    EG_EN[35].setBounds(0, 300, 820, 60);
    EG_EN[36].setBounds(0, 360, 820, 60);
    EG_EN[37].setBounds(0, 420, 820, 60);
    EG_EN[38].setBounds(0, 480, 820, 60);
    EG_EN[39].setBounds(0, 540, 820, 60);
    EG_EN[50].setBounds(0, 0, 410, 50);
    EG_EN[51].setBounds(0, 50, 410, 50);
    EG_EN[52].setBounds(0, 100, 410, 50);
    EG_EN[53].setBounds(0, 150, 410, 50);
    EG_EN[54].setBounds(0, 200, 410, 50);
    EG_EN[55].setBounds(0, 250, 410, 50);
    EG_EN[56].setBounds(0, 300, 410, 50);
    EG_EN[57].setBounds(0, 350, 410, 50);
    EG_EN[58].setBounds(0, 400, 410, 50);
    EG_EN[59].setBounds(0, 450, 410, 50);
    EG_EN[60].setBounds(0, 500, 410, 50);
    EG_EN[61].setBounds(0, 550, 410, 50);
    EG_EN[62].setBounds(0, 600, 410, 50);
    EG_EN[63].setBounds(410, 0, 410, 50);
    EG_EN[64].setBounds(410, 50, 410, 50);
    EG_EN[65].setBounds(410, 100, 410, 50);
    EG_EN[66].setBounds(410, 150, 410, 50);
    EG_EN[67].setBounds(410, 200, 410, 50);
    EG_EN[68].setBounds(410, 250, 410, 50);
    EG_EN[69].setBounds(410, 300, 410, 50);
    EG_EN[70].setBounds(410, 350, 410, 50);
    EG_EN[71].setBounds(410, 400, 410, 50);
    EG_EN[72].setBounds(410, 450, 410, 50);
    EG_EN[73].setBounds(410, 500, 410, 50);
    EG_EN[74].setBounds(410, 550, 410, 50);
    EG_EN[75].setBounds(0, 0, 410, 50);
    EG_EN[76].setBounds(0, 50, 410, 50);
    EG_EN[77].setBounds(0, 100, 410, 50);
    EG_EN[78].setBounds(0, 150, 410, 50);
    EG_EN[79].setBounds(0, 200, 410, 50);
    EG_EN[80].setBounds(0, 250, 410, 50);
    EG_EN[81].setBounds(0, 300, 410, 50);
    EG_EN[82].setBounds(0, 350, 410, 50);
    EG_EN[83].setBounds(0, 400, 410, 50);
    EG_EN[84].setBounds(0, 450, 410, 50);
    EG_EN[85].setBounds(0, 500, 410, 50);
    EG_EN[86].setBounds(0, 550, 410, 50);
    EG_EN[87].setBounds(0, 600, 410, 50);
    EG_EN[88].setBounds(410, 0, 410, 50);
    EG_EN[89].setBounds(410, 50, 410, 50);
    EG_EN[90].setBounds(410, 100, 410, 50);
    EG_EN[91].setBounds(410, 150, 410, 50);
    EG_EN[92].setBounds(410, 200, 410, 50);
    EG_EN[93].setBounds(410, 250, 410, 50);
    EG_EN[94].setBounds(410, 300, 410, 50);
    EG_EN[95].setBounds(410, 350, 410, 50);
    EG_EN[96].setBounds(410, 400, 410, 50);
    EG_EN[97].setBounds(410, 450, 410, 50);
    EG_EN[98].setBounds(0, 0, 410, 50);
    EG_EN[99].setBounds(0, 50, 410, 50);
    EG_EN[100].setBounds(0, 100, 410, 50);
    EG_EN[101].setBounds(0, 150, 410, 50);
    EG_EN[102].setBounds(0, 200, 410, 50);
    EG_EN[103].setBounds(0, 250, 410, 50);
    EG_EN[104].setBounds(0, 300, 410, 50);
    EG_EN[105].setBounds(0, 350, 410, 50);
    EG_EN[106].setBounds(0, 400, 410, 50);
    EG_EN[107].setBounds(0, 450, 410, 50);
    EG_EN[108].setBounds(0, 500, 410, 50);
    EG_EN[109].setBounds(0, 550, 410, 50);
    EG_EN[110].setBounds(0, 600, 410, 50);
    EG_EN[111].setBounds(410, 0, 410, 50);
    EG_EN[112].setBounds(410, 50, 410, 50);
    EG_EN[113].setBounds(410, 100, 410, 50);
    EG_EN[114].setBounds(410, 150, 410, 50);
    EG_EN[115].setBounds(410, 200, 410, 50);
    EG_EN[116].setBounds(410, 250, 410, 50);
    EG_EN[117].setBounds(410, 300, 410, 50);
    EG_EN[118].setBounds(410, 350, 410, 50);
    EG_EN[119].setBounds(410, 400, 410, 50);
    EG_EN[120].setBounds(410, 450, 410, 50);
    EG_EN[121].setBounds(410, 500, 410, 50);
    EG_EN[122].setBounds(0, 0, 410, 50);
    EG_EN[123].setBounds(0, 50, 410, 50);
    EG_EN[124].setBounds(0, 100, 410, 50);
    EG_EN[125].setBounds(0, 150, 410, 50);
    EG_EN[126].setBounds(0, 200, 410, 50);
    EG_EN[127].setBounds(0, 250, 410, 50);
    EG_EN[128].setBounds(0, 300, 410, 50);
    EG_EN[129].setBounds(0, 350, 410, 50);
    EG_EN[130].setBounds(0, 400, 410, 50);
    EG_EN[131].setBounds(0, 450, 410, 50);
    EG_EN[132].setBounds(0, 500, 410, 50);
    EG_EN[133].setBounds(0, 550, 410, 50);
    EG_EN[134].setBounds(0, 600, 410, 50);
    EG_EN[135].setBounds(410, 0, 410, 50);
    EG_EN[136].setBounds(410, 50, 410, 50);
    EG_EN[137].setBounds(410, 100, 410, 50);
    EG_EN[138].setBounds(410, 150, 410, 50);
    EG_EN[139].setBounds(410, 200, 410, 50);
    EG_EN[140].setBounds(410, 250, 410, 50);
    EG_EN[141].setBounds(410, 300, 410, 50);
    EG_EN[142].setBounds(410, 350, 410, 50);
    EG_EN[143].setBounds(410, 400, 410, 50);
    EG_EN[144].setBounds(410, 450, 410, 50);
    EG_EN[145].setBounds(410, 500, 410, 50);
    EG_EN[146].setBounds(0, 0, 410, 50);
    EG_EN[147].setBounds(0, 50, 410, 50);
    EG_EN[148].setBounds(0, 100, 410, 50);
    EG_EN[149].setBounds(0, 150, 410, 50);
    EG_EN[150].setBounds(0, 200, 410, 50);
    EG_EN[151].setBounds(0, 250, 410, 50);
    EG_EN[152].setBounds(0, 300, 410, 50);
    EG_EN[153].setBounds(0, 350, 410, 50);
    EG_EN[154].setBounds(0, 400, 410, 50);
    EG_EN[155].setBounds(0, 450, 410, 50);
    EG_EN[156].setBounds(0, 500, 410, 50);
    EG_EN[157].setBounds(0, 550, 410, 50);
    EG_EN[158].setBounds(0, 600, 410, 50);
    EG_EN[159].setBounds(410, 0, 410, 50);
    EG_EN[160].setBounds(410, 50, 410, 50);
    EG_EN[161].setBounds(410, 100, 410, 50);
    EG_EN[162].setBounds(410, 150, 410, 50);
    EG_EN[163].setBounds(410, 200, 410, 50);
    EG_EN[164].setBounds(410, 250, 410, 50);
    EG_EN[165].setBounds(410, 300, 410, 50);
    EG_EN[166].setBounds(410, 350, 410, 50);
    EG_EN[167].setBounds(410, 400, 410, 50);
    EG_EN[168].setBounds(410, 450, 410, 50);
    EG_EN[169].setBounds(410, 500, 410, 50);
    EG_EN[170].setBounds(410, 550, 410, 50);
    EG_EN[171].setBounds(0, 0, 410, 50);
    EG_EN[172].setBounds(0, 50, 410, 50);
    EG_EN[173].setBounds(0, 100, 410, 50);
    EG_EN[174].setBounds(0, 150, 410, 50);
    EG_EN[175].setBounds(0, 200, 410, 50);
    EG_EN[176].setBounds(0, 250, 410, 50);
    EG_EN[177].setBounds(0, 300, 410, 50);
    EG_EN[178].setBounds(0, 350, 410, 50);
    EG_EN[179].setBounds(0, 400, 410, 50);
    EG_EN[180].setBounds(0, 450, 410, 50);
    EG_EN[181].setBounds(0, 500, 410, 50);
    EG_EN[182].setBounds(0, 550, 410, 50);
    EG_EN[183].setBounds(0, 600, 410, 50);
    EG_EN[184].setBounds(410, 0, 410, 50);
    EG_EN[185].setBounds(410, 50, 410, 50);
    EG_EN[186].setBounds(410, 100, 410, 50);
    EG_EN[187].setBounds(410, 150, 410, 50);
    EG_EN[188].setBounds(410, 200, 410, 50);
    EG_EN[189].setBounds(410, 250, 410, 50);
    EG_EN[190].setBounds(410, 300, 410, 50);
    EG_EN[191].setBounds(410, 350, 410, 50);
    EG_EN[192].setBounds(410, 400, 410, 50);
    EG_EN[193].setBounds(410, 450, 410, 50);
    EG_EN[194].setBounds(410, 500, 410, 50);
    EG_EN[195].setBounds(410, 550, 410, 50);
    EG_PL[0].setBounds(0, 0, 820, 40);
    EG_PL[1].setBounds(0, 40, 820, 40);
    EG_PL[2].setBounds(0, 80, 820, 40);
    EG_PL[3].setBounds(0, 120, 820, 40);
    EG_PL[4].setBounds(0, 160, 820, 40);
    EG_PL[5].setBounds(0, 200, 820, 40);
    EG_PL[6].setBounds(0, 240, 820, 40);
    EG_PL[7].setBounds(0, 280, 820, 40);
    EG_PL[8].setBounds(0, 320, 820, 40);
    EG_PL[9].setBounds(0, 360, 820, 40);
    EG_PL[10].setBounds(0, 400, 820, 40);
    EG_PL[11].setBounds(0, 440, 820, 40);
    EG_PL[12].setBounds(0, 480, 820, 40);
    EG_PL[13].setBounds(0, 520, 820, 40);
    EG_PL[14].setBounds(0, 560, 820, 40);
    EG_PL[30].setBounds(0, 0, 820, 60);
    EG_PL[31].setBounds(0, 60, 820, 60);
    EG_PL[32].setBounds(0, 120, 820, 60);
    EG_PL[33].setBounds(0, 180, 820, 60);
    EG_PL[34].setBounds(0, 240, 820, 60);
    EG_PL[35].setBounds(0, 300, 820, 60);
    EG_PL[36].setBounds(0, 360, 820, 60);
    EG_PL[37].setBounds(0, 420, 820, 60);
    EG_PL[38].setBounds(0, 480, 820, 60);
    EG_PL[39].setBounds(0, 540, 820, 60);
    EG_PL[50].setBounds(0, 0, 410, 50);
    EG_PL[51].setBounds(0, 50, 410, 50);
    EG_PL[52].setBounds(0, 100, 410, 50);
    EG_PL[53].setBounds(0, 150, 410, 50);
    EG_PL[54].setBounds(0, 200, 410, 50);
    EG_PL[55].setBounds(0, 250, 410, 50);
    EG_PL[56].setBounds(0, 300, 410, 50);
    EG_PL[57].setBounds(0, 350, 410, 50);
    EG_PL[58].setBounds(0, 400, 410, 50);
    EG_PL[59].setBounds(0, 450, 410, 50);
    EG_PL[60].setBounds(0, 500, 410, 50);
    EG_PL[61].setBounds(0, 550, 410, 50);
    EG_PL[62].setBounds(0, 600, 410, 50);
    EG_PL[63].setBounds(410, 0, 410, 50);
    EG_PL[64].setBounds(410, 50, 410, 50);
    EG_PL[65].setBounds(410, 100, 410, 50);
    EG_PL[66].setBounds(410, 150, 410, 50);
    EG_PL[67].setBounds(410, 200, 410, 50);
    EG_PL[68].setBounds(410, 250, 410, 50);
    EG_PL[69].setBounds(410, 300, 410, 50);
    EG_PL[70].setBounds(410, 350, 410, 50);
    EG_PL[71].setBounds(410, 400, 410, 50);
    EG_PL[72].setBounds(410, 450, 410, 50);
    EG_PL[73].setBounds(410, 500, 410, 50);
    EG_PL[74].setBounds(410, 550, 410, 50);
    EG_PL[75].setBounds(0, 0, 410, 50);
    EG_PL[76].setBounds(0, 50, 410, 50);
    EG_PL[77].setBounds(0, 100, 410, 50);
    EG_PL[78].setBounds(0, 150, 410, 50);
    EG_PL[79].setBounds(0, 200, 410, 50);
    EG_PL[80].setBounds(0, 250, 410, 50);
    EG_PL[81].setBounds(0, 300, 410, 50);
    EG_PL[82].setBounds(0, 350, 410, 50);
    EG_PL[83].setBounds(0, 400, 410, 50);
    EG_PL[84].setBounds(0, 450, 410, 50);
    EG_PL[85].setBounds(0, 500, 410, 50);
    EG_PL[86].setBounds(0, 550, 410, 50);
    EG_PL[87].setBounds(0, 600, 410, 50);
    EG_PL[88].setBounds(410, 0, 410, 50);
    EG_PL[89].setBounds(410, 50, 410, 50);
    EG_PL[90].setBounds(410, 100, 410, 50);
    EG_PL[91].setBounds(410, 150, 410, 50);
    EG_PL[92].setBounds(410, 200, 410, 50);
    EG_PL[93].setBounds(410, 250, 410, 50);
    EG_PL[94].setBounds(410, 300, 410, 50);
    EG_PL[95].setBounds(410, 350, 410, 50);
    EG_PL[96].setBounds(410, 400, 410, 50);
    EG_PL[97].setBounds(410, 450, 410, 50);
    EG_PL[98].setBounds(0, 0, 410, 50);
    EG_PL[99].setBounds(0, 50, 410, 50);
    EG_PL[100].setBounds(0, 100, 410, 50);
    EG_PL[101].setBounds(0, 150, 410, 50);
    EG_PL[102].setBounds(0, 200, 410, 50);
    EG_PL[103].setBounds(0, 250, 410, 50);
    EG_PL[104].setBounds(0, 300, 410, 50);
    EG_PL[105].setBounds(0, 350, 410, 50);
    EG_PL[106].setBounds(0, 400, 410, 50);
    EG_PL[107].setBounds(0, 450, 410, 50);
    EG_PL[108].setBounds(0, 500, 410, 50);
    EG_PL[109].setBounds(0, 550, 410, 50);
    EG_PL[110].setBounds(0, 600, 410, 50);
    EG_PL[111].setBounds(410, 0, 410, 50);
    EG_PL[112].setBounds(410, 50, 410, 50);
    EG_PL[113].setBounds(410, 100, 410, 50);
    EG_PL[114].setBounds(410, 150, 410, 50);
    EG_PL[115].setBounds(410, 200, 410, 50);
    EG_PL[116].setBounds(410, 250, 410, 50);
    EG_PL[117].setBounds(410, 300, 410, 50);
    EG_PL[118].setBounds(410, 350, 410, 50);
    EG_PL[119].setBounds(410, 400, 410, 50);
    EG_PL[120].setBounds(410, 450, 410, 50);
    EG_PL[121].setBounds(410, 500, 410, 50);
    EG_PL[122].setBounds(0, 0, 410, 50);
    EG_PL[123].setBounds(0, 50, 410, 50);
    EG_PL[124].setBounds(0, 100, 410, 50);
    EG_PL[125].setBounds(0, 150, 410, 50);
    EG_PL[126].setBounds(0, 200, 410, 50);
    EG_PL[127].setBounds(0, 250, 410, 50);
    EG_PL[128].setBounds(0, 300, 410, 50);
    EG_PL[129].setBounds(0, 350, 410, 50);
    EG_PL[130].setBounds(0, 400, 410, 50);
    EG_PL[131].setBounds(0, 450, 410, 50);
    EG_PL[132].setBounds(0, 500, 410, 50);
    EG_PL[133].setBounds(0, 550, 410, 50);
    EG_PL[134].setBounds(0, 600, 410, 50);
    EG_PL[135].setBounds(410, 0, 410, 50);
    EG_PL[136].setBounds(410, 50, 410, 50);
    EG_PL[137].setBounds(410, 100, 410, 50);
    EG_PL[138].setBounds(410, 150, 410, 50);
    EG_PL[139].setBounds(410, 200, 410, 50);
    EG_PL[140].setBounds(410, 250, 410, 50);
    EG_PL[141].setBounds(410, 300, 410, 50);
    EG_PL[142].setBounds(410, 350, 410, 50);
    EG_PL[143].setBounds(410, 400, 410, 50);
    EG_PL[144].setBounds(410, 450, 410, 50);
    EG_PL[145].setBounds(410, 500, 410, 50);
    EG_PL[146].setBounds(0, 0, 410, 50);
    EG_PL[147].setBounds(0, 50, 410, 50);
    EG_PL[148].setBounds(0, 100, 410, 50);
    EG_PL[149].setBounds(0, 150, 410, 50);
    EG_PL[150].setBounds(0, 200, 410, 50);
    EG_PL[151].setBounds(0, 250, 410, 50);
    EG_PL[152].setBounds(0, 300, 410, 50);
    EG_PL[153].setBounds(0, 350, 410, 50);
    EG_PL[154].setBounds(0, 400, 410, 50);
    EG_PL[155].setBounds(0, 450, 410, 50);
    EG_PL[156].setBounds(0, 500, 410, 50);
    EG_PL[157].setBounds(0, 550, 410, 50);
    EG_PL[158].setBounds(0, 600, 410, 50);
    EG_PL[159].setBounds(410, 0, 410, 50);
    EG_PL[160].setBounds(410, 50, 410, 50);
    EG_PL[161].setBounds(410, 100, 410, 50);
    EG_PL[162].setBounds(410, 150, 410, 50);
    EG_PL[163].setBounds(410, 200, 410, 50);
    EG_PL[164].setBounds(410, 250, 410, 50);
    EG_PL[165].setBounds(410, 300, 410, 50);
    EG_PL[166].setBounds(410, 350, 410, 50);
    EG_PL[167].setBounds(410, 400, 410, 50);
    EG_PL[168].setBounds(410, 450, 410, 50);
    EG_PL[169].setBounds(410, 500, 410, 50);
    EG_PL[170].setBounds(410, 550, 410, 50);
    EG_PL[171].setBounds(0, 0, 410, 50);
    EG_PL[172].setBounds(0, 50, 410, 50);
    EG_PL[173].setBounds(0, 100, 410, 50);
    EG_PL[174].setBounds(0, 150, 410, 50);
    EG_PL[175].setBounds(0, 200, 410, 50);
    EG_PL[176].setBounds(0, 250, 410, 50);
    EG_PL[177].setBounds(0, 300, 410, 50);
    EG_PL[178].setBounds(0, 350, 410, 50);
    EG_PL[179].setBounds(0, 400, 410, 50);
    EG_PL[180].setBounds(0, 450, 410, 50);
    EG_PL[181].setBounds(0, 500, 410, 50);
    EG_PL[182].setBounds(0, 550, 410, 50);
    EG_PL[183].setBounds(0, 600, 410, 50);
    EG_PL[184].setBounds(410, 0, 410, 50);
    EG_PL[185].setBounds(410, 50, 410, 50);
    EG_PL[186].setBounds(410, 100, 410, 50);
    EG_PL[187].setBounds(410, 150, 410, 50);
    EG_PL[188].setBounds(410, 200, 410, 50);
    EG_PL[189].setBounds(410, 250, 410, 50);
    EG_PL[190].setBounds(410, 300, 410, 50);
    EG_PL[191].setBounds(410, 350, 410, 50);
    EG_PL[192].setBounds(410, 400, 410, 50);
    EG_PL[193].setBounds(410, 450, 410, 50);
    EG_PL[194].setBounds(410, 500, 410, 50);
    EG_PL[195].setBounds(410, 550, 410, 50);
  }
  public void EG_InFra_Max_Parameters() {

  }
  @Override
  public void propertyChange(PropertyChangeEvent evt) {
    if (EX_InFra.isMaximum()) {
      EX_InFra_Max_Parameters();
      System.out.println("Words and expressions maximized");
    } else if (EX_InFra.isIcon()) {
      System.out.println("Words and expressions iconified");
    }
    if (EX_InFra.isSelected()) {

    } else {
      EX_InFra_Norm_Parameters();
    }
    //		if(EG_InFra.isMaximum()) {
    //			EG_InFra_Max_Parameters();
    //			System.out.println("Example sentences maximized");
    //		}
    //		else if(EG_InFra.isIcon()) {
    //			System.out.println("Example sentences iconified");
    //		}
    //		else{
    //			EG_InFra_Norm_Parameters();
    //		}
  }
}